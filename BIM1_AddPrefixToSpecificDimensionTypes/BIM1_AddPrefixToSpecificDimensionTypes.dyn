{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "BIM1_PrefixDimensions",
  "ElementResolver": {
    "ResolutionMap": {
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Dimension.SetPrefix@string[]",
      "Id": "950eef0ce0dc4d02aaeae6ddef550fe7",
      "Inputs": [
        {
          "Id": "63b6fcda47ba434c9f16c5be77834039",
          "Name": "dimension",
          "Description": "Revit.Elements.Dimension",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "94843e6e326e4979a51a71b88a557c76",
          "Name": "values",
          "Description": "Préfixe\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4315540d96844f8d9be613ebd88db476",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Définir le préfixe\n\nDimension.SetPrefix (values: string[]): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "f111651db94a4f41a3510914f45ec7e6",
      "Inputs": [
        {
          "Id": "a367043427b44710a8d64867f403a067",
          "Name": "str",
          "Description": "Chaîne dans laquelle effectuer la recherche.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8ce8d2f9f2746f58596a4d469875b04",
          "Name": "searchFor",
          "Description": "Sous-chaîne à rechercher.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06a6e18158f44c6b9a21bb675870dbd9",
          "Name": "ignoreCase",
          "Description": "Si la comparaison prend en compte la casse.\n\nbool\nValeur par défaut : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cf8cbca36a14c8a856e84dadd1b985d",
          "Name": "bool",
          "Description": "Si la chaîne contient la sous-chaîne.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Détermine si la chaîne indiquée contient la sous-chaîne indiquée.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "69d7faad79cc48afa11eceeec075a441",
      "Inputs": [
        {
          "Id": "8e4436a79fbf4c5baeca87e37723945e",
          "Name": "list",
          "Description": "Liste à filtrer.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fb712e0aa4a45eeb4344f61569654be",
          "Name": "mask",
          "Description": "Liste de booléens représentant un masque.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b776c106edb34f6895c1fb580be12d06",
          "Name": "in",
          "Description": "Eléments dont l'index de masque est True.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "448bcf8b99f64cf5b391c6408e204aa8",
          "Name": "out",
          "Description": "Eléments dont l'index de masque est faux.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filtre une séquence en recherchant les index correspondants dans une liste distincte de booléens.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nimport re\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.DB.Architecture import *\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nclr.AddReference('DSCoreNodes')\nimport DSCore\n\n#current document\ndoc = DocumentManager.Instance.CurrentDBDocument\n#collector short\nfec = FilteredElementCollector\n\n#empty lists\nelem_types = []\nnumtypes = []\nelem_names = []\n\n#inputs\nclasses = IN[0]\n\n#Collecting all elements of class\nfor clas in classes :\n\telem_type = fec(doc).OfClass(eval(clas)).ToElements()\n\telem_types.append(elem_type)\n#get element type names\n\tnum_types = 0\n\tfor elems in elem_type :\n\t\telem_name = Element.Name.__get__(elems)\n\t\telem_names.append(elem_name)\n\t\tnum_types += 1\n\tnumtypes.append(num_types)\n\ndef list_chop (chop_list, chop_lengths) :\n\tchopped_list = []\n\tsub_dex = 0\n\tsub_length = 0\n\n\twhile sub_dex < len(chop_list) and sub_length < len(chop_lengths) :\n\t\tsublist = []\n\t\tfor i in range(int(chop_lengths[sub_length])) :\n\t\t\tif sub_dex < len(chop_list) :\n\t\t\t\tsublist.append(chop_list[sub_dex])\n\t\t\t\tsub_dex += 1\n\t\t\telse :\n\t\t\t\tbreak\n\t\tchopped_list.append(sublist)\n\t\tsub_length += 1\n\treturn chopped_list\n\nchopped_names = list_chop(elem_names,numtypes)\n\nOUT = elem_types, chopped_names",
      "VariableInputPorts": true,
      "Id": "e020bb979e9741edb635d0d434788ee5",
      "Inputs": [
        {
          "Id": "2f1503d111c44fe9a52a4ea2ed9d5bf0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b86b414424040b5ad80d05c02143777",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Dimension\"];",
      "Id": "94bd0ded3cb346778ec118dcf4f43bf4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c04d7894bbc44ce9d777c4e53422d22",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];",
      "Id": "de6d6bf51d3b498b9c32e83a5bd725df",
      "Inputs": [
        {
          "Id": "1ef8e96d99c1432f899b2fd4824f1e29",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a3f13040c814648825f8dda52b20108",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea9783f468ac4fa38f99697c0c8d7d3e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f1a052673bcd4975b3adbad323c0ac8e",
      "Inputs": [
        {
          "Id": "9ff891fdab5a430e844e5727f97b55b8",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bc88cd01d1b45b1996ab663619151ab",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d5e0c8fe961426ba1d7304c0e4a66ff",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c996f15409a48beb7df3129e249c111",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ac0c13f074f44f0b1e5a5bfde7bea10",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2412da0dc81549d4a634d18cdc23f6e5",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "45b4c136126349afa68412c55fd14dad",
      "Inputs": [
        {
          "Id": "8cfb89dbd1444a69b1da5408c0d0bee1",
          "Name": "test",
          "Description": "Tester le bloc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c59237d8540d42d69ab40b901a461c8c",
          "Name": "true",
          "Description": "Bloc True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c34ce33dbc414154ad375d78c0f083cd",
          "Name": "false",
          "Description": "Bloc faux",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a9ea0929c4b4d0fba5a3ba2f4eb20b0",
          "Name": "result",
          "Description": "résultat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Instruction conditionnelle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];\nx[3];\nx[4];",
      "Id": "e53598637224497f9aaefa9fc858cd54",
      "Inputs": [
        {
          "Id": "8828c43bef3b4ef8aae60e5b4432ffa1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09755b874b6d41c9b0e6022c99d91d77",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2784b7dc37814c0d8d8f1f8c1f271002",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0249b5ce0ae64eeba890be5f725ae21d",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185db7cfe4f141a1bc3e8effa37014e8",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79379d9f38e444299dad6bfeb21df8ba",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Prefix",
      "Id": "113d59c6f40543c5a49c04ea236762dc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "37164d83ec0f4f06943780dbc4b9ad61",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c5c725ca72d248e38bfd3fea3be4b1e1",
      "Inputs": [
        {
          "Id": "bcb19765f1584541af8ef566f8092e56",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7dd488db2cb494abc35efcc5626c22a",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82d8d0a04c23494daeb36e8b8eef3593",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca145dceba564369802058e34943838c",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25c7f5d52e1b4049bf32eb1999b95ae0",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7af719a9f0eb4fdbbcfab45b6a3c285c",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The dimension type name must contain",
      "Id": "762dca010f7140869d4f1952b8b2d221",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98ca2afb1fa14f0898a2f57b8c898864",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Choose a prefix for a specific dimension type",
      "Id": "798838368f464a3f81aadb9727b61125",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87d7c54025cd459d838292d06b97df8b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Jean-Marc Couffin, BIM One Inc. 2018\r\n\r\nimport clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nlang = str(doc.Application.Language)\r\n\r\nif lang ==\"French\":\r\n\tx = True\r\nelse:\r\n\tx = False\r\n\t\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "0224519342fc46c787943c457edaebcf",
      "Inputs": [
        {
          "Id": "1548c25f40ac4b45ace028ec8a92729e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6955d565d50e4d58b03280d1fd3bbf87",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\BIM One\\B1M-Technical\\00_BIM1_STANDARDS\\01_LOGICIELS_OUTILS\\DYNAMO\\01_SCRIPTS\\Logo.png",
      "InputValue": "..\\..\\Logo.png",
      "NodeType": "ExtensionNode",
      "Id": "481b8621f72945a4a004860d30e72d7d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "49a6cc2d23aa46a0824e6a36f9b5a8f9",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Vous permet de sélectionner un fichier sur le système de façon à obtenir son nom de fichier"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "500;",
      "Id": "4a7ec22650234e9e945de6dc1d8c1c7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4d697689be94d56bb962571b5008a8a",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Annuler/Cancel\";",
      "Id": "dcb5c6f55bfb43f3a2cbc2ef1aa388fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a89571bdaa4477e98e312270af6c0fb",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "c52d8f6e760a47b2aab56dcb1eb78df6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8137a9b05d914c21a18ee1e93fae72bc",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ButtonText_optional : string = \"OK\";",
      "Id": "8a5ca8eabe75449588587ddab8d3cf0b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5513c3b756164ceebfd1e4051991bed1",
          "Name": "",
          "Description": "ButtonText_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "7c3c88e722b848daaca1ecfa3e02b5d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dae114c9223e444998653a39d7ec7523",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Préfixe",
      "Id": "14d61402d7cc41e4bdde8586f58c9f10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0db0ba662f9342ffacedae6f29c2a317",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Choisir un préfixe pour un type de dimensions donné",
      "Id": "054a8c7479d342da8deed216d74ea05e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5645fadbe03e4e9c86e92426e2831379",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CE QUE LE NOM DU TYPE DE COTE DOIT CONTENIR",
      "Id": "08fda3bcef3345d28e9528882355144f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2083e6bb05f4074bdfcb95fe793b804",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\t\r\nimport clr\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle \r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr\r\n\tfrom System.ComponentModel import Container\r\n\t\r\n\t\r\n\timport sys\r\n\tpyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\n\tsys.path.append(pyt_path)\r\n\timport os\r\n\timport webbrowser\r\n\timport unicodedata\r\n\t\r\n\tclr.AddReference('RevitAPIUI')\r\n\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\tclr.AddReference('RevitNodes')\r\n\timport Revit\r\n\tclr.ImportExtensions(Revit.Elements)\r\n\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\r\n\tclr.AddReference('RevitServices')\r\n\tfrom RevitServices.Persistence import DocumentManager\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\tclr.AddReference('RevitAPI')\r\n\tfrom Autodesk.Revit.DB import FilteredElementCollector , View , ViewType , ElementId , FamilyInstance , Document , UnitType , UnitUtils\r\n\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\tviewindex = 0\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\t\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\r\n\tclass selectionfilter(ISelectionFilter):\r\n\t\tdef __init__(self,category):\r\n\t\t\tself.category = category\r\n\t\tdef AllowElement(self,element):\r\n\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\treturn True\r\n\t\t\telse:\r\n\t\t\t\treturn False\r\n\t\tdef AllowReference(reference,point):\r\n\t\t\treturn False\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'BIM One | PrefixDimensions, UI Powered by DATA-SHAPES'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == TextBox:\r\n\t    \t\t\t\tself.values.append(f.Text)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\r\n\t    \t\t\t\telse:\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\telse:\r\n    \t\t\t\t\t\t\tself.values.append([])\r\n\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80,sender.Height + 5))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tactiveview = doc.ActiveView\r\n\t\t\t\t\tbbox = element.get_BoundingBox(activeview)\t\r\n\t\t\t\t\tactiveuiview = [v for v in uiviews if v.ViewId == activeview.Id][0]\r\n\t\t\t\t\tactiveuiview.ZoomAndCenterRectangle(bbox.Min, bbox.Max)\r\n\t\t\t\t\tuidoc.RefreshActiveView()\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\t\tif (viewindex >= len(viewsforelement) -1) or not (element.Id in uidoc.Selection.GetElementIds()):\r\n\t\t\t\t\t\tviewindex = 0\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tviewindex += 1\r\n\t\t\t\t\tuidoc.RequestViewChange(dbView)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\tform.topmost()\t\r\n\tform.ControlBox = False\r\n\txlabel = 25\r\n\txinput = 150\r\n\tformy = 10\r\n\tif IN[8] > 350:\tformwidth = IN[8]\r\n\telse: formwidth = 350\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - 2 * xlabel,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + 15\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\tlabel.Text = j.inputname\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height + 25\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or i == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height)+5)\r\n\t\t\t\t\trball.Width = 70\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(80,(j.height)+5)\r\n\t\t\t\t\trbnone.Width = 90\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = TextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 45 ,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25, tn.Bottom-tn.Top+25)  \r\n\t\t\t\ty = gb.Bottom + 25\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35\r\n\t\t\t\t\t\trb.Location = Point(20,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot +20\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 30\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50\r\n\t\t\t\tdisplabel.Location = Point(0,5)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25,y+25)\r\n\t\t\t\ty = im.Bottom + 25\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25,xinput-25,80,90,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,xinput,40,120,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\t\tlogopaths = []\r\n\t\t\tfor child in root:\r\n\t\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\t\tfor path in child:\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\tdeflogopath = \"\"\r\n\t\t\tfor path in logopaths:\r\n\t\t\t\tif deflogopath == \"\":\r\n\t\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\texcept: \r\n\t\t\t\t\t\t\tpass\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20\r\n\t\t\tylogo = formy+10\r\n\t\telse:\r\n\t\t\txlogo = 30\r\n\t\t\tylogo = formy\r\n\t\tsize = 110\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tpass\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400:\r\n\t\t\tformy += 50\r\n\t\t\txinput = 270\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20\r\n\telse:\r\n\t\tformy += 50\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65,formy+30)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] and IN[7] > 0:\r\n\t\tformbody_calculatedheight = IN[7] - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100: formbody_calculatedheight = 100\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\tuiviews = uidoc.GetOpenUIViews()\r\n\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\tactiveviewid = doc.ActiveView.Id\r\n\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\telse:\r\n\t\tactiveUIView = uiviews[0]\r\n\trect = activeUIView.GetWindowRectangle()\r\n\tform.StartPosition = FormStartPosition.Manual\r\n\tform.Location = Point(rect.Left-7,rect.Top)\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result,True, form.cancelled\r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017'] , False, False\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!'] , False, False\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "83d4ae0fb3174a19bad0e455d79d4fe0",
      "Inputs": [
        {
          "Id": "a8e3db5abdb74da7b00d39fdce150283",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d942d556afea48599dfa7988afa497f1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "996a6804188c4f59acc68631b61aeefe",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7199e7875fd4071870da7ff466448c5",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46cdeae3bcb246f49c51d39f336f4cbc",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a328be355da4350a74c48efee6e83fe",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "509b4e4bb38b44ea8fac93bfc39aba63",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93d4f2263e7f48eebc9094ccecb75407",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "040102912b4e49bca207ec5d4bd7078c",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "647e74650a2644989efd401a79ceda97",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "OUT[0][0];\nOUT[0][1];\nOUT[2];",
      "Id": "e5f8b98abd384e3699318e4d69a58bde",
      "Inputs": [
        {
          "Id": "ffccea2ad32b4c818f06412c3a2b284f",
          "Name": "OUT",
          "Description": "OUT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8c69df95f364c98bf084258493f09e1",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "925dc2d26009409a9e4f0f76b701744c",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11b2fe7dbb2b44b78bb458a0b906cf94",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Description_optional : string = \"\";",
      "Id": "df2ca1760e24476abe9393489f86884d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e90563a031234250b423af72b3fb7904",
          "Name": "",
          "Description": "Description_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "4152be58542f4ca7bc638a1e8f6da277",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e83481369b774762a5bea68af4e86894",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Sélection entre True et False."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "06b16d67863d49ff9e2dbb4f3de52fe5",
      "Inputs": [
        {
          "Id": "519680ef1c0847cab91633b3edbba4c7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7880fb83eda141a2b95b58f4483820eb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a564109d2f1411e84fd5e1ba6792cd7",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DefaultText: string = \"±\";",
      "Id": "05ce764e031647eea8830d299a6b7230",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a214e120b8fe4c7fbd8ad402def624ec",
          "Name": "",
          "Description": "DefaultText",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "36268ec417814370937b86651e665e78",
      "Inputs": [
        {
          "Id": "279d628427ad4e708ab812af5e91e3e2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "354b179e22224717b99f5877b3a18cb1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6aef6db63602499a8c7a9216e93b9e43",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "450d53caaf1c41188f647ee9d655ff06",
      "Inputs": [
        {
          "Id": "92d827dee94745b3844eab3fd7600c4e",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a845a3f6a4174477a60eba619b9ee030",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e272306066544faab1c81e3a1a79ced",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[passthrough,waitfor][0];",
      "Id": "341e845e08dc481eb38097a5d49e9fc0",
      "Inputs": [
        {
          "Id": "6f7deb04c7cd4e6faab9c0d4e24ba9d5",
          "Name": "passthrough",
          "Description": "passthrough",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b494f14916f46de85e6338510122b67",
          "Name": "waitfor",
          "Description": "waitfor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0dc8e7a593a426dabedeea5aee7c445",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "WHAT THE DIMENSION TYPE NAME MUST CONTAINS",
      "Id": "57adbad2db984d9c8a13cba4ed63f58c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4530dca2a8204e18927b46bbdef62ffc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Le nom du type de dimension doit contenir:",
      "Id": "8a5e80500d3944908e8e2bc80f2e9887",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c7e61250d3f443384797df83ddefdde",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "830b875501474c738527d4f943086c25",
      "Inputs": [
        {
          "Id": "1b2ee956a238400387893175401e0f68",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5da3a8e67f6f4e4faaaba90da18961ea",
          "Name": "preserveIndices",
          "Description": "Fournit une option permettant de conserver les index de données pour que les valeurs nulles qui ne sont pas des valeurs de fin ne puissent pas être éliminées par filtrage\n\nbool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3ea885a7695460999b85aa00feadaae",
          "Name": "var[]..[]",
          "Description": "Une liste nettoyée des listes vides et valeurs nulles",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Nettoie les données des listes vides et valeurs nulles d'une liste donnée de cotes arbitraires\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2e0b56b21e54472cad63ed91286ab9a6",
      "Inputs": [
        {
          "Id": "4d742dc3030b482189fe15ab6042a42a",
          "Name": "list",
          "Description": "Obtenir le nombre d'éléments de cette liste.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42735f496a5345b98d8db12fcfe5eb70",
          "Name": "count",
          "Description": "Longueur de la liste.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Renvoie le nombre d'éléments stockés dans la liste indiquée.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# BIM One Inc. - Jean-Marc Couffin - 2019\r\n\r\nimport clr\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\n\r\n\r\nTitle = IN[0]\r\nTotalCount = str(IN[1])\r\nProcessed = IN[2]\r\n\r\nTaskDialog.Show( Title, TotalCount + ' ' + Processed )\r\n",
      "VariableInputPorts": true,
      "Id": "74c964c8ce1b4092aa91d897ad0ef5b5",
      "Inputs": [
        {
          "Id": "e6ee2a8434894d70b9437e805b6e694a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ee8976941a94a64ad3908e949d07f60",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d4e5d4d76854b9abd6f1aaaa5114753",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dca3f81b36ee486f8d63bf457b58b192",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f7807fcce3454afa97e5df3480c17e36",
      "Inputs": [
        {
          "Id": "3ff94a97c28443f2832cf07b28f9dc70",
          "Name": "list",
          "Description": "Liste à aplanir.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cace0c69a89d49d1a6d560aa065748d1",
          "Name": "amt",
          "Description": "Couches d'imbrication à supprimer.\n\nint\nValeur par défaut : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cbbb7623a1f4e13b66617d97d869c9e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplanit une liste imbriquée de listes en fonction d'une quantité spécifique.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "6c74f145a7784211839a13d9bf2b71fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5aa8c5713e348ad8b5cbb79091052cf",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Dimension.Prefix",
      "Id": "740cd9d01a7845f980410148e5bed6fa",
      "Inputs": [
        {
          "Id": "a7588cac56534cb291528091ddf85478",
          "Name": "dimension",
          "Description": "Revit.Elements.Dimension",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b8847ed4b6044159cfb3cba650225ef",
          "Name": "string[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtenir le préfixe\n\nDimension.Prefix: string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " Dimensions processed",
      "Id": "ebf7f3254f3942a9b24367eafab03989",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8d8072a837d49fe9e1b643c9fab59ad",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " Cotes avec le nouveau préfixe",
      "Id": "4a1b1fd54cf04c1d80c2f9bbfe164dcd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c4d5a6bd6be540249c80a0d125f81b21",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[passthrough,waitfor][0];",
      "Id": "aab22816b8464bb2ad9df205c9eb468c",
      "Inputs": [
        {
          "Id": "0e9fcaac68654c0ebfb44150c26cb7b2",
          "Name": "passthrough",
          "Description": "passthrough",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca9f843e888f44829dbddb66802591a4",
          "Name": "waitfor",
          "Description": "waitfor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94ce525942a84233b1b02f65d63f1aaa",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    }
  ],
  "Connectors": [
    {
      "Start": "4315540d96844f8d9be613ebd88db476",
      "End": "ca9f843e888f44829dbddb66802591a4",
      "Id": "17a2b64773484d788bed30360ac18c56"
    },
    {
      "Start": "3cf8cbca36a14c8a856e84dadd1b985d",
      "End": "6fb712e0aa4a45eeb4344f61569654be",
      "Id": "3d9f6e66a196466db55bcac88e01a084"
    },
    {
      "Start": "b776c106edb34f6895c1fb580be12d06",
      "End": "63b6fcda47ba434c9f16c5be77834039",
      "Id": "4499fbd3057549d1a4b22276e21ff243"
    },
    {
      "Start": "b776c106edb34f6895c1fb580be12d06",
      "End": "0e9fcaac68654c0ebfb44150c26cb7b2",
      "Id": "5bce400b9fd74d40a1818799ac4081c2"
    },
    {
      "Start": "9b86b414424040b5ad80d05c02143777",
      "End": "1ef8e96d99c1432f899b2fd4824f1e29",
      "Id": "b4b450d77d744e04a6da9bbb4f3d953a"
    },
    {
      "Start": "7c04d7894bbc44ce9d777c4e53422d22",
      "End": "2f1503d111c44fe9a52a4ea2ed9d5bf0",
      "Id": "d0d7d8c3a7904bb4a2df5b99fec88825"
    },
    {
      "Start": "9a3f13040c814648825f8dda52b20108",
      "End": "8e4436a79fbf4c5baeca87e37723945e",
      "Id": "2775a054121d4e43a7054e8e1722dfc9"
    },
    {
      "Start": "ea9783f468ac4fa38f99697c0c8d7d3e",
      "End": "a367043427b44710a8d64867f403a067",
      "Id": "ecc76cbc0dc8448da06c50c0a94294de"
    },
    {
      "Start": "2412da0dc81549d4a634d18cdc23f6e5",
      "End": "c59237d8540d42d69ab40b901a461c8c",
      "Id": "fe249013645c429c923b7cd31d8cc743"
    },
    {
      "Start": "7a9ea0929c4b4d0fba5a3ba2f4eb20b0",
      "End": "8828c43bef3b4ef8aae60e5b4432ffa1",
      "Id": "0decf502dd0746d2a1f52eeaea9a1327"
    },
    {
      "Start": "09755b874b6d41c9b0e6022c99d91d77",
      "End": "519680ef1c0847cab91633b3edbba4c7",
      "Id": "7be5e4c41d1c4887bd37cfb4271e5e97"
    },
    {
      "Start": "2784b7dc37814c0d8d8f1f8c1f271002",
      "End": "e7199e7875fd4071870da7ff466448c5",
      "Id": "6e9b2cdd863b4b47aa7dc458ff479b7c"
    },
    {
      "Start": "0249b5ce0ae64eeba890be5f725ae21d",
      "End": "279d628427ad4e708ab812af5e91e3e2",
      "Id": "c0dd2dc056da4300b6eaddf2592ece1d"
    },
    {
      "Start": "185db7cfe4f141a1bc3e8effa37014e8",
      "End": "354b179e22224717b99f5877b3a18cb1",
      "Id": "64a48087354442bc996edfb65cc1ceac"
    },
    {
      "Start": "79379d9f38e444299dad6bfeb21df8ba",
      "End": "1d4e5d4d76854b9abd6f1aaaa5114753",
      "Id": "236afee10ba24f54bba8b4cb540f49fa"
    },
    {
      "Start": "79379d9f38e444299dad6bfeb21df8ba",
      "End": "e6ee2a8434894d70b9437e805b6e694a",
      "Id": "bde67882a1b54e11918ef8ff369d0585"
    },
    {
      "Start": "37164d83ec0f4f06943780dbc4b9ad61",
      "End": "bcb19765f1584541af8ef566f8092e56",
      "Id": "9ce8103e6e9b41a187625eac955edfd9"
    },
    {
      "Start": "7af719a9f0eb4fdbbcfab45b6a3c285c",
      "End": "c34ce33dbc414154ad375d78c0f083cd",
      "Id": "dca09491993b4eb5915726239183bb58"
    },
    {
      "Start": "98ca2afb1fa14f0898a2f57b8c898864",
      "End": "82d8d0a04c23494daeb36e8b8eef3593",
      "Id": "da0c70222de34e15b29892bb6f747579"
    },
    {
      "Start": "87d7c54025cd459d838292d06b97df8b",
      "End": "d7dd488db2cb494abc35efcc5626c22a",
      "Id": "97521a5759534c71a57cc23d4717bf0b"
    },
    {
      "Start": "6955d565d50e4d58b03280d1fd3bbf87",
      "End": "8cfb89dbd1444a69b1da5408c0d0bee1",
      "Id": "113b71d0938d4c348b396f54568b8ed2"
    },
    {
      "Start": "49a6cc2d23aa46a0824e6a36f9b5a8f9",
      "End": "46cdeae3bcb246f49c51d39f336f4cbc",
      "Id": "14704f69dcdc4306bd90d7bb5f4fde2b"
    },
    {
      "Start": "f4d697689be94d56bb962571b5008a8a",
      "End": "040102912b4e49bca207ec5d4bd7078c",
      "Id": "7cc26e2873b748e796aaed6e500d8256"
    },
    {
      "Start": "7a89571bdaa4477e98e312270af6c0fb",
      "End": "509b4e4bb38b44ea8fac93bfc39aba63",
      "Id": "2098323a79f143b2a857a1ad210f23c1"
    },
    {
      "Start": "8137a9b05d914c21a18ee1e93fae72bc",
      "End": "93d4f2263e7f48eebc9094ccecb75407",
      "Id": "ae74c352f4ea4b7e901a69c4bef66b08"
    },
    {
      "Start": "5513c3b756164ceebfd1e4051991bed1",
      "End": "d942d556afea48599dfa7988afa497f1",
      "Id": "a48edfaa3f5845a8bd5b6e367198e8e2"
    },
    {
      "Start": "dae114c9223e444998653a39d7ec7523",
      "End": "8a328be355da4350a74c48efee6e83fe",
      "Id": "3b0cc5d64d0949ffb9d1836dfd0e42ea"
    },
    {
      "Start": "0db0ba662f9342ffacedae6f29c2a317",
      "End": "9ff891fdab5a430e844e5727f97b55b8",
      "Id": "9c31290a36624a138bc52b5295d2b20f"
    },
    {
      "Start": "5645fadbe03e4e9c86e92426e2831379",
      "End": "8bc88cd01d1b45b1996ab663619151ab",
      "Id": "0804ea9e114543e5878612849f5ed1e7"
    },
    {
      "Start": "f2083e6bb05f4074bdfcb95fe793b804",
      "End": "8d5e0c8fe961426ba1d7304c0e4a66ff",
      "Id": "d047d8f7554a401595f58f320c09fec2"
    },
    {
      "Start": "647e74650a2644989efd401a79ceda97",
      "End": "ffccea2ad32b4c818f06412c3a2b284f",
      "Id": "f3d85f5154dc42ddb84317d1a6ad28c9"
    },
    {
      "Start": "b8c69df95f364c98bf084258493f09e1",
      "End": "6f7deb04c7cd4e6faab9c0d4e24ba9d5",
      "Id": "296952abff984f20bac5bd02a02a8a80"
    },
    {
      "Start": "925dc2d26009409a9e4f0f76b701744c",
      "End": "b8ce8d2f9f2746f58596a4d469875b04",
      "Id": "6ca45064b8a54dd0809f2b9a236cb38c"
    },
    {
      "Start": "11b2fe7dbb2b44b78bb458a0b906cf94",
      "End": "9b494f14916f46de85e6338510122b67",
      "Id": "46cc2936bd2c4971b10fa8260187ad5e"
    },
    {
      "Start": "e83481369b774762a5bea68af4e86894",
      "End": "996a6804188c4f59acc68631b61aeefe",
      "Id": "9adc0bcddac54c90b40f5001237a1a2b"
    },
    {
      "Start": "5a564109d2f1411e84fd5e1ba6792cd7",
      "End": "92d827dee94745b3844eab3fd7600c4e",
      "Id": "e1c4c80aeb214c389a7df96c75882f6d"
    },
    {
      "Start": "a214e120b8fe4c7fbd8ad402def624ec",
      "End": "7880fb83eda141a2b95b58f4483820eb",
      "Id": "4cb7ea5d3b9d4e0dbd5aaf8bcdd8f429"
    },
    {
      "Start": "6aef6db63602499a8c7a9216e93b9e43",
      "End": "a845a3f6a4174477a60eba619b9ee030",
      "Id": "a75f28430d644842a098f8326b6ef4fb"
    },
    {
      "Start": "8e272306066544faab1c81e3a1a79ced",
      "End": "a8e3db5abdb74da7b00d39fdce150283",
      "Id": "99ff19d39d894701a42b76a6d2d556f2"
    },
    {
      "Start": "d0dc8e7a593a426dabedeea5aee7c445",
      "End": "94843e6e326e4979a51a71b88a557c76",
      "Id": "5a6a7b3f04df4d5db8124b6b69d57e98"
    },
    {
      "Start": "4530dca2a8204e18927b46bbdef62ffc",
      "End": "ca145dceba564369802058e34943838c",
      "Id": "6b67f6814cf1488eaa367ffb325ee388"
    },
    {
      "Start": "2c7e61250d3f443384797df83ddefdde",
      "End": "0c996f15409a48beb7df3129e249c111",
      "Id": "3c1f50d3adca4f3ab546fba92bb379ac"
    },
    {
      "Start": "e3ea885a7695460999b85aa00feadaae",
      "End": "4d742dc3030b482189fe15ab6042a42a",
      "Id": "0f80078fbad2463b9e9ada2631d3298b"
    },
    {
      "Start": "42735f496a5345b98d8db12fcfe5eb70",
      "End": "2ee8976941a94a64ad3908e949d07f60",
      "Id": "540068bc4754458e99353c2460680732"
    },
    {
      "Start": "5cbbb7623a1f4e13b66617d97d869c9e",
      "End": "1b2ee956a238400387893175401e0f68",
      "Id": "7448e3fef2204b3795df06af2dcadb77"
    },
    {
      "Start": "c5aa8c5713e348ad8b5cbb79091052cf",
      "End": "5da3a8e67f6f4e4faaaba90da18961ea",
      "Id": "8e784f7db1f74bfb86c565eee185f1ed"
    },
    {
      "Start": "3b8847ed4b6044159cfb3cba650225ef",
      "End": "3ff94a97c28443f2832cf07b28f9dc70",
      "Id": "28a9047683394872afcd5d68c22db38a"
    },
    {
      "Start": "a8d8072a837d49fe9e1b643c9fab59ad",
      "End": "25c7f5d52e1b4049bf32eb1999b95ae0",
      "Id": "edcfdd4854584b519848ad6a985c7c35"
    },
    {
      "Start": "c4d5a6bd6be540249c80a0d125f81b21",
      "End": "4ac0c13f074f44f0b1e5a5bfde7bea10",
      "Id": "b97a64d4d2fe494bb951c9c3a299132c"
    },
    {
      "Start": "94ce525942a84233b1b02f65d63f1aaa",
      "End": "a7588cac56534cb291528091ddf85478",
      "Id": "741055ed1e0a4ebeadfeb4569acd6d98"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "950eef0ce0dc4d02aaeae6ddef550fe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Dimension.SetPrefix",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4646.2184931236889,
        "Y": 4733.0131442812526
      },
      {
        "Id": "f111651db94a4f41a3510914f45ec7e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3984.496859651179,
        "Y": 4761.1151068421441
      },
      {
        "Id": "69d7faad79cc48afa11eceeec075a441",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4375.2184931236889,
        "Y": 4733.0131442812526
      },
      {
        "Id": "e020bb979e9741edb635d0d434788ee5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3647.0714838833187,
        "Y": 4690.9833012749905
      },
      {
        "Id": "94bd0ded3cb346778ec118dcf4f43bf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Element Types treated",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3362.8616241605719,
        "Y": 4685.7378030843165
      },
      {
        "Id": "de6d6bf51d3b498b9c32e83a5bd725df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3865.9635867214624,
        "Y": 4696.2476158887685
      },
      {
        "Id": "f1a052673bcd4975b3adbad323c0ac8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 456.79551607100484,
        "Y": 3954.0284033623593
      },
      {
        "Id": "45b4c136126349afa68412c55fd14dad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "If",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 727.29551607100484,
        "Y": 4649.0284033623593
      },
      {
        "Id": "e53598637224497f9aaefa9fc858cd54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 954.29551607100484,
        "Y": 4653.2417366956925
      },
      {
        "Id": "113d59c6f40543c5a49c04ea236762dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.06428826032504,
        "Y": 4380.5433357905058
      },
      {
        "Id": "c5c725ca72d248e38bfd3fea3be4b1e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 459.06428826032504,
        "Y": 4512.5433357905058
      },
      {
        "Id": "762dca010f7140869d4f1952b8b2d221",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.06428826032504,
        "Y": 4561.5433357905058
      },
      {
        "Id": "798838368f464a3f81aadb9727b61125",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.06428826032504,
        "Y": 4463.5433357905058
      },
      {
        "Id": "0224519342fc46c787943c457edaebcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Looks up for some french to design the interface",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 153.55535362119724,
        "Y": 4990.9607753503406
      },
      {
        "Id": "481b8621f72945a4a004860d30e72d7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 4834.43981094792
      },
      {
        "Id": "4a7ec22650234e9e945de6dc1d8c1c7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 5267.6531442812529
      },
      {
        "Id": "dcb5c6f55bfb43f3a2cbc2ef1aa388fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 5051.6531442812529
      },
      {
        "Id": "c52d8f6e760a47b2aab56dcb1eb78df6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 5159.6531442812529
      },
      {
        "Id": "8a5ca8eabe75449588587ddab8d3cf0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 4532.653144281252
      },
      {
        "Id": "7c3c88e722b848daaca1ecfa3e02b5d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 4943.6531442812529
      },
      {
        "Id": "14d61402d7cc41e4bdde8586f58c9f10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.79551607100484,
        "Y": 3822.0284033623593
      },
      {
        "Id": "054a8c7479d342da8deed216d74ea05e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.79551607100484,
        "Y": 3905.0284033623593
      },
      {
        "Id": "08fda3bcef3345d28e9528882355144f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.79551607100484,
        "Y": 4003.0284033623593
      },
      {
        "Id": "83d4ae0fb3174a19bad0e455d79d4fe0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2451.2184931236893,
        "Y": 4741.43981094792
      },
      {
        "Id": "e5f8b98abd384e3699318e4d69a58bde",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2685.2184931236893,
        "Y": 4745.6531442812529
      },
      {
        "Id": "df2ca1760e24476abe9393489f86884d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 4725.6531442812529
      },
      {
        "Id": "4152be58542f4ca7bc638a1e8f6da277",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2024.2184931236893,
        "Y": 4642.43981094792
      },
      {
        "Id": "06b16d67863d49ff9e2dbb4f3de52fe5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1548.2955160710048,
        "Y": 4545.9617366956927
      },
      {
        "Id": "05ce764e031647eea8830d299a6b7230",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1154.2955160710048,
        "Y": 4576.1750700290258
      },
      {
        "Id": "36268ec417814370937b86651e665e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1548.2955160710048,
        "Y": 4679.9617366956936
      },
      {
        "Id": "450d53caaf1c41188f647ee9d655ff06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1772.2955160710048,
        "Y": 4599.9617366956927
      },
      {
        "Id": "341e845e08dc481eb38097a5d49e9fc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2936.2184931236893,
        "Y": 4763.2264776145857
      },
      {
        "Id": "57adbad2db984d9c8a13cba4ed63f58c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.06428826032504,
        "Y": 4659.5433357905058
      },
      {
        "Id": "8a5e80500d3944908e8e2bc80f2e9887",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.79551607100484,
        "Y": 4101.0284033623593
      },
      {
        "Id": "830b875501474c738527d4f943086c25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5861.987708905498,
        "Y": 4740.9553907861682
      },
      {
        "Id": "2e0b56b21e54472cad63ed91286ab9a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6219.987708905498,
        "Y": 4740.9553907861682
      },
      {
        "Id": "74c964c8ce1b4092aa91d897ad0ef5b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 6474.9637255212874,
        "Y": 4757.30464340715
      },
      {
        "Id": "f7807fcce3454afa97e5df3480c17e36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5575.987708905498,
        "Y": 4688.9553907861682
      },
      {
        "Id": "6c74f145a7784211839a13d9bf2b71fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5575.987708905498,
        "Y": 4823.1687241195013
      },
      {
        "Id": "740cd9d01a7845f980410148e5bed6fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Dimension.Prefix",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5254.4531717499731,
        "Y": 4736.4504884716007
      },
      {
        "Id": "ebf7f3254f3942a9b24367eafab03989",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.06428826032504,
        "Y": 4757.5433357905058
      },
      {
        "Id": "4a1b1fd54cf04c1d80c2f9bbfe164dcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 151.79551607100484,
        "Y": 4199.0284033623593
      },
      {
        "Id": "aab22816b8464bb2ad9df205c9eb468c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4905.7894641293651,
        "Y": 4742.0090262107515
      }
    ],
    "Annotations": [
      {
        "Id": "02f2da3609854196a73726bb0ecdb483",
        "Title": "ACTION - DATA\r\nVérifier la langue de Revit",
        "Nodes": [
          "0224519342fc46c787943c457edaebcf"
        ],
        "Left": 143.55535362119724,
        "Top": 4850.9607753503406,
        "Width": 334.0,
        "Height": 233.0,
        "FontSize": 36.0,
        "InitialTop": 4990.9607753503406,
        "InitialHeight": 145.0,
        "TextblockHeight": 130.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9e545c8d21e04e1ea994ea4649b07efc",
        "Title": "INPUT\r\nFrançais",
        "Nodes": [
          "f1a052673bcd4975b3adbad323c0ac8e",
          "14d61402d7cc41e4bdde8586f58c9f10",
          "054a8c7479d342da8deed216d74ea05e",
          "08fda3bcef3345d28e9528882355144f",
          "8a5e80500d3944908e8e2bc80f2e9887",
          "4a1b1fd54cf04c1d80c2f9bbfe164dcd"
        ],
        "Left": 141.79551607100484,
        "Top": 3726.0284033623593,
        "Width": 445.0,
        "Height": 541.0,
        "FontSize": 36.0,
        "InitialTop": 3822.0284033623593,
        "InitialHeight": 492.99999999999955,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3f0c2e789ee6491c8d5da5f277013849",
        "Title": "INPUT\r\nEnglish",
        "Nodes": [
          "c5c725ca72d248e38bfd3fea3be4b1e1",
          "762dca010f7140869d4f1952b8b2d221",
          "798838368f464a3f81aadb9727b61125",
          "113d59c6f40543c5a49c04ea236762dc",
          "57adbad2db984d9c8a13cba4ed63f58c",
          "ebf7f3254f3942a9b24367eafab03989"
        ],
        "Left": 141.06428826032504,
        "Top": 4284.5433357905058,
        "Width": 448.0,
        "Height": 541.0,
        "FontSize": 36.0,
        "InitialTop": 4380.5433357905058,
        "InitialHeight": 425.0,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "726f44d27b344a41859893008c9bba7c",
        "Title": "UI",
        "Nodes": [
          "481b8621f72945a4a004860d30e72d7d",
          "4a7ec22650234e9e945de6dc1d8c1c7e",
          "dcb5c6f55bfb43f3a2cbc2ef1aa388fe",
          "c52d8f6e760a47b2aab56dcb1eb78df6",
          "8a5ca8eabe75449588587ddab8d3cf0b",
          "7c3c88e722b848daaca1ecfa3e02b5d4",
          "83d4ae0fb3174a19bad0e455d79d4fe0",
          "df2ca1760e24476abe9393489f86884d",
          "4152be58542f4ca7bc638a1e8f6da277",
          "06b16d67863d49ff9e2dbb4f3de52fe5",
          "05ce764e031647eea8830d299a6b7230",
          "36268ec417814370937b86651e665e78",
          "450d53caaf1c41188f647ee9d655ff06"
        ],
        "Left": 1144.2955160710048,
        "Top": 4479.653144281252,
        "Width": 1440.9229770526845,
        "Height": 881.00000000000091,
        "FontSize": 36.0,
        "InitialTop": 4532.653144281252,
        "InitialHeight": 880.00000000000091,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "9efc340d97a341e6a62480f65a33f9c7",
        "Title": "ACTION - DATA\r\nAjouter un préfixe",
        "Nodes": [
          "950eef0ce0dc4d02aaeae6ddef550fe7",
          "f111651db94a4f41a3510914f45ec7e6",
          "69d7faad79cc48afa11eceeec075a441",
          "e020bb979e9741edb635d0d434788ee5",
          "94bd0ded3cb346778ec118dcf4f43bf4",
          "de6d6bf51d3b498b9c32e83a5bd725df"
        ],
        "Left": 3352.8616241605719,
        "Top": 4589.7378030843165,
        "Width": 1512.356868963117,
        "Height": 316.37730375782758,
        "FontSize": 36.0,
        "InitialTop": 4685.7378030843165,
        "InitialHeight": 220.37730375782758,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b080e594e8f54f2896749b2c2ef66415",
        "Title": "BIMOne",
        "Nodes": [
          "ac52eca5f1ae4d30bfc64abf3506e2a4",
          "379a5635da6f4d94ab8d7fae4686c646",
          "8554769dfef941899f057d0337eceec6",
          "51d16fe035eb4e0ca5788af830eedc40",
          "3c4ca4d74bef48b0a09ac4aed9e8a0d3"
        ],
        "Left": 175.0037995184901,
        "Top": 3162.4804717422267,
        "Width": 1229.6763150896174,
        "Height": 172.74009298383771,
        "FontSize": 36.0,
        "InitialTop": 3215.4804717422267,
        "InitialHeight": 143.74009298383771,
        "TextblockHeight": 43.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "3b8745fc44f34b0aac115763fd09af93",
        "Title": "PACKAGE NAME",
        "Nodes": [
          "3d4943398d6545cebc9d0a877d164e3d"
        ],
        "Left": 2105.6728534739868,
        "Top": 3433.51817550009,
        "Width": 299.0,
        "Height": 184.0,
        "FontSize": 36.0,
        "InitialTop": 3486.51817550009,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "ce445c07df9941bb944552ca770042cd",
        "Title": "ACTION - DATA",
        "Nodes": [
          "bbff411aeea84045ac7b075da93cce0f"
        ],
        "Left": 1388.3159552490256,
        "Top": 3437.9144158120093,
        "Width": 306.0,
        "Height": 141.0,
        "FontSize": 36.0,
        "InitialTop": 3490.9144158120093,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e187377dcba644f688998d4a8ffec3dd",
        "Title": "MONITORING - description",
        "Nodes": [
          "5c23f9a07a20428a9128cd3c3bdc5d01"
        ],
        "Left": 2495.4437396193262,
        "Top": 3432.8694584565196,
        "Width": 302.0,
        "Height": 212.0,
        "FontSize": 36.0,
        "InitialTop": 3528.8694584565196,
        "InitialHeight": 140.0,
        "TextblockHeight": 86.0,
        "Background": "#FF848484"
      },
      {
        "Id": "483765ec41c0460ba754c02e51d20ef6",
        "Title": "ACTION - GEOMETRY",
        "Nodes": [
          "dc332ef076344566a5601c5bb344b36e"
        ],
        "Left": 1738.2180923126498,
        "Top": 3435.2449734641241,
        "Width": 305.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": 3531.2449734641241,
        "InitialHeight": 140.0,
        "TextblockHeight": 86.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "5a9fd5b758d642ab94d6ac202e955b60",
        "Title": "UI",
        "Nodes": [
          "7f8c932f4428457386ce84d9f474b187"
        ],
        "Left": 932.81826602830881,
        "Top": 3439.3983672338195,
        "Width": 319.0,
        "Height": 155.0,
        "FontSize": 36.0,
        "InitialTop": 3492.3983672338195,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "679a00fe134d4b4589b159d2df8ae66b",
        "Title": "CONSTRAINT",
        "Nodes": [
          "5f40a4ec9fb3412abe19aff84c750182"
        ],
        "Left": 528.208723923518,
        "Top": 3443.959064352262,
        "Width": 318.0,
        "Height": 112.0,
        "FontSize": 36.0,
        "InitialTop": 3496.959064352262,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "f58f4de488d748aa85f16f694e67f3b5",
        "Title": "INPUT",
        "Nodes": [
          "8886c255d28a41249769c8cda9437f73"
        ],
        "Left": 180.42674218785226,
        "Top": 3447.1194610488724,
        "Width": 292.0,
        "Height": 112.0,
        "FontSize": 36.0,
        "InitialTop": 3500.1194610488724,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "c6edcaab4a544631a2e2fcf9c23b68c0",
        "Title": "MONITORING\r\nCount how many were processed",
        "Nodes": [
          "74c964c8ce1b4092aa91d897ad0ef5b5"
        ],
        "Left": 6464.9637255212874,
        "Top": 4574.30464340715,
        "Width": 233.04666666666668,
        "Height": 328.0,
        "FontSize": 36.0,
        "InitialTop": 4757.30464340715,
        "InitialHeight": 175.0,
        "TextblockHeight": 173.0,
        "Background": "#FF848484"
      },
      {
        "Id": "cb10ce8eb9984abfbbd2928f247b9e85",
        "Title": "ACTION - DATA\r\nClean the list of processed elements and count them",
        "Nodes": [
          "830b875501474c738527d4f943086c25",
          "6c74f145a7784211839a13d9bf2b71fe",
          "f7807fcce3454afa97e5df3480c17e36",
          "2e0b56b21e54472cad63ed91286ab9a6"
        ],
        "Left": 5565.987708905498,
        "Top": 4592.9553907861682,
        "Width": 835.0,
        "Height": 323.21333333333314,
        "FontSize": 36.0,
        "InitialTop": 4688.9553907861682,
        "InitialHeight": 257.21333333333314,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2250cf82339749b8b011f436b57d3210",
        "Title": "ACTION - DATA\r\nGet the list of dimensions with the new prefix",
        "Nodes": [
          "740cd9d01a7845f980410148e5bed6fa",
          "aab22816b8464bb2ad9df205c9eb468c"
        ],
        "Left": 4895.7894641293651,
        "Top": 4596.4504884716007,
        "Width": 594.663707620608,
        "Height": 248.55853773915078,
        "FontSize": 36.0,
        "InitialTop": 4736.4504884716007,
        "InitialHeight": 138.55853773915078,
        "TextblockHeight": 130.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f9170e1ac03144589b62e61e831e9de0",
        "Title": "BACKEND",
        "Nodes": [],
        "Left": 1389.7633342690015,
        "Top": 3384.5131002060157,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "15b42e59fd94425a99ea1a1dc73abec2",
        "Title": "MONITORING",
        "Nodes": [],
        "Left": 2495.2391013592678,
        "Top": 3385.0382659640541,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3c4ca4d74bef48b0a09ac4aed9e8a0d3",
        "Title": "DEPENDANCIES\r\n-\r\nCODE\r\nUI based on Data-shapes\r\nby Mostafa El Ayoubi\r\nhttps://data-shapes.io/",
        "Nodes": [],
        "Left": 1241.6801146081075,
        "Top": 3219.2205647260644,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8554769dfef941899f057d0337eceec6",
        "Title": "EDITOR\r\nJean-Marc Couffin - May 2019 - v1.1\r\nJean-Marc Couffin - October 2019 - v1.2\r\nJean-Marc Couffin - February 2020 - v1.3",
        "Nodes": [],
        "Left": 989.86111635074394,
        "Top": 3216.1665640457086,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b5bd94eadadf4fc388fb4b97cc31ff6a",
        "Title": "USER INTERFACE",
        "Nodes": [],
        "Left": 934.9878974913546,
        "Top": 3385.8808662361416,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3d4943398d6545cebc9d0a877d164e3d",
        "Title": "Always name the specific package to facilitate debugging and deployment\r\n\r\nExploding a package helps deployment to clients\r\n\r\nExample:\r\nClockworks 1.5.5",
        "Nodes": [],
        "Left": 2115.6728534739868,
        "Top": 3486.51817550009,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bbff411aeea84045ac7b075da93cce0f",
        "Title": "part of the script that affect data: \r\n\r\nExamples: \r\nACTION - DATA - get parameter name from txt file",
        "Nodes": [],
        "Left": 1398.3159552490256,
        "Top": 3490.9144158120093,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7f8c932f4428457386ce84d9f474b187",
        "Title": "User interface for the script: describe what the UI will do\r\n\r\nExample: \r\nUI - get shared parameter file path",
        "Nodes": [],
        "Left": 942.81826602830881,
        "Top": 3492.3983672338195,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "51d16fe035eb4e0ca5788af830eedc40",
        "Title": "CREATOR\r\nJean-Marc Couffin - December 2018 - v1.0\r\nDynamo 2.0",
        "Nodes": [],
        "Left": 729.28522106108824,
        "Top": 3215.4804717422267,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5c23f9a07a20428a9128cd3c3bdc5d01",
        "Title": "ckeck the integrity and consistency of data or geometry affected \r\n\r\nExamples: \r\nnumber of rooms matches number of parameters changed",
        "Nodes": [],
        "Left": 2505.4437396193262,
        "Top": 3528.8694584565196,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dc332ef076344566a5601c5bb344b36e",
        "Title": "part of the script that affect  geometry: \r\n\r\nExamples: \r\nACTION - GEOMETRY - translate geometry to new location",
        "Nodes": [],
        "Left": 1748.2180923126498,
        "Top": 3531.2449734641241,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5f40a4ec9fb3412abe19aff84c750182",
        "Title": "Fixed input that should not be set as inputs available through the dynamo player",
        "Nodes": [],
        "Left": 538.208723923518,
        "Top": 3496.959064352262,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "379a5635da6f4d94ab8d7fae4686c646",
        "Title": "Copyright:\r\nThis script is provided \"as-is\" under MIT License",
        "Nodes": [],
        "Left": 440.51519344070505,
        "Top": 3215.4804717422267,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8886c255d28a41249769c8cda9437f73",
        "Title": "input by user that should be set as input for the dynamo player",
        "Nodes": [],
        "Left": 190.42674218785226,
        "Top": 3500.1194610488724,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ac52eca5f1ae4d30bfc64abf3506e2a4",
        "Title": "Created by BIMOne\r\nSet prefix for specifique dimension types",
        "Nodes": [],
        "Left": 185.0037995184901,
        "Top": 3215.5019643223991,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d2b3ee76c418429aaefdde720cb93004",
        "Title": "INPUT",
        "Nodes": [],
        "Left": 179.51545898414463,
        "Top": 3399.1454886422625,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -396.7640053851394,
    "Y": -7096.5879554176472,
    "Zoom": 2.2395085936288792
  }
}
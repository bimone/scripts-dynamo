{
  "Uuid": "aafcf106-31c4-4ba1-99ce-431de13002ad",
  "IsCustomNode": false,
  "Description": null,
  "Name": "BIM1_MapGlobalParameter",
  "ElementResolver": {
    "ResolutionMap": {
      "Revit.Application": {
        "Key": "Rhythm.Revit.Application.Application",
        "Value": "Rhythm.dll"
      },
      "Rhythm.Revit.Application.Application.Document": {
        "Key": "Rhythm.Revit.Application.Application",
        "Value": "Rhythm.dll"
      },
      "DSCore.List.Empty": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a663edd49df44494b640204007d12382",
      "Inputs": [
        {
          "Id": "0d8d37dd4cee41efbfd3a1024f833010",
          "Name": "test",
          "Description": "Tester le bloc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "854355f2cdeb47328387d3f6616196fe",
          "Name": "true",
          "Description": "Bloc True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c3beec1f67e462f8a86ba195d72063b",
          "Name": "false",
          "Description": "Bloc faux",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e751e0a5fe8741e095c53a1bd62d74b8",
          "Name": "result",
          "Description": "résultat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Instruction conditionnelle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];\nx[3];\nx[4];\nx[5];\nx[6];\nx[7];\nx[8];",
      "Id": "91a95e88a5b1427189c131867dd7ed09",
      "Inputs": [
        {
          "Id": "6e4636e4f4b14b1888aaeddbb665cf77",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f23c8f7f8fe14899acceae866e8d7c1b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e45482596254099a0a9c165187e082d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fa6fb083d8d4f338c43c9ffa67126ed",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99bfb6303ea841f38da3d826b3f133ed",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8165cfec64b942ea93785ed99286c5e7",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a308015f3db4edf9f5892d5ec098cf1",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50bbe77cb0154b2d837ace225a5f5e3d",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c194f885aaca4a7e869aa388f2515bcd",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8858f304317b4c6fb94d11adac45d69a",
          "Name": "",
          "Description": "Value of expression at line 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3a46578e34ca434081fdbb9292916cf4",
      "Inputs": [
        {
          "Id": "3ecd703f1883448ca1c8b5a89420839b",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b04887c99c1c4ac6894fb11310991c89",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9df71fddd02a4b719e09bcc1f510bbc1",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eef65ea6665b467bbb38affdf8450862",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff5e5bde7b2d4b178aa17786312676f1",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "266e00b6f4d44eac83585afa0b9195b1",
          "Name": "item5",
          "Description": "Index de l'élément #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84bf7bdff47a4348ae81d7cdc1bd9da9",
          "Name": "item6",
          "Description": "Index de l'élément #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e803d5ceecf48f79b91cea095da7773",
          "Name": "item7",
          "Description": "Index de l'élément #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4825c534afd444a3a1c0ea98c8b753a2",
          "Name": "item8",
          "Description": "Index de l'élément #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d0d79a927ad43c78dd95b30a15251fb",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "99436462f7cd4a2ab95bbdf402153f86",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2e04d2e5b3846a997b181f6b38e9cdd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# BIM One Inc. - Jean-Marc Couffin - 2018\r\n\r\nimport clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nlang = str(doc.Application.Language)\r\n\r\nif lang ==\"French\":\r\n\tx = True\r\nelse:\r\n\tx = False\r\n\t\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "bad3fa21fbab416a9c9dc208c6f251c1",
      "Inputs": [
        {
          "Id": "cd4e135eb67041b6adc9ccfec86a9c34",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51486b230f164559b8776a9ec6ad2757",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\BIM One\\B1M-Technical\\00_BIM1_STANDARDS\\01_LOGICIELS_OUTILS\\DYNAMO\\01_SCRIPTS\\Logo.png",
      "InputValue": "..\\..\\Logo.png",
      "NodeType": "ExtensionNode",
      "Id": "3f512373d2924f90b8a173aa2b029cb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9eb12c5fca214aa7bd62249cced2ebd6",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Vous permet de sélectionner un fichier sur le système de façon à obtenir son nom de fichier"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "500;",
      "Id": "fcc979b9b67140818ac61fa635fa8037",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "400682fdcc6647a7b0ea05fad4a7320a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\t\r\nimport clr\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle \r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr\r\n\tfrom System.ComponentModel import Container\r\n\t\r\n\t\r\n\timport sys\r\n\tpyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\n\tsys.path.append(pyt_path)\r\n\timport os\r\n\timport webbrowser\r\n\timport unicodedata\r\n\t\r\n\tclr.AddReference('RevitAPIUI')\r\n\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\tclr.AddReference('RevitNodes')\r\n\timport Revit\r\n\tclr.ImportExtensions(Revit.Elements)\r\n\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\r\n\tclr.AddReference('RevitServices')\r\n\tfrom RevitServices.Persistence import DocumentManager\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\tclr.AddReference('RevitAPI')\r\n\tfrom Autodesk.Revit.DB import FilteredElementCollector , View , ViewType , ElementId , FamilyInstance , Document , UnitType , UnitUtils\r\n\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\tviewindex = 0\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\t\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\r\n\tclass selectionfilter(ISelectionFilter):\r\n\t\tdef __init__(self,category):\r\n\t\t\tself.category = category\r\n\t\tdef AllowElement(self,element):\r\n\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\treturn True\r\n\t\t\telse:\r\n\t\t\t\treturn False\r\n\t\tdef AllowReference(reference,point):\r\n\t\t\treturn False\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'BIM One Inc. - Assign global parameters'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == TextBox:\r\n\t    \t\t\t\tself.values.append(f.Text)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\r\n\t    \t\t\t\telse:\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\telse:\r\n    \t\t\t\t\t\t\tself.values.append([])\r\n\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80,sender.Height + 5))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tactiveview = doc.ActiveView\r\n\t\t\t\t\tbbox = element.get_BoundingBox(activeview)\t\r\n\t\t\t\t\tactiveuiview = [v for v in uiviews if v.ViewId == activeview.Id][0]\r\n\t\t\t\t\tactiveuiview.ZoomAndCenterRectangle(bbox.Min, bbox.Max)\r\n\t\t\t\t\tuidoc.RefreshActiveView()\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\t\tif (viewindex >= len(viewsforelement) -1) or not (element.Id in uidoc.Selection.GetElementIds()):\r\n\t\t\t\t\t\tviewindex = 0\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tviewindex += 1\r\n\t\t\t\t\tuidoc.RequestViewChange(dbView)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\tform.topmost()\t\r\n\tform.ControlBox = False\r\n\txlabel = 25\r\n\txinput = 150\r\n\tformy = 10\r\n\tif IN[8] > 350:\tformwidth = IN[8]\r\n\telse: formwidth = 350\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - 2 * xlabel,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + 15\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\tlabel.Text = j.inputname\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height + 25\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or i == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height)+5)\r\n\t\t\t\t\trball.Width = 70\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(80,(j.height)+5)\r\n\t\t\t\t\trbnone.Width = 90\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = TextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 45 ,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25, tn.Bottom-tn.Top+25)  \r\n\t\t\t\ty = gb.Bottom + 25\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35\r\n\t\t\t\t\t\trb.Location = Point(20,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot +20\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 30\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50\r\n\t\t\t\tdisplabel.Location = Point(0,5)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25,y+25)\r\n\t\t\t\ty = im.Bottom + 25\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25,xinput-25,80,90,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,xinput,40,120,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\t\tlogopaths = []\r\n\t\t\tfor child in root:\r\n\t\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\t\tfor path in child:\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\tdeflogopath = \"\"\r\n\t\t\tfor path in logopaths:\r\n\t\t\t\tif deflogopath == \"\":\r\n\t\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\texcept: \r\n\t\t\t\t\t\t\tpass\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20\r\n\t\t\tylogo = formy+10\r\n\t\telse:\r\n\t\t\txlogo = 30\r\n\t\t\tylogo = formy\r\n\t\tsize = 110\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tpass\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400:\r\n\t\t\tformy += 50\r\n\t\t\txinput = 270\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20\r\n\telse:\r\n\t\tformy += 50\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65,formy+30)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] and IN[7] > 0:\r\n\t\tformbody_calculatedheight = IN[7] - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100: formbody_calculatedheight = 100\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\tuiviews = uidoc.GetOpenUIViews()\r\n\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\tactiveviewid = doc.ActiveView.Id\r\n\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\telse:\r\n\t\tactiveUIView = uiviews[0]\r\n\trect = activeUIView.GetWindowRectangle()\r\n\tform.StartPosition = FormStartPosition.Manual\r\n\tform.Location = Point(rect.Left-7,rect.Top)\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result\r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017']\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!']\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "07307cbb54334315ad9922aa1e4854bf",
      "Inputs": [
        {
          "Id": "a0610ff77f304121b68935a20fe79343",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c579e178980415c868a4bf1d29ade14",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0853024d58dc4e54b70a05f723c736eb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "562fa3103b9e4e14a344878f296ade83",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d7985a5474479fb53e298c54437d8b",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "647ed91fa0c342ebabb50018d8d3d8da",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a68de4f1a7394a3f8e62e841234cb5d3",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67db14c728b941a582da5fa203004aae",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "739324fc937e478ea30a3ec793d7b222",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e370bdab71f94498a2977475e3086e62",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "52f39b8b35f943f9abe2110a25cab9c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "638e718c70c742edb883056b37c78aff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "af2a035939cb4a84b05410edebb8a04b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe8e52d05da7467085fdc0be977eebe4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ButtonText_optional : string = \"OK\";",
      "Id": "5f783f7190b84b6493ea302c85930aba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8abd26ea323344458ca0e9ce3ab92a6f",
          "Name": "",
          "Description": "ButtonText_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "ac59d3541c3c4db9beb620a9a68bacf5",
      "Inputs": [
        {
          "Id": "f94d48efe5b7426792249c1408192433",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f76f86c8ac134fe2a33e54d20a538825",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "809e188ae6824092a550c0d591856c43",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b3cc50dae6f43f084a25d5975a5ada3",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "db0ef1bba9c845e481e70a30da422201",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60dc71da60bc4aa29b47f4071ebc7ed6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass dropdown():\r\n\r\n    def __init__(self,inputname,defaultvalue,_sorted):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n        self._sorted = _sorted\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.DropDown input'\r\n        \r\nx = dropdown(IN[0],IN[3],IN[4])\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\t\r\n\r\nfor k,v in zip(in1,in2):\r\n\ttry:\r\n\t\tx[str(k)] = v\r\n\texcept:\r\n\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "219e7ceb96214ee5a9427ac6eb827660",
      "Inputs": [
        {
          "Id": "da54250c070d4bc3b4a55e187002d4b9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2e7eecf386d4a639f8ea9559c01565c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4590cc6f31474615a7e4e3360b22a8a8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "682a6993849b4f1c91617fbbfb9e29c3",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5ebe2acb58c4fbfb4978a6d16f43a82",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "788d9a9348e24b1e88bfa6130a8628da",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "3f93a142e25f4a769492f9902659f6c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "645d3afc9cce4f30a28fc4fb8ca9f25b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3748d1f6eeae4ff8b6ce956036a60125",
      "Inputs": [
        {
          "Id": "36cd7ed653064061ac03ecb23dded3a5",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf2df61c0ef847009cde93e698d3c38e",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "819f9e6666a54d2e9fc763160d2d2197",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bc7eb3efee04becb2b44b26cb837802",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c3df165cdc44c32ad5f566493fda8f3",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "306154afd57c48fab47aeb04ab7e978b",
          "Name": "item5",
          "Description": "Index de l'élément #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a92ffb3bd38b40d99de8c05c89c7bdc9",
          "Name": "item6",
          "Description": "Index de l'élément #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6655c6d2750c4d0f94136442b41f865c",
          "Name": "item7",
          "Description": "Index de l'élément #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70ac2214725d476485739c20e06af3de",
          "Name": "item8",
          "Description": "Index de l'élément #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "140344beec78481ab386c84061bce6f9",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Processed elements",
      "Id": "b7997937fa394af5bf2ffdbf679e122f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "79766a9259254e1bb69b29f702224568",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Type parameter (or instance)",
      "Id": "a02f5586763f4455ac5128865837bb71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4279e6957899475a9349161dac601374",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Global parameter",
      "Id": "1ff50036a8b446d594284b8bef64043d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c684e0d939a467ab1c8ff817c0cdeea",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0ad22257e2f54050aa8c07a4d867072a",
      "Inputs": [
        {
          "Id": "0f6b54b96b3b45049cdc9990af82fa3b",
          "Name": "test",
          "Description": "Tester le bloc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0795a54c9116424e906dcf76b0822118",
          "Name": "true",
          "Description": "Bloc True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccf517f314dd4e68892cb0fe85fdec54",
          "Name": "false",
          "Description": "Bloc faux",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4669fb8e40b4e139b7452dee5e50092",
          "Name": "result",
          "Description": "résultat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Instruction conditionnelle"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "7921e900ee344b2fb0da13231e1e63a8",
      "Inputs": [
        {
          "Id": "f8db5b36181944179746cb566d2483c5",
          "Name": "Category",
          "Description": "Catégorie",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2542e764e37b4698b477b21f2e647180",
          "Name": "Elements",
          "Description": "Type d'élément.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obtenir tous les éléments de la catégorie spécifiée du modèle."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.GlobalParameter.FindByName@string",
      "Id": "e1a5a381024748c0b32362b97f2b52e3",
      "Inputs": [
        {
          "Id": "f1e6b1a454924c40b40eaccd45432c84",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "698d8b1e47db482cb99296458108615d",
          "Name": "GlobalParameter",
          "Description": "GlobalParameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find Global Parameter by Name\n\nGlobalParameter.FindByName (name: string): GlobalParameter"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "c30fd5eb961f4601b5456b6537614325",
      "Inputs": [
        {
          "Id": "d05ae70aa89541928c04aae708263d49",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f355cf9df07c44478d0d3bb40c293c59",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the FamilyType for this Element. Returns null if the Element cannot have a FamilyType assigned.\n\nElement.ElementType: Element"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d92bf73e2dd6439698df96446537bcac",
      "Inputs": [
        {
          "Id": "9b577ccb1b7f4b8c8ce7bbca0cb0c20d",
          "Name": "element type",
          "Description": "Type d'élément.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd7c71a7379f414b9edac09d4972a866",
          "Name": "elements",
          "Description": "Tous les éléments dans le document actif d'un type donné.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Tous les éléments dans le document actif d'un type donné."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 140,
      "NodeType": "ExtensionNode",
      "Id": "27c162d33c7849eabbd72d22d758f754",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18c95a16612b419ba07f5365f114c41a",
          "Name": "Types",
          "Description": "Types sélectionné",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Tous les sous-types d'élément."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "293b8e2844f247289f402c87ae2bb442",
      "Inputs": [
        {
          "Id": "f47ec9abf1184be3be84352c0c3b2ced",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ba47c1aa32540519238869251e737fa",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "834ea96b6a414e8883161549386bcf55",
      "Inputs": [
        {
          "Id": "8673de5b88c346b88e3f857c6735a0f7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2715935d2864647ad04f378d01bed80",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Name",
      "Id": "1057e597e44441dcb973cac8e61a2ea3",
      "Inputs": [
        {
          "Id": "cd2ca67dd6f142fc99fee762c9b7277d",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db19e8806a0d43d4ad0134246a3694dc",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the parameter.\n\nParameter.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "a0d47898596d426285185c6b63b766ec",
      "Inputs": [
        {
          "Id": "1c13b9da5ed649cfb6076006bf746ddb",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84b27b029e584269a7f42e40ca7ce3de",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];",
      "Id": "339bb488b11e4d7f90a1ce5ad70aadd1",
      "Inputs": [
        {
          "Id": "2bd53bff77fc4c73b0f0eea1994f1382",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f374dde6f87b47da87ae99c69caeb3c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ab0cd0d494e49aabbe9a698cd652002",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a279b68296f44d0a903264a84412ee7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "13485636c903449da595a1f2751bf409",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "317643b14cb84d11ad76d25019a83d23",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "73ab5bc980b34249b8c0d46465640fae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8040ae995678490a8ae52e83084df9d0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass dropdown():\r\n\r\n    def __init__(self,inputname,defaultvalue,_sorted):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n        self._sorted = _sorted\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.DropDown input'\r\n        \r\nx = dropdown(IN[0],IN[3],IN[4])\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\t\r\n\r\nfor k,v in zip(in1,in2):\r\n\ttry:\r\n\t\tx[str(k)] = v\r\n\texcept:\r\n\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "20547ed6e82d46ccaa5590352c25da08",
      "Inputs": [
        {
          "Id": "c65650e04c064b678a702e1ec29ebc35",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5f8e35967544800b8cf79fd51fd7944",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f736b8194f5458fa56df52ef520a9f8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce9c98fb28ad45129c0d68eef54aab8b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02650a869eab49958a211a8f94af1ef3",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aeb3fe7c9a954ccc8e816a2d2c080234",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uibool():\r\n\r\n    def __init__(self,inputname,defaultvalue,booltext):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n        self.booltext = booltext\r\n    def __repr__(self):\r\n        return 'UI.Boolean input'\r\n        \r\n      \r\nx = uibool(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "195fc652e3954371b6e39d307a64e49d",
      "Inputs": [
        {
          "Id": "84faecf915514f0fa6d5d591ec390598",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d0bcece97b847ffa278dd3d2932d87d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b9a03a9245a493d87e93588bcfe7143",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b867f1271e48709d78561dcb264b8d",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DefaultValue : bool = false;",
      "Id": "a0e588d0049e47eebf632917cab031b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ccb8e4af5c5c4264af62e714eea0cc82",
          "Name": "",
          "Description": "DefaultValue",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SideText : string = \"Type\";",
      "Id": "098bbd311a684a55a2825b68b10ed0e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94166ed1348c4b1aa3c07e7ac6af2bfe",
          "Name": "",
          "Description": "SideText",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Set global parameter mapping",
      "Id": "7da14af870794d02a565d5e8cb171a58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f490cb9593f64670a0445ddc927bcb91",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# BIM One Inc. - Jean-Marc Couffin - 2019\r\n\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import*\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncat = doc.Settings.Categories\r\n\r\nOUT = [a.Name for a in cat]",
      "VariableInputPorts": true,
      "Id": "25137cab6e1e4d0db7461bad530dd590",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78de7f93f73f440d9aff548a7222e84b",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ButtonText_optional : string = \"OK\";",
      "Id": "3a4c2c56f2e74394a1a8bd96ec539110",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f6715cd00ea41a7b939bac70bc01b0d",
          "Name": "",
          "Description": "ButtonText_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e22d479a3e9840cc83de8e1070027312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15e6eca626884efbb6c03975e7ffa5d5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\BIM One\\B1M-Technical\\00_BIM1_STANDARDS\\01_LOGICIELS_OUTILS\\DYNAMO\\01_SCRIPTS\\Logo.png",
      "InputValue": "..\\..\\Logo.png",
      "NodeType": "ExtensionNode",
      "Id": "6b9adbd30dc94640bfe42fbb9d283555",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "339101e5018a45d09461bf76f6e30916",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Vous permet de sélectionner un fichier sur le système de façon à obtenir son nom de fichier"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\t\r\nimport clr\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle \r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr\r\n\tfrom System.ComponentModel import Container\r\n\t\r\n\t\r\n\timport sys\r\n\tpyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\n\tsys.path.append(pyt_path)\r\n\timport os\r\n\timport webbrowser\r\n\timport unicodedata\r\n\t\r\n\tclr.AddReference('RevitAPIUI')\r\n\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\tclr.AddReference('RevitNodes')\r\n\timport Revit\r\n\tclr.ImportExtensions(Revit.Elements)\r\n\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\r\n\tclr.AddReference('RevitServices')\r\n\tfrom RevitServices.Persistence import DocumentManager\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\tclr.AddReference('RevitAPI')\r\n\tfrom Autodesk.Revit.DB import FilteredElementCollector , View , ViewType , ElementId , FamilyInstance , Document , UnitType , UnitUtils\r\n\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\tviewindex = 0\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\t\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\r\n\tclass selectionfilter(ISelectionFilter):\r\n\t\tdef __init__(self,category):\r\n\t\t\tself.category = category\r\n\t\tdef AllowElement(self,element):\r\n\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\treturn True\r\n\t\t\telse:\r\n\t\t\t\treturn False\r\n\t\tdef AllowReference(reference,point):\r\n\t\t\treturn False\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'BIM One Inc. - Assign global parameters - powered by Datashapes'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == TextBox:\r\n\t    \t\t\t\tself.values.append(f.Text)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\r\n\t    \t\t\t\telse:\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\telse:\r\n    \t\t\t\t\t\t\tself.values.append([])\r\n\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80,sender.Height + 5))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tactiveview = doc.ActiveView\r\n\t\t\t\t\tbbox = element.get_BoundingBox(activeview)\t\r\n\t\t\t\t\tactiveuiview = [v for v in uiviews if v.ViewId == activeview.Id][0]\r\n\t\t\t\t\tactiveuiview.ZoomAndCenterRectangle(bbox.Min, bbox.Max)\r\n\t\t\t\t\tuidoc.RefreshActiveView()\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\t\tif (viewindex >= len(viewsforelement) -1) or not (element.Id in uidoc.Selection.GetElementIds()):\r\n\t\t\t\t\t\tviewindex = 0\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tviewindex += 1\r\n\t\t\t\t\tuidoc.RequestViewChange(dbView)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\tform.topmost()\t\r\n\tform.ControlBox = False\r\n\txlabel = 25\r\n\txinput = 150\r\n\tformy = 10\r\n\tif IN[8] > 350:\tformwidth = IN[8]\r\n\telse: formwidth = 350\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - 2 * xlabel,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + 15\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\tlabel.Text = j.inputname\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height + 25\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or i == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height)+5)\r\n\t\t\t\t\trball.Width = 70\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(80,(j.height)+5)\r\n\t\t\t\t\trbnone.Width = 90\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = TextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 45 ,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25, tn.Bottom-tn.Top+25)  \r\n\t\t\t\ty = gb.Bottom + 25\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35\r\n\t\t\t\t\t\trb.Location = Point(20,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot +20\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tif j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Text = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 30\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50\r\n\t\t\t\tdisplabel.Location = Point(0,5)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25,y+25)\r\n\t\t\t\ty = im.Bottom + 25\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25,xinput-25,80,90,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,xinput,40,120,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\t\tlogopaths = []\r\n\t\t\tfor child in root:\r\n\t\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\t\tfor path in child:\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\t\t\t\tlogopaths.append(path.text + \"\\Data-Shapes\\extra\\\\a.png\")\r\n\t\t\tdeflogopath = \"\"\r\n\t\t\tfor path in logopaths:\r\n\t\t\t\tif deflogopath == \"\":\r\n\t\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\texcept: \r\n\t\t\t\t\t\t\tpass\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20\r\n\t\t\tylogo = formy+10\r\n\t\telse:\r\n\t\t\txlogo = 30\r\n\t\t\tylogo = formy\r\n\t\tsize = 110\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tpass\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400:\r\n\t\t\tformy += 50\r\n\t\t\txinput = 270\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20\r\n\telse:\r\n\t\tformy += 50\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65,formy+30)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] and IN[7] > 0:\r\n\t\tformbody_calculatedheight = IN[7] - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100: formbody_calculatedheight = 100\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\tuiviews = uidoc.GetOpenUIViews()\r\n\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\tactiveviewid = doc.ActiveView.Id\r\n\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\telse:\r\n\t\tactiveUIView = uiviews[0]\r\n\trect = activeUIView.GetWindowRectangle()\r\n\tform.StartPosition = FormStartPosition.Manual\r\n\tform.Location = Point(rect.Left-7,rect.Top)\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result\r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017']\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!']\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "483756b920064a19a9e49adb57e05188",
      "Inputs": [
        {
          "Id": "4d479e344cf845e689de8427a9565d08",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1b420704d444db89ba0717d487c0a40",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db5011af6a024208b5c4aacc84b38939",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9257964caee4c3cb2eaebcbc85fcefb",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "776d8c1e3fde49f58e9045821583cfb5",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98e10759fc8e41deb58a21ae418eb3db",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78c73dd34d354cf99f0a60a474a4f638",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26c233689ec64f4da7b13d0cc9ecf34d",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4525442c3a364a968749e58b2e6ead10",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "629dede912ac4fb5b218ed46d8de594b",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "502239ab0b374779a92f95267de68b14",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8902049699ba42a193b07ffcb8d9d62f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "a034dec77d02476bbe665da47c938e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c05639c788544cd7ab17c9596a3d77c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "500;",
      "Id": "cb770c036f3245a6951a0ee59f288a51",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88402b00c09147108c8ef49c7fe82fda",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "6ac5a6e61c15434ba1a9d31e498f9fd2",
      "Inputs": [
        {
          "Id": "7a2d310413c1438ea4257ad72bb503fe",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cfaf3b4d796f43e4a7501a733e7f98ee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2193acb679534d6aa5d8a03d4d5cfa46",
      "Inputs": [
        {
          "Id": "1ccc9244aedf463e8fdeee23550efed7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c186774c25b946ba9546db996099ee7c",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72dcf58f09064350bbf567c659c02ce4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "ded8e786e004472b920062e576726d26",
      "Inputs": [
        {
          "Id": "faf19652509d4206a080e874bdb10855",
          "Name": "list",
          "Description": "The list of items to be sorted.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "779c5c7b4eeb4bc8983944dbeeb387bd",
          "Name": "newList",
          "Description": "The indices of the items in the sorted list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "fdd8365d65d44f718865b54540cdf019",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca50abe1d5274000831d9bf5388d5202",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "500;",
      "Id": "6af6ae21d383446fbca2fcb46b2537d6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52f1b308c41e4167b3b80cdb6e13231c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "837900672ca4476dab16412af6b42e78",
      "Inputs": [
        {
          "Id": "e37b7b2e9e724fb0875baadef6381f63",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "123acd1e17934807b9d572c3e50cb718",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71ab79ef6b0449f488dfc41fe58df37e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "c235f9bafd50448398b91414f0d7a721",
      "Inputs": [
        {
          "Id": "30c676c4fb484e13923caddf677cd88c",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f3df9dcaaa042d29b555fafbc93cf27",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass listview():\r\n\r\n    def __init__(self,inputname,height,highlight,display_mode,element_count,default_values,sorted,showId):\r\n        self.inputname = inputname\r\n        self.height = height\r\n        self.highlight = highlight\r\n        self.display_mode = display_mode\r\n        self.element_count = element_count\r\n        self.default_values = default_values\r\n        self.sorted = sorted\r\n        self.showId = showId\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.ListView input'\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\n\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\r\nif IN[6]:\r\n\telement_count = len(in1)\r\nelse:\r\n\telement_count = 0\r\n\r\nx = listview(IN[0],IN[3],IN[4],IN[5],element_count,IN[7],IN[8],IN[9])\r\n\r\nfor k,v in zip(in1,in2):\r\n\tif x.showId :\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)+ '  -  id: ' + str(v.Id)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8') + '  -  id: ' + str(v.Id)] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\telse:\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "60216009c6ef42758558505093719caf",
      "Inputs": [
        {
          "Id": "00232e05c6e14473904b8f54a7e8afef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3eed14e6c7564b4c8beb70e01cdc5a1a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e1143cd958648e48427353b9c91da09",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e414acba41342c5a9409abf731f5b45",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "166026ec1a9a4af2bb923879ecba21aa",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcb9c09c6429469594527d4373825b58",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52ad71a755584cb78acbf2db87f2896f",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdb33f0d9e9845cbac7ff57f84004117",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e1b9a4c41ab4d2e9988982fc709f78a",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30b7bab5c3e247dcaca8a332cc20f43e",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78977a87fcef44238cf087ee79c28e2d",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f73eb42c16564efd87d92610db7d629c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13c477814c8f4b30ad5487c4f05c396f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c954e9cbe2b7487ebee8685ce2b33b4d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9f92654b772547ea9fce330091fb9be4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "4eec052204664583a3ce48492c06b3f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2067be684fce401bbb7f444c98a077ce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DefaultValueIndices_optionnal : int[] = DSCore.List.Empty;",
      "Id": "a57f6a3fc0d34b799056c45b5799c48a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73d2b1f9c5c747a9a1e04ecb861d5b0c",
          "Name": "",
          "Description": "DefaultValueIndices_optionnal",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Categories to process",
      "Id": "5ed91754b7fa4870b7db49dca4e96971",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b3ab87accf8471baa6640194574d31a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "94ea1409ff4d4316a3afe768f7d009ce",
      "Inputs": [
        {
          "Id": "57b86d8526154d0496bf9e6a9507de87",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d39b64b85a44c03b70ee40b06f21576",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "235b6538157c4e4c904b59ba670fb45a",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"!\";",
      "Id": "1ebc629208484bfb9bdf1caa2a5649b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a83e43f0cf014234b4c56dfbb3466063",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "After selecting the categories, you will get the choice of parameters available for mapping to global parameters _ both shall be of the same type (text/number/yes-no, ...)",
      "Id": "858a6d39f0734ed688535900c5e4514c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa7679f206cb48208ce330bb71a5a983",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitextnote():\r\n\r\n    def __init__(self,inputname, title, textnote):\r\n        self.inputname = inputname\r\n        self.title = title\r\n        self.textnote = textnote\r\n\r\n\r\n\r\n    def __repr__(self):\r\n        return 'UI.TextNote input'\r\n        \r\nx = uitextnote(\"\",IN[0],IN[1])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "38c066953df349f98ab0dd1a6cd36a7e",
      "Inputs": [
        {
          "Id": "117d1b3db3164dee8cbd7ac3b1be6bfa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f939eff9a454b37aaa7f3fae1be1136",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b1e1c1ab2ff490f9340ba79507f757f",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[passthrough,waitfor][0];",
      "Id": "ef5dc072339649d0b9eab1ac6b60afa4",
      "Inputs": [
        {
          "Id": "3fbaaf2f0e0e44a798f44d8671565f75",
          "Name": "passthrough",
          "Description": "passthrough",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6dc7e1fd49a413cb0e7363d8a7a2a7b",
          "Name": "waitfor",
          "Description": "waitfor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff1174d22b684567b53485ee8c630ca5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Categories parameter",
      "Id": "7e6bb182637741cbaf382a58e13ed4a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f451cd4daef44396806f48b43abe5e06",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Eléments traités",
      "Id": "1bd3c04fa2b049ebb7cc03167062b1a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "246568cf36ec44d6ae29a67df48573d6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Paramètre de type (ou d'instance)",
      "Id": "10ceed1b88cf4e10a0f4813662d3bce0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e015482487964557a15ea8b24cec88b3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Paramètre global",
      "Id": "747d8e2d28f84607babe4432daa3884f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae95466a4ae242a2b0d1edbd044ec70b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Lier le paramètre au paramètre global",
      "Id": "a632d3b0673342baa58bd532f21297d1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a34269ac4a147cbb059d04dd9ac4509",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Catégorie(s) à traiter",
      "Id": "bbafe658e00342d8a6af453b9df4dd88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29c2069a7b05479eafc91d18acc9b853",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Après avoir sélectionné les catégories, vous aurez le choix des paramètres et paramètres globaux à mapper _ les deux devraient être du même type (texte/nombre/oui-non, ...)",
      "Id": "c84af26cccaf479e80b95f31b661159e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b336351cdf74fc29e05950e8c6bffdd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Paramètre des catégories",
      "Id": "50aae3c76855433b90811aaeddb91732",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ee46f5ca81a4141a755ef73fb02a94e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Orchid.Revit.Core.Parameter.Associate@Revit.Elements.Element,string,var",
      "Id": "1ef988edf62f4fa3a623052937656e2d",
      "Inputs": [
        {
          "Id": "8b7ba83da8eb4768b0dbbabab2aee413",
          "Name": "element",
          "Description": "Element as string or Revit.Elements.Element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d426498cba034bc7835bb7156abc61d9",
          "Name": "parameterName",
          "Description": "The name of the parameter\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c19a54b8618543608d8dbc225697ea42",
          "Name": "globalParameter",
          "Description": "The name of the global parameter\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3b008d93a8542dab336579a12732d28",
          "Name": "Element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Associate element parameter to global parameter\n\nParameter.Associate (element: Element, parameterName: string, globalParameter: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Annuler",
      "Id": "ef39dc486cc74e36b20dfa3fd25cbe66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a9ea3a07c5cd4fc89e84a1468579d653",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Cancel",
      "Id": "617e6997d90e4ef896abcfd5c1972b8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a7ec0578cd0420399bd5271e2ab6e44",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "4195e2d250024bbf8e8c59db64fc3ab7",
      "Inputs": [
        {
          "Id": "440fc9d2409f4f8db031bda936ece553",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c8ffd46cb404534b0b6b82c262b1cfa",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# BIM One Inc. - Jean-Marc Couffin - 2019\r\n\r\nimport clr\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\n\r\n\r\nTitle = IN[0]\r\nTotalCount = str(IN[1])\r\nProcessed = IN[2]\r\nTotalCountNoGo = str(IN[3])\r\nUnProcessed = IN[4]\r\n\r\nTaskDialog.Show( Title, TotalCount + ' ' + Processed + \r\n'\\n' + TotalCountNoGo + ' ' + UnProcessed\r\n )\r\n",
      "VariableInputPorts": true,
      "Id": "758132443a734e969b750ac70440b2c3",
      "Inputs": [
        {
          "Id": "92f21fbbc17e431ca2b354254648892f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29fa1890b280429da12ae2531d339ad7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58ce69a1210c4a688385b5b3d9802a22",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9b488ba5672433d94a816c23d8c3abf",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f91b7c2d593a47e4acafa342879c5651",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3812e9214e2f44f49bb8efd29183f17b",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f971e987ed634a208d57f2cc56de4d97",
      "Inputs": [
        {
          "Id": "3956eb420d9c4c10977dd6b12b3d8345",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cb0efbb167c4270ba9363c368668305",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37ddede81fc8476487ba28955970e2b4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "1372025c858844daa23e817a1e3283a1",
      "Inputs": [
        {
          "Id": "40a84e82b7c34499b9103e71b9e1f178",
          "Name": "obj",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52ab1dddce21468f85dace1f93262cd8",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines the if the given object is null.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "32c167b3050046e6a33f363aba4f07d4",
      "Inputs": [
        {
          "Id": "66d937444bd64b48b9b74c9771aa43d3",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "963eec56390a425997c4c25057b7831a",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "78fe05c9a3a541daab56b99269dc1010",
      "Inputs": [
        {
          "Id": "0720ae7e14694156a61e3140d6b1190e",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14273fde417a41a181dd4fde5a49e52a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data such that non-trailing nulls may not be filtered out\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b66e6baed20a4ad39dbdfbe88a9f09cf",
          "Name": "var[]..[]",
          "Description": "A list cleaned of nulls and empty lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "41d746df93174fbfa734b788d5edfa41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e4efa910afa4c29a6ea939bbff376cc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Elements non-traités",
      "Id": "0d1f72ac887c47f085e39eb137534950",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa89609ea4c041daa0ccc99ab0f0011f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Elements not processed",
      "Id": "e07afe98814b43eb9270df60f5961b65",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae90e745a6104201969092c140166d3d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crée une chaîne."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "edac8df27e674f59a2a5cd28ba0030f0",
      "Inputs": [
        {
          "Id": "39ac6951c4f4467d90a36c98f251822b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b093b40cb1f479085355d6943065be7",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7db0f5a2e63149adb07a973edfc800c5",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Orchid.Revit.Elements.FamilyType.ByCategory@var",
      "Id": "12c4c3b1de8b4ffc972dfdeac4442f56",
      "Inputs": [
        {
          "Id": "346c4a7b3dcc441798bc58265f04199a",
          "Name": "category",
          "Description": "Category as string or Category type\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75b50571c74d443d8443cd594a1d38e6",
          "Name": "FamilyType",
          "Description": "Family type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all family types by category in list of documents\n\nFamilyType.ByCategory (category: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "7b456c137e5142a59e09f8f15efbff91",
      "Inputs": [
        {
          "Id": "a8eab443d5184d3694566c03692d2a31",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a742cba94dbc4977a91391943b037f29",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Name",
      "Id": "998e31015ed44808b2fcd50542e11b6d",
      "Inputs": [
        {
          "Id": "e0bb80c8922544c3a3aec8c63e3dae96",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7b99ebb31db4548903828c221efa99a",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the parameter.\n\nParameter.Name: string"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d06ecc03344645ac90bf994e403a28c1",
      "Inputs": [
        {
          "Id": "0e68502468bb4d63810bf5364dbf1520",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "871d40574a934eb69aedc9721f744bfb",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fc9202927ec4548b147433eb4e958bb",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    }
  ],
  "Connectors": [
    {
      "Start": "e751e0a5fe8741e095c53a1bd62d74b8",
      "End": "6e4636e4f4b14b1888aaeddbb665cf77",
      "Id": "0fe1b522be9c4a89a3454eacca2cac47"
    },
    {
      "Start": "f23c8f7f8fe14899acceae866e8d7c1b",
      "End": "58ce69a1210c4a688385b5b3d9802a22",
      "Id": "014c1dfdf3184f6e8ff1ed7f1359e20d"
    },
    {
      "Start": "f23c8f7f8fe14899acceae866e8d7c1b",
      "End": "92f21fbbc17e431ca2b354254648892f",
      "Id": "6c0c398361bb421ea177f1719024772e"
    },
    {
      "Start": "9e45482596254099a0a9c165187e082d",
      "End": "84faecf915514f0fa6d5d591ec390598",
      "Id": "c5c0a1ae2a014c9695967d85421b5a74"
    },
    {
      "Start": "7fa6fb083d8d4f338c43c9ffa67126ed",
      "End": "da54250c070d4bc3b4a55e187002d4b9",
      "Id": "026cf85c499647529152c086adcfff38"
    },
    {
      "Start": "99bfb6303ea841f38da3d826b3f133ed",
      "End": "562fa3103b9e4e14a344878f296ade83",
      "Id": "9b5c248255f64922a156e46d0fc86b46"
    },
    {
      "Start": "99bfb6303ea841f38da3d826b3f133ed",
      "End": "d9257964caee4c3cb2eaebcbc85fcefb",
      "Id": "68d3af48198745a0860184345d13b0f6"
    },
    {
      "Start": "8165cfec64b942ea93785ed99286c5e7",
      "End": "00232e05c6e14473904b8f54a7e8afef",
      "Id": "b7e62c660ee245a09cc1a3bab31ab125"
    },
    {
      "Start": "8a308015f3db4edf9f5892d5ec098cf1",
      "End": "1f939eff9a454b37aaa7f3fae1be1136",
      "Id": "304d0cc0baac47d4b6ab5f5fb9a48133"
    },
    {
      "Start": "50bbe77cb0154b2d837ace225a5f5e3d",
      "End": "c65650e04c064b678a702e1ec29ebc35",
      "Id": "a5267b5f85aa44928846ccbf47871543"
    },
    {
      "Start": "c194f885aaca4a7e869aa388f2515bcd",
      "End": "78c73dd34d354cf99f0a60a474a4f638",
      "Id": "d9562d5341894d2b8454394d1f3b2ff8"
    },
    {
      "Start": "c194f885aaca4a7e869aa388f2515bcd",
      "End": "a68de4f1a7394a3f8e62e841234cb5d3",
      "Id": "1a9b657dbd7c43adae4428520c4101b1"
    },
    {
      "Start": "8858f304317b4c6fb94d11adac45d69a",
      "End": "f91b7c2d593a47e4acafa342879c5651",
      "Id": "607aba858943472693ec8196402650e9"
    },
    {
      "Start": "4d0d79a927ad43c78dd95b30a15251fb",
      "End": "854355f2cdeb47328387d3f6616196fe",
      "Id": "4cbb47d818624fbda9919cf5757b96ea"
    },
    {
      "Start": "d2e04d2e5b3846a997b181f6b38e9cdd",
      "End": "3fbaaf2f0e0e44a798f44d8671565f75",
      "Id": "5d928e001fab435f856cf74bbeb9d0e6"
    },
    {
      "Start": "51486b230f164559b8776a9ec6ad2757",
      "End": "0d8d37dd4cee41efbfd3a1024f833010",
      "Id": "905fcd747c4d4f2881b42bad82e58ceb"
    },
    {
      "Start": "9eb12c5fca214aa7bd62249cced2ebd6",
      "End": "e0d7985a5474479fb53e298c54437d8b",
      "Id": "2326c410a0f34e2f90416beae6cc9457"
    },
    {
      "Start": "400682fdcc6647a7b0ea05fad4a7320a",
      "End": "739324fc937e478ea30a3ec793d7b222",
      "Id": "c58be60be33f4ee1bac09bc81da952b0"
    },
    {
      "Start": "e370bdab71f94498a2977475e3086e62",
      "End": "2bd53bff77fc4c73b0f0eea1994f1382",
      "Id": "769bb8f2659249f9ae7656484d9eda01"
    },
    {
      "Start": "638e718c70c742edb883056b37c78aff",
      "End": "647ed91fa0c342ebabb50018d8d3d8da",
      "Id": "c10d02d833f2424bb15de7f4d444db7b"
    },
    {
      "Start": "fe8e52d05da7467085fdc0be977eebe4",
      "End": "67db14c728b941a582da5fa203004aae",
      "Id": "0ee54bb2957d4e77a03f87c74cca9ea1"
    },
    {
      "Start": "8abd26ea323344458ca0e9ce3ab92a6f",
      "End": "2c579e178980415c868a4bf1d29ade14",
      "Id": "5d634f27552941da9f993f5e2fc5d248"
    },
    {
      "Start": "4b3cc50dae6f43f084a25d5975a5ada3",
      "End": "a0610ff77f304121b68935a20fe79343",
      "Id": "addf77b4191644f188f83cc3cfc93aa8"
    },
    {
      "Start": "60dc71da60bc4aa29b47f4071ebc7ed6",
      "End": "682a6993849b4f1c91617fbbfb9e29c3",
      "Id": "f61313b4e4904f579dfb95c2b6fa2fa4"
    },
    {
      "Start": "788d9a9348e24b1e88bfa6130a8628da",
      "End": "809e188ae6824092a550c0d591856c43",
      "Id": "400abaa5021f4722980376e8773a2704"
    },
    {
      "Start": "645d3afc9cce4f30a28fc4fb8ca9f25b",
      "End": "d5ebe2acb58c4fbfb4978a6d16f43a82",
      "Id": "424e44b8256d41279ad3d7df8c14a26d"
    },
    {
      "Start": "140344beec78481ab386c84061bce6f9",
      "End": "4c3beec1f67e462f8a86ba195d72063b",
      "Id": "2cb306e3484b4b45a580eec07db56cfc"
    },
    {
      "Start": "79766a9259254e1bb69b29f702224568",
      "End": "36cd7ed653064061ac03ecb23dded3a5",
      "Id": "4906598d0d1f4bcf9227651ab536c07f"
    },
    {
      "Start": "4279e6957899475a9349161dac601374",
      "End": "bf2df61c0ef847009cde93e698d3c38e",
      "Id": "c2b3c825dca242f29d947356bd528225"
    },
    {
      "Start": "7c684e0d939a467ab1c8ff817c0cdeea",
      "End": "819f9e6666a54d2e9fc763160d2d2197",
      "Id": "fa6c03d1e6a34df3b6ce674f4e39e8be"
    },
    {
      "Start": "f4669fb8e40b4e139b7452dee5e50092",
      "End": "8b7ba83da8eb4768b0dbbabab2aee413",
      "Id": "a4dc792c983946a49d9d358fe331a94a"
    },
    {
      "Start": "2542e764e37b4698b477b21f2e647180",
      "End": "ccf517f314dd4e68892cb0fe85fdec54",
      "Id": "2725afb00d96410f8d9221752495de9c"
    },
    {
      "Start": "2542e764e37b4698b477b21f2e647180",
      "End": "d05ae70aa89541928c04aae708263d49",
      "Id": "6b66d416a70049dfbe0646dcb15d048c"
    },
    {
      "Start": "2542e764e37b4698b477b21f2e647180",
      "End": "8673de5b88c346b88e3f857c6735a0f7",
      "Id": "07730ef3ab4545eda5c0f58c52c4218d"
    },
    {
      "Start": "698d8b1e47db482cb99296458108615d",
      "End": "c19a54b8618543608d8dbc225697ea42",
      "Id": "c0ea33ac82d044a88a422e97a2b6084a"
    },
    {
      "Start": "f355cf9df07c44478d0d3bb40c293c59",
      "End": "0795a54c9116424e906dcf76b0822118",
      "Id": "3b4f7467f7b14f14bc2c7c5233a3ee57"
    },
    {
      "Start": "cd7c71a7379f414b9edac09d4972a866",
      "End": "f47ec9abf1184be3be84352c0c3b2ced",
      "Id": "a69117dc2b2a46829d6c55c9ffb8fde9"
    },
    {
      "Start": "18c95a16612b419ba07f5365f114c41a",
      "End": "9b577ccb1b7f4b8c8ce7bbca0cb0c20d",
      "Id": "dcb35a97e38e410ea6522b233cb5a552"
    },
    {
      "Start": "6ba47c1aa32540519238869251e737fa",
      "End": "f2e7eecf386d4a639f8ea9559c01565c",
      "Id": "2364a2c603f24a69872e7f99e216ed08"
    },
    {
      "Start": "6ba47c1aa32540519238869251e737fa",
      "End": "4590cc6f31474615a7e4e3360b22a8a8",
      "Id": "28934b7d58264a84b61c32ef9e8bdbd7"
    },
    {
      "Start": "c2715935d2864647ad04f378d01bed80",
      "End": "cd2ca67dd6f142fc99fee762c9b7277d",
      "Id": "029ed74d464644d39b34ec9044f49e6a"
    },
    {
      "Start": "db19e8806a0d43d4ad0134246a3694dc",
      "End": "0e68502468bb4d63810bf5364dbf1520",
      "Id": "654391add7c141e5be71b640feb17363"
    },
    {
      "Start": "84b27b029e584269a7f42e40ca7ce3de",
      "End": "f8db5b36181944179746cb566d2483c5",
      "Id": "63b0cbd0fed942c0a561a0a9e57d85f9"
    },
    {
      "Start": "84b27b029e584269a7f42e40ca7ce3de",
      "End": "346c4a7b3dcc441798bc58265f04199a",
      "Id": "7b318a19c0fc4e5aaaa64cbc460232b6"
    },
    {
      "Start": "f374dde6f87b47da87ae99c69caeb3c3",
      "End": "0f6b54b96b3b45049cdc9990af82fa3b",
      "Id": "67032e7a0dc94139bf0c8c3ac3231e0a"
    },
    {
      "Start": "1ab0cd0d494e49aabbe9a698cd652002",
      "End": "d426498cba034bc7835bb7156abc61d9",
      "Id": "63629b4b99f5422d809baf50d86e3e80"
    },
    {
      "Start": "1a279b68296f44d0a903264a84412ee7",
      "End": "f1e6b1a454924c40b40eaccd45432c84",
      "Id": "575afd0defd9402bb507db0333ddac9a"
    },
    {
      "Start": "317643b14cb84d11ad76d25019a83d23",
      "End": "ce9c98fb28ad45129c0d68eef54aab8b",
      "Id": "6d211bb1b64a4f5ab125c90fba28b539"
    },
    {
      "Start": "8040ae995678490a8ae52e83084df9d0",
      "End": "02650a869eab49958a211a8f94af1ef3",
      "Id": "389bd6953984434eaf64175bfa0e5838"
    },
    {
      "Start": "aeb3fe7c9a954ccc8e816a2d2c080234",
      "End": "f76f86c8ac134fe2a33e54d20a538825",
      "Id": "468d4facb685410e86bc4ec40759f3d3"
    },
    {
      "Start": "d0b867f1271e48709d78561dcb264b8d",
      "End": "f94d48efe5b7426792249c1408192433",
      "Id": "edf018b9cbbc488c84f116d964fd7653"
    },
    {
      "Start": "ccb8e4af5c5c4264af62e714eea0cc82",
      "End": "7d0bcece97b847ffa278dd3d2932d87d",
      "Id": "ef495ab186ac4a418657797f8724b6a1"
    },
    {
      "Start": "94166ed1348c4b1aa3c07e7ac6af2bfe",
      "End": "0b9a03a9245a493d87e93588bcfe7143",
      "Id": "920f8ec5d30940d392b3d8ea68766863"
    },
    {
      "Start": "f490cb9593f64670a0445ddc927bcb91",
      "End": "3bc7eb3efee04becb2b44b26cb837802",
      "Id": "3ca1ff1d19e04865947f466f3e94e777"
    },
    {
      "Start": "78de7f93f73f440d9aff548a7222e84b",
      "End": "faf19652509d4206a080e874bdb10855",
      "Id": "cf24ede569674f5fbe4571fe499578b7"
    },
    {
      "Start": "3f6715cd00ea41a7b939bac70bc01b0d",
      "End": "f1b420704d444db89ba0717d487c0a40",
      "Id": "a1ec7b62eeb6430ebe4185ba08b7d51e"
    },
    {
      "Start": "15e6eca626884efbb6c03975e7ffa5d5",
      "End": "db5011af6a024208b5c4aacc84b38939",
      "Id": "7f722a218a594d2182f60839fe2836c5"
    },
    {
      "Start": "339101e5018a45d09461bf76f6e30916",
      "End": "776d8c1e3fde49f58e9045821583cfb5",
      "Id": "b16a4d7a56cf407db0c800a00158d2ef"
    },
    {
      "Start": "629dede912ac4fb5b218ed46d8de594b",
      "End": "7a2d310413c1438ea4257ad72bb503fe",
      "Id": "da115f6fb6c34d6e996418010974ae48"
    },
    {
      "Start": "8902049699ba42a193b07ffcb8d9d62f",
      "End": "98e10759fc8e41deb58a21ae418eb3db",
      "Id": "6857f1cbb12a450d86c17546ec913942"
    },
    {
      "Start": "c05639c788544cd7ab17c9596a3d77c2",
      "End": "26c233689ec64f4da7b13d0cc9ecf34d",
      "Id": "f401de28cbb04746b5f6d086836b3cf6"
    },
    {
      "Start": "88402b00c09147108c8ef49c7fe82fda",
      "End": "4525442c3a364a968749e58b2e6ead10",
      "Id": "2db31f02b83d4f6fb442353f751575f9"
    },
    {
      "Start": "cfaf3b4d796f43e4a7501a733e7f98ee",
      "End": "1ccc9244aedf463e8fdeee23550efed7",
      "Id": "104fec4630314bcd95724a37f8517bc0"
    },
    {
      "Start": "72dcf58f09064350bbf567c659c02ce4",
      "End": "1c13b9da5ed649cfb6076006bf746ddb",
      "Id": "2dcbc2edde06405a998bde811040f113"
    },
    {
      "Start": "779c5c7b4eeb4bc8983944dbeeb387bd",
      "End": "3eed14e6c7564b4c8beb70e01cdc5a1a",
      "Id": "273e0ea8119d4387b6738aab1e2d2ee2"
    },
    {
      "Start": "779c5c7b4eeb4bc8983944dbeeb387bd",
      "End": "4e1143cd958648e48427353b9c91da09",
      "Id": "9b24fb9dbf164e16b1f16c7c7f4b7db4"
    },
    {
      "Start": "ca50abe1d5274000831d9bf5388d5202",
      "End": "9e1b9a4c41ab4d2e9988982fc709f78a",
      "Id": "5959cf6bd410454f9e3715212944682d"
    },
    {
      "Start": "ca50abe1d5274000831d9bf5388d5202",
      "End": "30b7bab5c3e247dcaca8a332cc20f43e",
      "Id": "e13c7bba80d44170a6b08abc7f2964d9"
    },
    {
      "Start": "52f1b308c41e4167b3b80cdb6e13231c",
      "End": "2e414acba41342c5a9409abf731f5b45",
      "Id": "e477c0cfca804202bb37b33d64ef5b45"
    },
    {
      "Start": "71ab79ef6b0449f488dfc41fe58df37e",
      "End": "30c676c4fb484e13923caddf677cd88c",
      "Id": "e66afaa1040a40afb00989f3b5ded8ac"
    },
    {
      "Start": "0f3df9dcaaa042d29b555fafbc93cf27",
      "End": "c5f8e35967544800b8cf79fd51fd7944",
      "Id": "03fd4c75f76b44bb8308660d7d08ce77"
    },
    {
      "Start": "0f3df9dcaaa042d29b555fafbc93cf27",
      "End": "4f736b8194f5458fa56df52ef520a9f8",
      "Id": "dfd8154c2f3949ffaed2f1835bedbcbb"
    },
    {
      "Start": "0f3df9dcaaa042d29b555fafbc93cf27",
      "End": "c6dc7e1fd49a413cb0e7363d8a7a2a7b",
      "Id": "b67540ffec0e44558025e729249f7a78"
    },
    {
      "Start": "78977a87fcef44238cf087ee79c28e2d",
      "End": "7d39b64b85a44c03b70ee40b06f21576",
      "Id": "feb3264b2c384912a2b6ca7c0fbae1ce"
    },
    {
      "Start": "13c477814c8f4b30ad5487c4f05c396f",
      "End": "166026ec1a9a4af2bb923879ecba21aa",
      "Id": "4def0ba982184414a99db7562b8f095e"
    },
    {
      "Start": "9f92654b772547ea9fce330091fb9be4",
      "End": "bcb9c09c6429469594527d4373825b58",
      "Id": "b257734a5f8e47c6a685e9a53e6f0660"
    },
    {
      "Start": "2067be684fce401bbb7f444c98a077ce",
      "End": "52ad71a755584cb78acbf2db87f2896f",
      "Id": "e50a970aaeac4a69b9bad3665ac6045f"
    },
    {
      "Start": "73d2b1f9c5c747a9a1e04ecb861d5b0c",
      "End": "cdb33f0d9e9845cbac7ff57f84004117",
      "Id": "005499c25e0048518886640227f0e57b"
    },
    {
      "Start": "6b3ab87accf8471baa6640194574d31a",
      "End": "0c3df165cdc44c32ad5f566493fda8f3",
      "Id": "71c053ad7c3146e0b3593e35e6a54937"
    },
    {
      "Start": "235b6538157c4e4c904b59ba670fb45a",
      "End": "4d479e344cf845e689de8427a9565d08",
      "Id": "6f15edb8b44d4524a4272c61981d612a"
    },
    {
      "Start": "a83e43f0cf014234b4c56dfbb3466063",
      "End": "117d1b3db3164dee8cbd7ac3b1be6bfa",
      "Id": "5b637d4db45e453ca54b1856f79f5593"
    },
    {
      "Start": "fa7679f206cb48208ce330bb71a5a983",
      "End": "306154afd57c48fab47aeb04ab7e978b",
      "Id": "e8978cc5c84e4ec4a560844186196af9"
    },
    {
      "Start": "9b1e1c1ab2ff490f9340ba79507f757f",
      "End": "57b86d8526154d0496bf9e6a9507de87",
      "Id": "0f3794f4093142e682e2d26a00a9f2d8"
    },
    {
      "Start": "ff1174d22b684567b53485ee8c630ca5",
      "End": "0853024d58dc4e54b70a05f723c736eb",
      "Id": "666c8c49e3ed41ad95bb95f630e2257c"
    },
    {
      "Start": "f451cd4daef44396806f48b43abe5e06",
      "End": "a92ffb3bd38b40d99de8c05c89c7bdc9",
      "Id": "7b56732356b54598b9aa0d1e6b463318"
    },
    {
      "Start": "246568cf36ec44d6ae29a67df48573d6",
      "End": "3ecd703f1883448ca1c8b5a89420839b",
      "Id": "a1f8e3f74bc745e489d9dbbc3dcd70c1"
    },
    {
      "Start": "e015482487964557a15ea8b24cec88b3",
      "End": "b04887c99c1c4ac6894fb11310991c89",
      "Id": "0ce25b2ac4794ba9a6d56dfc44a09d79"
    },
    {
      "Start": "ae95466a4ae242a2b0d1edbd044ec70b",
      "End": "9df71fddd02a4b719e09bcc1f510bbc1",
      "Id": "403f83f457d14b72904e4ce958cbfb4d"
    },
    {
      "Start": "5a34269ac4a147cbb059d04dd9ac4509",
      "End": "eef65ea6665b467bbb38affdf8450862",
      "Id": "fbab4e2f242d4fcbbd0798b5f2b8b7d5"
    },
    {
      "Start": "29c2069a7b05479eafc91d18acc9b853",
      "End": "ff5e5bde7b2d4b178aa17786312676f1",
      "Id": "93badec5a2924045adec75b8c0394d45"
    },
    {
      "Start": "9b336351cdf74fc29e05950e8c6bffdd",
      "End": "266e00b6f4d44eac83585afa0b9195b1",
      "Id": "c5a3075afa08478a801f614172db20c1"
    },
    {
      "Start": "6ee46f5ca81a4141a755ef73fb02a94e",
      "End": "84bf7bdff47a4348ae81d7cdc1bd9da9",
      "Id": "2a4b4e39e5144331a94c0be54df945d1"
    },
    {
      "Start": "e3b008d93a8542dab336579a12732d28",
      "End": "3956eb420d9c4c10977dd6b12b3d8345",
      "Id": "6cae7dce3fff41cfb75bb884eccb7e8f"
    },
    {
      "Start": "e3b008d93a8542dab336579a12732d28",
      "End": "39ac6951c4f4467d90a36c98f251822b",
      "Id": "ba7b076abcb1453ab352fcd7a77bbca1"
    },
    {
      "Start": "a9ea3a07c5cd4fc89e84a1468579d653",
      "End": "4e803d5ceecf48f79b91cea095da7773",
      "Id": "7784de6e91794625acf8c349056fc931"
    },
    {
      "Start": "4a7ec0578cd0420399bd5271e2ab6e44",
      "End": "6655c6d2750c4d0f94136442b41f865c",
      "Id": "a414bc91cbff4d8ca1979e8be73a3be5"
    },
    {
      "Start": "6c8ffd46cb404534b0b6b82c262b1cfa",
      "End": "29fa1890b280429da12ae2531d339ad7",
      "Id": "13f16b707f66447e9b171f38873de636"
    },
    {
      "Start": "37ddede81fc8476487ba28955970e2b4",
      "End": "0720ae7e14694156a61e3140d6b1190e",
      "Id": "7fc9661df2a1447e8a973f9bbc467a0a"
    },
    {
      "Start": "52ab1dddce21468f85dace1f93262cd8",
      "End": "66d937444bd64b48b9b74c9771aa43d3",
      "Id": "405f335684d940dd9c4365ef9cb5627a"
    },
    {
      "Start": "963eec56390a425997c4c25057b7831a",
      "End": "e9b488ba5672433d94a816c23d8c3abf",
      "Id": "ab9df228a20c4926a0be981f76f87c7e"
    },
    {
      "Start": "b66e6baed20a4ad39dbdfbe88a9f09cf",
      "End": "440fc9d2409f4f8db031bda936ece553",
      "Id": "2e79dd6a8f52417ca2885033d7d8bf49"
    },
    {
      "Start": "7e4efa910afa4c29a6ea939bbff376cc",
      "End": "14273fde417a41a181dd4fde5a49e52a",
      "Id": "52c4bd6f0db5497b983f0fd78b4f865a"
    },
    {
      "Start": "aa89609ea4c041daa0ccc99ab0f0011f",
      "End": "4825c534afd444a3a1c0ea98c8b753a2",
      "Id": "badaf98afc394248b92d8f08054707ce"
    },
    {
      "Start": "ae90e745a6104201969092c140166d3d",
      "End": "70ac2214725d476485739c20e06af3de",
      "Id": "e61935602faf49a0a407a85c0e3fc737"
    },
    {
      "Start": "7db0f5a2e63149adb07a973edfc800c5",
      "End": "40a84e82b7c34499b9103e71b9e1f178",
      "Id": "1e5b69a6f4e7490a812dfc66669c9e39"
    },
    {
      "Start": "75b50571c74d443d8443cd594a1d38e6",
      "End": "a8eab443d5184d3694566c03692d2a31",
      "Id": "fa4d9de5cbe848f999e55355c9d868b9"
    },
    {
      "Start": "a742cba94dbc4977a91391943b037f29",
      "End": "e0bb80c8922544c3a3aec8c63e3dae96",
      "Id": "4b98b248fbaf4bd880e4b464d8b6c040"
    },
    {
      "Start": "d7b99ebb31db4548903828c221efa99a",
      "End": "871d40574a934eb69aedc9721f744bfb",
      "Id": "0bdde7a27dd5427494b3ae12817f1ccc"
    },
    {
      "Start": "9fc9202927ec4548b147433eb4e958bb",
      "End": "e37b7b2e9e724fb0875baadef6381f63",
      "Id": "1d2487d5d49f43c6b95f96d28dad8e18"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.2.6826",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -28.414709407536197,
      "EyeY": 30.782601858164224,
      "EyeZ": 137.33776213642497,
      "LookX": 28.414709407536197,
      "LookY": -30.782601858164224,
      "LookZ": -137.33776213642497,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "a663edd49df44494b640204007d12382",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4244.5453840836808,
        "Y": -1632.9959481208875
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91a95e88a5b1427189c131867dd7ed09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3442.8443061618918,
        "Y": -1617.0038443029543
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "3a46578e34ca434081fdbb9292916cf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4896.87044355084,
        "Y": -1612.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "99436462f7cd4a2ab95bbdf402153f86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1210.8546043642718,
        "Y": -1126.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "Looks up for some french to design the interface",
        "Id": "bad3fa21fbab416a9c9dc208c6f251c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5223.2808560269777,
        "Y": -2180.8887493572324
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "3f512373d2924f90b8a173aa2b029cb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -1130.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fcc979b9b67140818ac61fa635fa8037",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -800.71173295271024
      },
      {
        "ShowGeometry": true,
        "Name": "Data-shapes multiple input form",
        "Id": "07307cbb54334315ad9922aa1e4854bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2041.8546043642718,
        "Y": -1245.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "52f39b8b35f943f9abe2110a25cab9c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -1017.71173295271
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "af2a035939cb4a84b05410edebb8a04b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -908.71173295271024
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5f783f7190b84b6493ea302c85930aba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -1358.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "ac59d3541c3c4db9beb620a9a68bacf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -1518.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db0ef1bba9c845e481e70a30da422201",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1293.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "UI.DropDown Data - choix du paramètre global",
        "Id": "219e7ceb96214ee5a9427ac6eb827660",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1210.8546043642718,
        "Y": -1338.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3f93a142e25f4a769492f9902659f6c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1185.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "3748d1f6eeae4ff8b6ce956036a60125",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4893.1131026526737,
        "Y": -655.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b7997937fa394af5bf2ffdbf679e122f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -910.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a02f5586763f4455ac5128865837bb71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -827.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1ff50036a8b446d594284b8bef64043d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -744.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "0ad22257e2f54050aa8c07a4d867072a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2873.9141005620263,
        "Y": -1540.3485403183777
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "7921e900ee344b2fb0da13231e1e63a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -788.71582146409423,
        "Y": -1693.2301233062392
      },
      {
        "ShowGeometry": true,
        "Name": "GlobalParameter.FindByName",
        "Id": "e1a5a381024748c0b32362b97f2b52e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2660.928122087862,
        "Y": -1156.5790796146905
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType",
        "Id": "c30fd5eb961f4601b5456b6537614325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2525.9141005620263,
        "Y": -1548.3485403183777
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Type",
        "Id": "d92bf73e2dd6439698df96446537bcac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 28.059079452370042,
        "Y": -1109.0632605292983
      },
      {
        "ShowGeometry": true,
        "Name": "Element Types",
        "Id": "27c162d33c7849eabbd72d22d758f754",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -288.94092054762996,
        "Y": -1109.0632605292983
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "293b8e2844f247289f402c87ae2bb442",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 328.05907945237004,
        "Y": -1109.0632605292983
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "834ea96b6a414e8883161549386bcf55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -513.68618471468631,
        "Y": -1664.9520939574827
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter.Name",
        "Id": "1057e597e44441dcb973cac8e61a2ea3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -222.16035858755845,
        "Y": -1670.3444839824906
      },
      {
        "ShowGeometry": true,
        "Name": "Category.ByName",
        "Id": "a0d47898596d426285185c6b63b766ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1096.7158214640942,
        "Y": -1693.2301233062392
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "339bb488b11e4d7f90a1ce5ad70aadd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2446.2335608796757,
        "Y": -1311.9189955447964
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "13485636c903449da595a1f2751bf409",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1509.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "73ab5bc980b34249b8c0d46465640fae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1401.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "UI.DropDown Data - choix du paramètre",
        "Id": "20547ed6e82d46ccaa5590352c25da08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1210.8546043642718,
        "Y": -1550.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "UI.bool input - choix type ou instance",
        "Id": "195fc652e3954371b6e39d307a64e49d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1210.8546043642718,
        "Y": -1711.9250662860436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a0e588d0049e47eebf632917cab031b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1726.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "098bbd311a684a55a2825b68b10ed0e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 849.85460436427184,
        "Y": -1618.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7da14af870794d02a565d5e8cb171a58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -661.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "List category names",
        "Id": "25137cab6e1e4d0db7461bad530dd590",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3996.5615808255643,
        "Y": -1349.5091714436028
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3a4c2c56f2e74394a1a8bd96ec539110",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1503.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e22d479a3e9840cc83de8e1070027312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1395.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "6b9adbd30dc94640bfe42fbb9d283555",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1286.848738340648
      },
      {
        "ShowGeometry": true,
        "Name": "Data-shapes multiple input form",
        "Id": "483756b920064a19a9e49adb57e05188",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1890.3708061844977,
        "Y": -1393.848738340648
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "502239ab0b374779a92f95267de68b14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1173.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a034dec77d02476bbe665da47c938e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1065.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cb770c036f3245a6951a0ee59f288a51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -957.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6ac5a6e61c15434ba1a9d31e498f9fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1576.3708061844977,
        "Y": -1389.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2193acb679534d6aa5d8a03d4d5cfa46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1382.7158214640942,
        "Y": -1693.2301233062392
      },
      {
        "ShowGeometry": true,
        "Name": "List.Sort",
        "Id": "ded8e786e004472b920062e576726d26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3761.5615808255643,
        "Y": -1349.5091714436028
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fdd8365d65d44f718865b54540cdf019",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1123.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6af6ae21d383446fbca2fcb46b2537d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1664.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "837900672ca4476dab16412af6b42e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 298.43479427376485,
        "Y": -1664.9520939574827
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "c235f9bafd50448398b91414f0d7a721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 430.284178535906,
        "Y": -1664.9520939574827
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "60216009c6ef42758558505093719caf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2541.3708061844977,
        "Y": -1557.848738340648
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f73eb42c16564efd87d92610db7d629c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1556.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c954e9cbe2b7487ebee8685ce2b33b4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1448.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4eec052204664583a3ce48492c06b3f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1340.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a57f6a3fc0d34b799056c45b5799c48a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1231.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5ed91754b7fa4870b7db49dca4e96971",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -578.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "94ea1409ff4d4316a3afe768f7d009ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2317.3708061844977,
        "Y": -1637.848738340648
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1ebc629208484bfb9bdf1caa2a5649b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3149.3708061844977,
        "Y": -1772.6354050073146
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "858a6d39f0734ed688535900c5e4514c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -495.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "38c066953df349f98ab0dd1a6cd36a7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2541.3708061844977,
        "Y": -1691.848738340648
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ef5dc072339649d0b9eab1ac6b60afa4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1614.8546043642718,
        "Y": -1249.7117329527102
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7e6bb182637741cbaf382a58e13ed4a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -331.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1bd3c04fa2b049ebb7cc03167062b1a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1887.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "10ceed1b88cf4e10a0f4813662d3bce0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1804.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "747d8e2d28f84607babe4432daa3884f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1706.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a632d3b0673342baa58bd532f21297d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1623.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "bbafe658e00342d8a6af453b9df4dd88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1525.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c84af26cccaf479e80b95f31b661159e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1442.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "50aae3c76855433b90811aaeddb91732",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5203.87044355084,
        "Y": -1278.8083850079872
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter.Associate",
        "Id": "1ef988edf62f4fa3a623052937656e2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3232.3904775988785,
        "Y": -1343.7927606439223
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ef39dc486cc74e36b20dfa3fd25cbe66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5193.6765365390384,
        "Y": -1190.2480720924591
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "617e6997d90e4ef896abcfd5c1972b8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -248.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "4195e2d250024bbf8e8c59db64fc3ab7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4209.2831570638309,
        "Y": -1500.9381615783807
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "758132443a734e969b750ac70440b2c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4911.0865935352758,
        "Y": -1421.6558650450029
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "f971e987ed634a208d57f2cc56de4d97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3592.6913216195649,
        "Y": -1493.2925430569264
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "1372025c858844daa23e817a1e3283a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3958.3735355167883,
        "Y": -1257.5969506667645
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "32c167b3050046e6a33f363aba4f07d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4205.6482467507867,
        "Y": -1259.4935482207009
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "78fe05c9a3a541daab56b99269dc1010",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3910.6598687979726,
        "Y": -1498.2823669676395
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "41d746df93174fbfa734b788d5edfa41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3794.2833636090063,
        "Y": -1439.0
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0d1f72ac887c47f085e39eb137534950",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.01700591233,
        "Y": -1118.3686979235151
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e07afe98814b43eb9270df60f5961b65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5202.1131026526737,
        "Y": -165.81331623009964
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "edac8df27e674f59a2a5cd28ba0030f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3603.3064227096006,
        "Y": -1285.2365616922252
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByCategory",
        "Id": "12c4c3b1de8b4ffc972dfdeac4442f56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -925.93915809394991,
        "Y": -1400.6584133485144
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "7b456c137e5142a59e09f8f15efbff91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -642.5733076973421,
        "Y": -1410.4602741230071
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter.Name",
        "Id": "998e31015ed44808b2fcd50542e11b6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -317.04749568786838,
        "Y": -1411.4899108724151
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "d06ecc03344645ac90bf994e403a28c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 111.66372659733179,
        "Y": -1421.3549245485729
      }
    ],
    "Annotations": [
      {
        "Id": "b834b294565445309382c7cfe685f21e",
        "Title": "BIMOne",
        "Nodes": [
          "cbdb689c1fe94e56bbfd1af4c4307d36",
          "3c06f9e542e04f528712311cac16fd50",
          "6d323b85e30943e3a2d7af0ec56a5cb1",
          "439dcf5414364dc08f3aa5d9303a2985",
          "62d8fb5badd94709b0b54d597bb9ca01"
        ],
        "Left": -5232.66322791885,
        "Top": -2521.8325431040244,
        "Width": 1370.8687018305682,
        "Height": 214.01223523704994,
        "FontSize": 36.0,
        "InitialTop": -2468.8325431040244,
        "InitialHeight": 141.01223523704994,
        "TextblockHeight": 43.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "779bfe08aeb44a39bfbb645f72ced882",
        "Title": "UI\r\nSelect how to map parameters",
        "Nodes": [
          "99436462f7cd4a2ab95bbdf402153f86",
          "3f512373d2924f90b8a173aa2b029cb3",
          "fcc979b9b67140818ac61fa635fa8037",
          "07307cbb54334315ad9922aa1e4854bf",
          "52f39b8b35f943f9abe2110a25cab9c2",
          "af2a035939cb4a84b05410edebb8a04b",
          "5f783f7190b84b6493ea302c85930aba",
          "ac59d3541c3c4db9beb620a9a68bacf5",
          "db0ef1bba9c845e481e70a30da422201",
          "3f93a142e25f4a769492f9902659f6c3",
          "219e7ceb96214ee5a9427ac6eb827660",
          "13485636c903449da595a1f2751bf409",
          "73ab5bc980b34249b8c0d46465640fae",
          "a0e588d0049e47eebf632917cab031b2",
          "098bbd311a684a55a2825b68b10ed0e0",
          "195fc652e3954371b6e39d307a64e49d",
          "20547ed6e82d46ccaa5590352c25da08",
          "ef5dc072339649d0b9eab1ac6b60afa4"
        ],
        "Left": 839.85460436427184,
        "Top": -1822.7117329527102,
        "Width": 1426.0,
        "Height": 1115.0,
        "FontSize": 36.0,
        "InitialTop": -1726.7117329527102,
        "InitialHeight": 1071.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "5cc23edde7424a9d869d05608a70baf4",
        "Title": "ACTION - DATA\r\nCheck revit language",
        "Nodes": [
          "bad3fa21fbab416a9c9dc208c6f251c1"
        ],
        "Left": -5233.2808560269777,
        "Top": -2276.8887493572324,
        "Width": 334.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": -2180.8887493572324,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b82b79d386e4a6ca149118d8e6b6a5b",
        "Title": "INPUT\r\nEnglish",
        "Nodes": [
          "b7997937fa394af5bf2ffdbf679e122f",
          "3748d1f6eeae4ff8b6ce956036a60125",
          "a02f5586763f4455ac5128865837bb71",
          "1ff50036a8b446d594284b8bef64043d",
          "7da14af870794d02a565d5e8cb171a58",
          "5ed91754b7fa4870b7db49dca4e96971",
          "858a6d39f0734ed688535900c5e4514c",
          "7e6bb182637741cbaf382a58e13ed4a3",
          "617e6997d90e4ef896abcfd5c1972b8d",
          "e07afe98814b43eb9270df60f5961b65"
        ],
        "Left": -5212.1131026526737,
        "Top": -1006.8133162300996,
        "Width": 449.0,
        "Height": 909.0,
        "FontSize": 36.0,
        "InitialTop": -910.81331623009964,
        "InitialHeight": 890.0,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "0caf52c1c3d14b30b0675ca6eecdd09f",
        "Title": "UI\r\nPick categories",
        "Nodes": [
          "3a4c2c56f2e74394a1a8bd96ec539110",
          "e22d479a3e9840cc83de8e1070027312",
          "6b9adbd30dc94640bfe42fbb9d283555",
          "483756b920064a19a9e49adb57e05188",
          "502239ab0b374779a92f95267de68b14",
          "a034dec77d02476bbe665da47c938e1f",
          "cb770c036f3245a6951a0ee59f288a51",
          "6ac5a6e61c15434ba1a9d31e498f9fd2",
          "fdd8365d65d44f718865b54540cdf019",
          "6af6ae21d383446fbca2fcb46b2537d6",
          "60216009c6ef42758558505093719caf",
          "f73eb42c16564efd87d92610db7d629c",
          "c954e9cbe2b7487ebee8685ce2b33b4d",
          "4eec052204664583a3ce48492c06b3f8",
          "a57f6a3fc0d34b799056c45b5799c48a",
          "94ea1409ff4d4316a3afe768f7d009ce",
          "1ebc629208484bfb9bdf1caa2a5649b9",
          "38c066953df349f98ab0dd1a6cd36a7e"
        ],
        "Left": -3159.3708061844977,
        "Top": -1868.6354050073146,
        "Width": 1683.0,
        "Height": 1004.0,
        "FontSize": 36.0,
        "InitialTop": -1772.6354050073146,
        "InitialHeight": 960.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "de29f942d20f4f9fa53521dc2e6b9568",
        "Title": "ACTION - DATA\r\nGet the list of parameters of the selected ",
        "Nodes": [
          "7921e900ee344b2fb0da13231e1e63a8",
          "834ea96b6a414e8883161549386bcf55",
          "1057e597e44441dcb973cac8e61a2ea3",
          "a0d47898596d426285185c6b63b766ec",
          "2193acb679534d6aa5d8a03d4d5cfa46",
          "837900672ca4476dab16412af6b42e78",
          "c235f9bafd50448398b91414f0d7a721"
        ],
        "Left": -1392.7158214640942,
        "Top": -1789.2301233062392,
        "Width": 1986.0000000000002,
        "Height": 243.27802934875649,
        "FontSize": 36.0,
        "InitialTop": -1693.2301233062392,
        "InitialHeight": 173.27802934875649,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a9062c18985d49458deba5f760c85d5a",
        "Title": "ACTION - DATA\r\nGet global parameters list",
        "Nodes": [
          "d92bf73e2dd6439698df96446537bcac",
          "27c162d33c7849eabbd72d22d758f754",
          "293b8e2844f247289f402c87ae2bb442"
        ],
        "Left": -298.94092054762996,
        "Top": -1205.0632605292983,
        "Width": 840.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": -1109.0632605292983,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a0c4aef807614e67968eba85b4d6e2a1",
        "Title": "ACTION - DATA\r\nSelection of type or instance",
        "Nodes": [
          "0ad22257e2f54050aa8c07a4d867072a",
          "c30fd5eb961f4601b5456b6537614325"
        ],
        "Left": 2515.9141005620263,
        "Top": -1644.3485403183777,
        "Width": 495.0,
        "Height": 249.0,
        "FontSize": 36.0,
        "InitialTop": -1548.3485403183777,
        "InitialHeight": 153.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7a970c796d034a8684e2c0c09650cf2e",
        "Title": "INPUT\r\nFrançais",
        "Nodes": [
          "3a46578e34ca434081fdbb9292916cf4",
          "1bd3c04fa2b049ebb7cc03167062b1a7",
          "10ceed1b88cf4e10a0f4813662d3bce0",
          "747d8e2d28f84607babe4432daa3884f",
          "a632d3b0673342baa58bd532f21297d1",
          "bbafe658e00342d8a6af453b9df4dd88",
          "c84af26cccaf479e80b95f31b661159e",
          "50aae3c76855433b90811aaeddb91732",
          "ef39dc486cc74e36b20dfa3fd25cbe66",
          "0d1f72ac887c47f085e39eb137534950"
        ],
        "Left": -5213.87044355084,
        "Top": -1983.8083850079872,
        "Width": 447.0,
        "Height": 933.4396870844721,
        "FontSize": 36.0,
        "InitialTop": -1887.8083850079872,
        "InitialHeight": 914.4396870844721,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "ad386179692b467ab79abba4c23a5635",
        "Title": "ACTION - DATA\r\nList category names",
        "Nodes": [
          "25137cab6e1e4d0db7461bad530dd590",
          "ded8e786e004472b920062e576726d26"
        ],
        "Left": -4006.5615808255643,
        "Top": -1445.5091714436028,
        "Width": 437.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": -1349.5091714436028,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "44251f473ae244f98c582f8d314cef18",
        "Title": "ACTION - DATA\r\nAssociate the global parameter to elements of category",
        "Nodes": [
          "1ef988edf62f4fa3a623052937656e2d",
          "180ce44a32b44274b9965ca74ce9de8d"
        ],
        "Left": 3220.5390283154788,
        "Top": -1629.5761850453985,
        "Width": 291.85144928339969,
        "Height": 430.78342440147617,
        "FontSize": 36.0,
        "InitialTop": -1403.5761850453985,
        "InitialHeight": 204.78342440147617,
        "TextblockHeight": 216.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "26a1016083f74b23bd352b9cf8e017fe",
        "Title": "MONITORING\r\nCount how many were processed or not",
        "Nodes": [
          "4195e2d250024bbf8e8c59db64fc3ab7",
          "758132443a734e969b750ac70440b2c3",
          "f971e987ed634a208d57f2cc56de4d97",
          "1372025c858844daa23e817a1e3283a1",
          "32c167b3050046e6a33f363aba4f07d4",
          "78fe05c9a3a541daab56b99269dc1010",
          "41d746df93174fbfa734b788d5edfa41"
        ],
        "Left": 3582.6913216195649,
        "Top": -1596.9381615783807,
        "Width": 1462.395271915711,
        "Height": 432.34121091161614,
        "FontSize": 36.0,
        "InitialTop": -1500.9381615783807,
        "InitialHeight": 388.34121091161614,
        "TextblockHeight": 86.0,
        "Background": "#FF848484"
      },
      {
        "Id": "fb9c9d36a8894a2594ca1b1d4fd9e282",
        "Title": "ACTION - DATA\r\nGet the list of type parameters",
        "Nodes": [
          "12c4c3b1de8b4ffc972dfdeac4442f56",
          "7b456c137e5142a59e09f8f15efbff91",
          "998e31015ed44808b2fcd50542e11b6d",
          "d06ecc03344645ac90bf994e403a28c1"
        ],
        "Left": -935.93915809394991,
        "Top": -1517.3549245485729,
        "Width": 1177.6028846912818,
        "Height": 209.69651120005847,
        "FontSize": 36.0,
        "InitialTop": -1421.3549245485729,
        "InitialHeight": 165.69651120005847,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cbdb689c1fe94e56bbfd1af4c4307d36",
        "Title": "Created by BIMOne\r\nThe script allows you to map family parameters to global parameters in a few clicks\r\n\r\nLe script vous permet de lier les paramètres des familles aux paramètres globaux de Revit en quelques clics",
        "Nodes": [],
        "Left": -5222.66322791885,
        "Top": -2468.8325431040244,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3c06f9e542e04f528712311cac16fd50",
        "Title": "Copyright:\r\nThis script is provided \"as-is\" under MIT License",
        "Nodes": [],
        "Left": -4925.5041698371961,
        "Top": -2468.8325431040244,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6d323b85e30943e3a2d7af0ec56a5cb1",
        "Title": "EDITOR\r\nJean-Marc Couffin - March 2019 - v1.1\r\nDynamo 2.0",
        "Nodes": [],
        "Left": -4371.0392308292867,
        "Top": -2468.8325431040244,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "439dcf5414364dc08f3aa5d9303a2985",
        "Title": "CREATOR\r\nJean-Marc Couffin - December 2018 - v1.0\r\nDynamo 2.0",
        "Nodes": [],
        "Left": -4635.2839355702918,
        "Top": -2468.8325431040244,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "62d8fb5badd94709b0b54d597bb9ca01",
        "Title": "DEPENDANCIES\r\nOrchid v. 202.4.2.7024 \r\nby Erfajo under CC BY-ND 4.0\r\nhttps://github.com/erfajo/OrchidForDynamo\r\n\r\nCODE\r\nUI based on Data-shapes\r\nby Mostafa El Ayoubi\r\nhttps://data-shapes.io/",
        "Nodes": [],
        "Left": -4127.7945260882816,
        "Top": -2467.8203078669744,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "180ce44a32b44274b9965ca74ce9de8d",
        "Title": "Custom Node: Orchid\r\n   v. 202.4.2.7024",
        "Nodes": [],
        "Left": 3230.5390283154788,
        "Top": -1403.5761850453985,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 10131.130064407687,
    "Y": 5001.8308786548541,
    "Zoom": 1.9010824630568863
  }
}
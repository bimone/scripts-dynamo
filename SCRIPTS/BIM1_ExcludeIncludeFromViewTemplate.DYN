{
  "Uuid": "e29f538c-6b67-443e-9e00-f9352193fe2b",
  "IsCustomNode": false,
  "Description": null,
  "Name": "BIM1_ExcludeIncludeFromViewTemplate.DYN",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.List.Empty": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "ViewTemplates": {
        "Key": "archilab.Revit.Views.ViewTemplates",
        "Value": "archilab.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3be6fd98ef0143bea2dab7f9bfc588f3",
      "Inputs": [
        {
          "Id": "44745f09530946aa8fa874bf369563f3",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "970050f1b9b94cde8303d2c5fb5dd9ac",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6c796eb59f549109a152e172300b6e1",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2be512c2b00f499695c62e4467c31c71",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "f986b7d2ae434abb87390ab3d8dd0826",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d79ad7ce83784919b3c142aea0d4df6f",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];",
      "Id": "8462587d2d17498c834fde7e238c7176",
      "Inputs": [
        {
          "Id": "794082a92a504cc190b3c844e582015e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dbd806dd09a413b9dd1cd3c44c9434d",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53fc72328bc94dc89eb1f75c13a85832",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5647cef25c7647a1af22dab166b761a6",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "add58dda96864e5188334c0fb69038f0",
      "Inputs": [
        {
          "Id": "ae2e1c06fe5047858df76790b6f6e112",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb5adcbcfea24797b5ce19108229f451",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtenir le nom de l'élément\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Views.ViewTemplates.GetTemplateParameterIds@Revit.Elements.Views.View",
      "Id": "5392f5cca93c46eaa3e5c6cd2029ef95",
      "Inputs": [
        {
          "Id": "d82ca93404554344ba784595452e7979",
          "Name": "viewTemplate",
          "Description": "View to get the Parameter Ids from.\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2cac88f70ef4bdc9e7aa44f30735a23",
          "Name": "int[]",
          "Description": "List of Parameter Ids.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves Template Parameter Ids.\n\nViewTemplates.GetTemplateParameterIds (viewTemplate: View): int[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9c4f204a572d450588bd061797ce766a",
      "Inputs": [
        {
          "Id": "20de30d2c9b245ea979010671e4dd996",
          "Name": "list",
          "Description": "Filtrer les doublons dans cette liste.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27dd5e82e4374871855bed8e2a724e62",
          "Name": "list",
          "Description": "Liste filtrée.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Crée une liste contenant tous les éléments uniques dans la liste indiquée.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8d6d63a7854b4720a5e4ab7f928d120c",
      "Inputs": [
        {
          "Id": "caeef3684a6c44638e316528e08b529d",
          "Name": "list",
          "Description": "Liste à aplanir.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "394cadc9d5444ddb99965593d939114e",
          "Name": "amt",
          "Description": "Couches d'imbrication à supprimer.\n\nint\nValeur par défaut : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "000cee802def41ee98a39ce39a83c59d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplanit une liste imbriquée de listes en fonction d'une quantité spécifique.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Views.ViewTemplates.GetParameterName@int",
      "Id": "1c91ea0db2bf4d519a7682ec2551c5c1",
      "Inputs": [
        {
          "Id": "16106bf189fd402fac9530b59b012da7",
          "Name": "parameter",
          "Description": "View Template parameter.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc6faa24156e46e2ad22d40ca0a4b388",
          "Name": "string",
          "Description": "Name of the View Template parameter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves View Template parameter name from its Id.\n\nViewTemplates.GetParameterName (parameter: int): string"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "36df69a1ad994b479e92988764cfb736",
      "Inputs": [
        {
          "Id": "c8725273da8c4bdbb3484900c63ffe21",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b47d228359c4e6fbe672c413a827051",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8660d0e9640d4f39969de664071ae96e",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e484b7b9b7ca4e49bbd2d1e38991aaf1",
      "Inputs": [
        {
          "Id": "2425fa8396064b71aa361323a803a5e2",
          "Name": "list",
          "Description": "Liste à aplanir.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60e6a01d07bd46d78ac70fc4d23a6a53",
          "Name": "amt",
          "Description": "Couches d'imbrication à supprimer.\n\nint\nValeur par défaut : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d29d773f09d446988de2ecb89fd1d9a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplanit une liste imbriquée de listes en fonction d'une quantité spécifique.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"OK\";",
      "Id": "e7d4f01313ee4a2fb1380f16543530b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2bb3d1238f545f28242a909e5bd015b",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) Data Shapes,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@data-shapes.io @data_shapes\r\n\t\r\nimport clr\r\nimport sys\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\nimport os\r\nimport webbrowser\r\nimport unicodedata\r\n\t\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\tclr.AddReference('System.Windows.Forms.DataVisualization')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle , ContentAlignment\r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar, DataGridView, DataGridViewSelectionMode, DataGridViewAutoSizeColumnsMode , DataGridViewClipboardCopyMode , TreeView , TreeNode , TreeNodeCollection\r\n\tfrom System.Windows.Forms.DataVisualization.Charting import Chart , SeriesChartType\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr , Char\r\n\tfrom System import Type as SType\r\n\tfrom System.ComponentModel import Container\r\n\tclr.AddReference('System.Data')\r\n\tfrom System.Data import DataTable , DataView\r\n\r\n\t\r\n\tclr.AddReference('RevitAPIUI')\r\n\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\tclr.AddReference('RevitNodes')\r\n\timport Revit\r\n\tclr.ImportExtensions(Revit.Elements)\r\n\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\r\n\tclr.AddReference('RevitServices')\r\n\tfrom RevitServices.Persistence import DocumentManager\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\tclr.AddReference('RevitAPI')\r\n\tfrom Autodesk.Revit.DB import FilteredElementCollector , View , ViewType , ElementId , FamilyInstance , Document , UnitType , UnitUtils\r\n\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\tviewindex = 0\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\t\r\n\timport re\t\r\n\tdef regexEndNum(input):\r\n\t\ttry:\r\n\t\t\treturn \tre.search('(\\d+)$', input).group(0)\r\n\t\texcept:\r\n\t\t\treturn \"\"\r\n\r\n\tdef iterateThroughNodes(collection,li):\r\n\t\tif hasattr(collection,'Nodes'):\r\n\t\t\tntest = collection.Nodes\r\n\t\t\tif len(ntest) > 0:\r\n\t\t\t\tfor i in ntest:\r\n\t\t\t\t\titerateThroughNodes(i,li)\r\n\t\t\telse:\r\n\t\t\t\tif collection.Checked:\r\n\t\t\t\t\tli.append(collection.Tag)\r\n\t\treturn li\r\n\t\t\r\n\tclass selectionfilter(ISelectionFilter):\r\n\t\tdef __init__(self,category):\r\n\t\t\tself.category = category\r\n\t\tdef AllowElement(self,element):\r\n\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\treturn True\r\n\t\t\telse:\r\n\t\t\t\treturn False\r\n\t\tdef AllowReference(reference,point):\r\n\t\t\treturn False\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'BIM One Inc. | Include or exclude parameters from view template | UI powered by Data-shapes.io'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == myTextBox:\r\n\t    \t\t\t\tif f._isNum :\r\n\t    \t\t\t\t\tval = float(f.Text)\r\n\t    \t\t\t\telse:\r\n\t    \t\t\t\t\tval = f.Text\r\n\t    \t\t\t\tself.values.append(val)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\r\n\t    \t\t\t\telse:\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\telse:\r\n    \t\t\t\t\t\t\tself.values.append([])\r\n\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == myDataGridView:\r\n\t    \t\t\t\tf.EndEdit()\r\n\t    \t\t\t\tdsrc = f.DataSource\r\n\t    \t\t\t\tout = []\r\n\t    \t\t\t\tcolcount = f.ColumnCount\r\n\t    \t\t\t\trowcount = f.RowCount - 1\r\n\t    \t\t\t\tif f.Tag:\r\n\t\t    \t\t\t\tl = []\r\n\t    \t\t\t\t\tfor i in range(colcount):\t    \t\t\t\t\t\t\r\n\t    \t\t\t\t\t\tl.append(dsrc.Columns[i].ColumnName)\r\n\t    \t\t\t\t\tout.append(l)\t    \t\t\t\t\t\t\r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\telse: \r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\tself.values.append(out)\r\n\t    \t\t\tif f.GetType() == TreeView:\r\n\t    \t\t\t\tls = []\r\n\t    \t\t\t\tnds = f.Nodes[0]\r\n\t    \t\t\t\titerateThroughNodes(nds,ls)\r\n\t    \t\t\t\tself.values.append(ls)\t \r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\r\n\t    def exportToExcel(self, sender, event):\r\n\t    \t#importing Excel IronPython libraries\r\n\t    \tclr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')\r\n\t    \tfrom Microsoft.Office.Interop import Excel\r\n\t    \tex = Excel.ApplicationClass()\r\n\t    \tex.Visible = sender.Tag[1]\r\n\t    \tex.DisplayAlerts = False\r\n\t    \tfbd = FolderBrowserDialog()\r\n\t    \tfbd.SelectedPath = sender.Text\r\n\t    \tparent = sender.Parent\r\n\t    \tfptextbox = parent.GetChildAtPoint(Point(parent.Location.X,sender.Location.Y+5))\r\n\t    \tdataGrid = parent.GetChildAtPoint(Point(parent.Location.X,parent.Location.Y+23))\r\n\t    \tdataTable = dataGrid.DataSource\r\n\t    \tfptext = fptextbox.Text\r\n\t    \ttitletext = parent.GetChildAtPoint(Point(0,0)).Text\r\n\t    \tdr = fbd.ShowDialog()\r\n\t    \tfrstRwTtle = sender.Tag[0]\r\n\t    \tif frstRwTtle:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlYes\r\n\t    \telse:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlNo\r\n\t    \tif dr == DialogResult.OK:\r\n\t    \t\tworkbk = ex.Workbooks.Add()\r\n\t    \t\tworksheet = workbk.Worksheets.Add()\r\n\t    \t\t#Writing title and doc info\r\n\t    \t\tif sender.Tag[2]:\r\n\t\t    \t\ttitleCell = worksheet.Cells[1,1]\r\n\t\t    \t\tworksheet.Cells[2,1].Value2 = sender.Tag[3]\r\n\t\t    \t\ttitleCell.Value2 = titletext\r\n\t\t    \t\ttitleCell.Font.Size = 18\r\n\t\t    \t\ttitleCell.Font.Bold = True\r\n\t\t    \t\tstartR = 3\r\n\t\t    \t\tendR = 3\r\n\t\t    \telse:\r\n\t\t    \t\tstartR = 1\r\n\t\t    \t\tendR = 0\t\r\n\t\t    \tif frstRwTtle:\r\n\t\t    \t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t    \t\t\tworksheet.Cells[startR,j+1] = dataTable.Columns[j].ColumnName\t\t    \t\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR+1,j+1] = dataTable.DefaultView[i].Row[j].ToString()\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR+1,dataTable.Columns.Count])\t\t\t    \t\t\t\r\n\t\t    \telse :\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR,j+1] = dataTable.DefaultView[i].Row[j].ToString()\t\t    \t\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR,dataTable.Columns.Count])\r\n\t\t    \txlrange.Columns.AutoFit()\r\n\t\t    \tworksheet.ListObjects.Add(Excel.XlListObjectSourceType.xlSrcRange, xlrange, SType.Missing, _header, SType.Missing).Name = \"DataShapesTable\"\r\n\t\t    \tworksheet.ListObjects[\"DataShapesTable\"].TableStyle =  \"TableStyleMedium16\"\r\n\t    \t\tworkbk.SaveAs(fbd.SelectedPath + \"\\\\\" + fptext)\r\n\t    \t\tif not sender.Tag[1]:\r\n\t    \t\t\tworkbk.Close()\r\n\t    \t\t\tex.Quit()\r\n\r\n\t    def startCell(self, sender, event ):\r\n\t\t\tsender.startcell[\"X\"] = event.ColumnIndex\r\n\t\t\tsender.startcell[\"Y\"] = event.RowIndex\t\r\n\r\n\t    def endCell(self, sender, event ):\r\n\t    \ttry:\r\n\t\t\t\tsender.endcell[\"X\"] = event.ColumnIndex\r\n\t\t\t\tsender.endcell[\"Y\"] = event.RowIndex \r\n\t\t\t\tstartval = sender.Rows[sender.startcell[\"Y\"]].Cells[sender.startcell[\"X\"]].Value\r\n\t\t\t\tendNum = regexEndNum(startval)\r\n\t\t\t\tif endNum != \"\":\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\telse:\t\t\t\t\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\t    \t\t    \t\r\n\t    def startRowDrag(self, sender, event ):\r\n\t    \tshmak\r\n\t\t\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t    def pickobjectsordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Pick elements in order, then hit ESC to exit.')\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element, 'Pick elements in order').ElementId)\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = output\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t    \r\n\t    def pickobjectsofcatordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tif isinstance(sender.Tag,list):\t\t\t\r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Select %s in order, then press ESC to exit.' %(', '.join([c.Name for c in category])))\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt, 'Select %s' %(', '.join([c.Name for c in category]))).ElementId)\t\t\t\t\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = (output)\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80,sender.Height + 5))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tactiveview = doc.ActiveView\r\n\t\t\t\t\tbbox = element.get_BoundingBox(activeview)\t\r\n\t\t\t\t\tactiveuiview = [v for v in uiviews if v.ViewId == activeview.Id][0]\r\n\t\t\t\t\tactiveuiview.ZoomAndCenterRectangle(bbox.Min, bbox.Max)\r\n\t\t\t\t\tuidoc.RefreshActiveView()\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\t\tif (viewindex >= len(viewsforelement) -1) or not (element.Id in uidoc.Selection.GetElementIds()):\r\n\t\t\t\t\t\tviewindex = 0\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tviewindex += 1\r\n\t\t\t\t\tuidoc.RequestViewChange(dbView)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\r\n\t    def CheckChildren(self, sender, event ):\r\n\t\t\tevNode = event.Node\t    \r\n\t\t\tcheckState = evNode.Checked\t\r\n\t\t\tfor n in event.Node.Nodes:\t   \t\r\n\t\t\t\tn.Checked = checkState\t\t\t\r\n\t\t\t\t\r\n\t    def ActivateOption(self, sender, event ):\r\n\t    \tparent = sender.Parent\r\n\t    \tassociatedControls = [p for p in parent.Controls if p.Name == sender.Text and p.GetType() == Panel][0]\r\n\t    \trestofcontrols = [p for p in parent.Controls if p.Name != sender.Text and p.GetType() == Panel]\r\n\t    \tif sender.Checked:\r\n\t    \t\tassociatedControls.Enabled = True\r\n\t    \t\tfor c in restofcontrols:\r\n\t    \t\t\tc.Enabled = False\r\n\t    \t\t\t\r\n\t    def showtooltip(self, sender, event ):\r\n\t    \tttp = ToolTip()\r\n\t    \tttp.AutoPopDelay = 10000\r\n\t    \tttp.SetToolTip(sender , sender.Tag)\t\r\n\r\n\t    def numsOnly(self, sender, event ):\r\n\t    \tif Char.IsDigit(event.KeyChar)==False and event.KeyChar != \".\" and Char.IsControl(event.KeyChar)==False:\r\n\t    \t\tevent.Handled = True\t\t\t\t\r\n\t\t\t\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\r\n\tclass myDataGridView(DataGridView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.startcell = {}\r\n\t\t\tself.endcell = {}\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\t\t\r\n\tclass myTextBox(TextBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself._isNum = False\t\r\n\t\t\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\tform.topmost()\t\r\n\tform.ControlBox = False\r\n\txlabel = 25\r\n\txinput = 150\r\n\tformy = 10\r\n\tif IN[8] > 350:\tformwidth = IN[8]\r\n\telse: formwidth = 350\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - 2 * xlabel,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + 15\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\tdef getImageByName(ImName):\r\n\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\tlogopaths = []\r\n\t\tfor child in root:\r\n\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\tfor path in child:\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\BIM One Inc.\\extra\\\\\" + ImName)\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\BIM One Inc.\\extra\\\\\" + ImName)\r\n\t\tdeflogopath = \"\"\r\n\t\tfor path in logopaths:\r\n\t\t\tif deflogopath == \"\":\r\n\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\treturn ima,bmp\r\n\t\t\t\t\texcept: \r\n\t\t\t\t\t\tpass\r\n\t\t\t\t\t\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\t_ims = getImageByName(\"Logo.png\")\r\n\t\t\tima = _ims[0]\r\n\t\t\tbmp = _ims[1]\r\n\t\t\t\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20\r\n\t\t\tylogo = formy+10\r\n\t\telse:\r\n\t\t\txlogo = 30\r\n\t\t\tylogo = formy\r\n\t\tsize = 110\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tpass\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tlabel.Text = j.inputname\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\t#CHARTS is a work in progress\r\n\t\t\t'''\r\n\t\t\tif j.__class__.__name__ == 'uichart':\r\n\t\t\t\tch = Chart()\r\n\t\t\t\tch.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tch.Location = Point(xlabel,y)\r\n\t\t\t\tch.Height = 600\r\n\t\t\t\tch.Series.Add(\"test\")\r\n\t\t\t\tch.Series[\"test\"].XValueMember = \"Date\"\r\n\t\t\t\tch.Series[\"test\"].YValueMembers = \"Percent\"\r\n\t\t\t\tch.Series[0].ChartType = SeriesChartType.ChartType.Bar\r\n\t\t\t\tdt = DataTable()\r\n\t\t\t\tdl = j.datalist\r\n\t\t\t\tfor rindex in range(rngstart,len(dl)):\r\n\t\t\t\t\trow = dt.NewRow()\r\n\t\t\t\t\tfor i in range(len(dl[rindex])):\r\n\t\t\t\t\t\trow[i] = dl[rindex][i]\r\n\t\t\t\t\tdt.Rows.Add(row)\r\n\t\t\t\tch.DataSource = table\r\n\t\t\t\tch.DataBind()\r\n\t\t\t\tformbody.Controls.Add(ch)\r\n\t\t\t\ty = ch.Bottom + 25\r\n\t\t\t'''\r\n\t\t\tif j.__class__.__name__ == 'uitreeview':\r\n\t\t\t\ttv = TreeView()\r\n\t\t\t\ttv.CheckBoxes = True\r\n\t\t\t\ttitles = j._hastitles\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\ttv.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttv.Location = Point(xlabel,y)\r\n\t\t\t\ttv.Height = j._height\r\n\t\t\t\tdef treeIterationTitle(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(remove_accents(input[0].ToString()))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\t\tinput.pop(0)\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIterationTitle(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\t\r\n\t\t\t\tdef treeIteration(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\tcurrentNode.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIteration(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\r\n\t\t\t\tcurrentNode = TreeNode(\"List1\")\r\n\t\t\t\tcurrentNode.Expand()\t\t\t\t\r\n\t\t\t\tif titles:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIterationTitle(currentNode,dl)\t\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIteration(currentNode,dl)\r\n\t\t\t\ttv.AfterCheck += form.CheckChildren\t\t\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(tv)\r\n\t\t\t\tform.output.append(tv)\r\n\t\t\t\ty = tv.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height + 25\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or x == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height)+5)\r\n\t\t\t\t\trball.Width = 70\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(80,(j.height)+5)\r\n\t\t\t\t\trbnone.Width = 90\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = myTextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tif j._isnum:\r\n\t\t\t\t\ttb._isNum = True\r\n\t\t\t\t\ttb.KeyPress += form.numsOnly\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'tableview':\r\n\t\t\t\t#Creating grouping panel\r\n\t\t\t\ttvp = Panel()\r\n\t\t\t\ttvp.Location = Point(xlabel,y)\r\n\t\t\t\ttvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tif 50 + len(j.dataList) * 15 > 800:\r\n\t\t\t\t\tautoheight = 800\r\n\t\t\t\telse:\r\n\t\t\t\t\tautoheight = 50 + len(j.dataList) * 15\t\t\t\t\r\n\t\t\t\ttvp.Height = autoheight + 73\r\n\t\t\t\t#Creating title\r\n\t\t\t\ttitlep = Label()\r\n\t\t\t\ttitlep.Text = j._tabletitle\r\n\t\t\t\ttitlep.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\ttitlep.BackColor = Color.FromArgb(153,180,209)\r\n\t\t\t\ttitlep.Font = Font(\"Arial\", 11, FontStyle.Bold)\r\n\t\t\t\ttitlep.TextAlign = ContentAlignment.MiddleLeft\r\n\t\t\t\ttitlep.BorderStyle = BorderStyle.FixedSingle\r\n\t\t\t\ttitlep.Location = Point(0,0)\r\n\t\t\t\ttvp.Controls.Add(titlep)\r\n\t\t\t\t#Creating data structure\r\n\t\t\t\tdg = myDataGridView()\r\n\t\t\t\t#dg.SelectionMode = DataGridViewSelectionMode.CellSelect\r\n\t\t\t\tdg.EnableHeadersVisualStyles = False\t\t\t\t\r\n\t\t\t\tdt = DataTable()\r\n\t\t\t\tdl = j.dataList\r\n\t\t\t\tfor i in range(len(dl[0])):\r\n\t\t\t\t\tif j._hasTitle:\r\n\t\t\t\t\t\tdt.Columns.Add(remove_accents(dl[0][i].ToString()))\r\n\t\t\t\t\t\trngstart = 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tdt.Columns.Add(\"Column \" + str(i))\r\n\t\t\t\t\t\trngstart = 0\t\t\t\t\t\t\r\n\t\t\t\tfor rindex in range(rngstart,len(dl)):\r\n\t\t\t\t\trow = dt.NewRow()\r\n\t\t\t\t\tfor i in range(len(dl[rindex])):\r\n\t\t\t\t\t\trow[i] = dl[rindex][i]\r\n\t\t\t\t\tdt.Rows.Add(row)\t\t\t\t\t\t\r\n\t\t\t\tdg.Tag = j._hasTitle\t\t\t\t\r\n\t\t\t\tdg.DataSource = dt\r\n\t\t\t\tdg.ClipboardCopyMode = DataGridViewClipboardCopyMode.EnableWithAutoHeaderText\r\n\t\t\t\tdg.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells\r\n\t\t\t\tdg.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tdg.Location = Point(0,23)\r\n\t\t\t\tdg.Height = autoheight\r\n\t\t\t\t#Creatin Excel like drag copy functionalities\r\n\t\t\t\tdg.CellMouseDown += form.startCell\r\n\t\t\t\tdg.CellMouseUp += form.endCell\r\n\t\t\t\t#dg.MouseDown += form.startRowDrag\r\n\t\t\t\t#dg.MouseUp = \t\t\t\r\n\t\t\t\ttvp.Controls.Add(dg)\t\t\t\r\n\t\t\t\ty = tvp.Bottom + 15\r\n\t\t\t\t#Adding export to excel button\r\n\t\t\t\tex = Button()\r\n\t\t\t\tex.Tag = [j._hasTitle , j._openExcel , j._showinfo , j._fileInfo]\r\n\t\t\t\ttry:\r\n\t\t\t\t\texpImage = getImageByName(\"exp.png\")[0]\r\n\t\t\t\t\tex.BackgroundImage = expImage\r\n\t\t\t\texcept:\r\n\t\t\t\t\tex.Text = \"Export\"\t\t\t\t\t\r\n\t\t\t\tex.Width = 60\t\r\n\t\t\t\tex.Height = 30\r\n\t\t\t\tex.Location = Point(formwidth - 125 ,dg.Bottom + 15)\t\t\t\t\t\r\n\t\t\t\ttvp.Controls.Add(ex)\r\n\t\t\t\tex.Click += form.exportToExcel\r\n\t\t\t\t#Adding filepath export textbox\r\n\t\t\t\tfilepathtb = TextBox()\r\n\t\t\t\tfilepathtb.Text = \"ExportFileName\"\r\n\t\t\t\tfilepathtb.Location = Point(0 ,dg.Bottom + 20)\r\n\t\t\t\tfilepathtb.Width = formwidth - xlabel - 125\r\n\t\t\t\ttvp.Controls.Add(filepathtb)\r\n\t\t\t\t#Adding copy to clipboard button\r\n\t\t\t\tcb = Button()\r\n\t\t\t\t#Adding panel to form\r\n\t\t\t\tformbody.Controls.Add(tvp)\r\n\t\t\t\tform.output.append(dg)\r\n\t\t\t\ty = tvp.Bottom + 25\r\n\t\t\t\tform.topmost()\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 45 ,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25, tn.Bottom-tn.Top+25)  \r\n\t\t\t\ty = gb.Bottom + 25\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35\r\n\t\t\t\t\t\trb.Location = Point(20,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot +20\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif not j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\t\tfp.MouseHover += form.showtooltip\t\r\n\t\t\t\tfp.Text = j.buttontext\t\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\t\t\t\t\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\tif not j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\t\tdp.MouseHover += form.showtooltip\r\n\t\t\t\tdp.Text = j.buttontext\t\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 30\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tse.Click  += form.pickobjectsordered\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tsec.Click += form.pickobjectsofcatordered\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50\r\n\t\t\t\tdisplabel.Location = Point(0,5)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25,y+25)\r\n\t\t\t\ty = im.Bottom + 25\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25,xinput-25,80,90,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25\r\n\t\t\telif j.__class__.__name__ == 'uiconditional':\r\n\t\t\t\tgrouppanelcond = GroupBox()\r\n\t\t\t\tgrouppanelcond.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanelcond.Width = formwidth - 65\t\t\t\t\r\n\t\t\t\t#recursive implementation of the definition to process conditional groups of inputs\r\n\t\t\t\tpanlist = []\r\n\t\t\t\typ = 25\r\n\t\t\t\txrb = 25\r\n\t\t\t\tfor i,d in zip(j._Conditions,j._GroupedInputs):\t\r\n\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\trb.CheckedChanged += form.ActivateOption\r\n\t\t\t\t\trb.Text = i\r\n\t\t\t\t\trb.Location\t= Point(xrb,10)\r\n\t\t\t\t\trb.Width = 95\t\t\t\t\t\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(rb)\t\t\t\t\r\n\t\t\t\t\tcondition_pannel = Panel()\r\n\t\t\t\t\tcondition_pannel.Name = i\r\n\t\t\t\t\tcondition_pannel.Top = yp\r\n\t\t\t\t\tcondition_pannel.Width = formwidth - 65\r\n\t\t\t\t\tcondition_pannel.BackColor = Color.Transparent\r\n\t\t\t\t\tcondition_pannel.BringToFront()\t\t\t\t\t\r\n\t\t\t\t\taddinput(condition_pannel,d,25,xinput-25,80,90,importcolorselection)\r\n\t\t\t\t\tpanlist.append(condition_pannel)\r\n\t\t\t\t\typ = condition_pannel.Bottom - 25\r\n\t\t\t\t\txrb += 100\r\n\t\t\t\tfor pan in panlist:\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(pan)\r\n\t\t\t\tgrouppanelcond.Height = sum([p.Height for p in panlist]) - (len(panlist)-2)*25\r\n\t\t\t\tgrouppanelcond.BackColor = Color.Transparent\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(grouppanelcond)\r\n\t\t\t\ty = grouppanelcond.Bottom + 25\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,xinput,40,120,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400:\r\n\t\t\tformy += 50\r\n\t\t\txinput = 270\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20\r\n\telse:\r\n\t\tformy += 50\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65,formy+30)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] and IN[7] > 0:\r\n\t\tformbody_calculatedheight = IN[7] - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100: formbody_calculatedheight = 100\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\tuiviews = uidoc.GetOpenUIViews()\r\n\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\tactiveviewid = doc.ActiveView.Id\r\n\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\telse:\r\n\t\tactiveUIView = uiviews[0]\r\n\trect = activeUIView.GetWindowRectangle()\r\n\tform.StartPosition = FormStartPosition.Manual\r\n\tform.Location = Point(rect.Left-7,rect.Top)\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result,True, form.cancelled\r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017'] , False, False\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!'] , False, False\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "19c72ff6c9f648d1ba50157f442831e6",
      "Inputs": [
        {
          "Id": "0153029bc7ea46788d17463c250a38d4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40cbcab96b394bfa8b320e3554fda204",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9e3a1e16cdf49d7a4c21336ca5deec1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdcc6a622afb4babb3ae4b549c828e9d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1c84e540f764a419998f4b96f3da96c",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5abca7e704d44dff98b34de877bf641f",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "101be0b12bd74b818a251a6f6f88cd0b",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78f571278d1c455abf2e924e864fd212",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fed4abd1f7a41c7acedf46fd59e7cfe",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d85435b20ea34493bbd30b263b2287a9",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "83de392c0b984e1ab854571b6095f361",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc3bdb42794c45afb811f867c3e39636",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "67475a7eae2f446fadd0bea798ac4e53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d40155a9349347a8a62b4a532e26b5a3",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "550;",
      "Id": "de9d25119e154fe5832f47e469e5e391",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b1928fd368c842119f330d7720aadae1",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass listview():\r\n\r\n    def __init__(self,inputname,height,highlight,display_mode,element_count,default_values,sorted,showId):\r\n        self.inputname = inputname\r\n        self.height = height\r\n        self.highlight = highlight\r\n        self.display_mode = display_mode\r\n        self.element_count = element_count\r\n        self.default_values = default_values\r\n        self.sorted = sorted\r\n        self.showId = showId\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.ListView input'\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\n\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\r\nif IN[6]:\r\n\telement_count = len(in1)\r\nelse:\r\n\telement_count = 0\r\n\r\nx = listview(IN[0],IN[3],IN[4],IN[5],element_count,IN[7],IN[8],IN[9])\r\n\r\nfor k,v in zip(in1,in2):\r\n\tif x.showId :\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)+ '  -  id: ' + str(v.Id)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8') + '  -  id: ' + str(v.Id)] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\telse:\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "3520b5e7df79440cba95a39470626fa6",
      "Inputs": [
        {
          "Id": "a27400ac7c734ce1a74491fef699ec05",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4187ce46ba424e36be350fa32435ff8e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abd1cae8d45144c9ad20ef84a4c42122",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b220d29e8edc4480a5a0d44cf997f1be",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a2af64f25b84ed299fbae2f9f23e01a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acd9c4399bb249cfb22464b9f782c7db",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69899fc4f43148b6b89437cdf4187def",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b255925ec69542169756c42f15dd719c",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3379a03ba2ec46a4877023b93e9c472f",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9970b7447ede4724ba2465936484b728",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93270a627a4d49c799bc6b6ef7bfe466",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "200;",
      "Id": "4fc1ae80718b4f92b6b9b02d14052030",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f95c8f14428c492c8506801b5e5e4156",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "d45b9946552b4e9cac566f7a6032b6fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3ae8785584ae4620b12da76cddd2bf30",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "7f5bae4723794487a7762bcc591f8741",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a20915dfa53946f28dfb835853b2d2b0",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "8ee999d6afed4899bc1868584ac862d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3e412ab9c5b4052b2f996818979c02e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.Empty;",
      "Id": "247454c5d8064523b1ffc4aa2499f65f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f93c9356fddc433b86449f684b469de4",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "0cedb0ea9e2d45338ae5e7e0557d8283",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4539820cc7da4ba9a8938e6dc1fac6f6",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "28cedba299c648649102eee7bd641bbb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "39bdb34fba61488b894893a4ea1d8608",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass listview():\r\n\r\n    def __init__(self,inputname,height,highlight,display_mode,element_count,default_values,sorted,showId):\r\n        self.inputname = inputname\r\n        self.height = height\r\n        self.highlight = highlight\r\n        self.display_mode = display_mode\r\n        self.element_count = element_count\r\n        self.default_values = default_values\r\n        self.sorted = sorted\r\n        self.showId = showId\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.ListView input'\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\n\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\r\nif IN[6]:\r\n\telement_count = len(in1)\r\nelse:\r\n\telement_count = 0\r\n\r\nx = listview(IN[0],IN[3],IN[4],IN[5],element_count,IN[7],IN[8],IN[9])\r\n\r\nfor k,v in zip(in1,in2):\r\n\tif x.showId :\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)+ '  -  id: ' + str(v.Id)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8') + '  -  id: ' + str(v.Id)] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\telse:\r\n\t\ttry:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\t\texcept:\r\n\t\t\ttry:\r\n\t\t\t\tx[str(k)] = v\r\n\t\t\texcept:\r\n\t\t\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "dc340fb0835f446d81a73af91dedbf73",
      "Inputs": [
        {
          "Id": "26b462f4c41a4c01bc5ca88a88addc8e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "774d9a33e9c246a39ae5e424f216922a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c56071cccfd8432c9d58c073fa4c0594",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4872bb00752d4ec0b30d5f2bf58d1852",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1ca6758d238446f82c1869bbd81fad7",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7113e216a11242f1a5d1fdc763f6b842",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3420551387845a7b8300fabbdb17106",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "966033d48b134feb8bbfb0162ad6f549",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9561b89e44f14bb6a10cc8ed94025870",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c06af089351b473d882f5d3f5c2d3baf",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c78881dbfe0b41d8b87ab2b14f740305",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "200;",
      "Id": "b1f062b3be6c4d52a7419e6f320539ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "571ddf135df54885860900196a3c0e04",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "e6be6f0dca3d45bfa95f511cf65246a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "335bc318a32f417b95386475de3f42cb",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "d143d0050c624fd2a0158a65d03c4f3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e553a4ee54c543c6afcd9949441bd2be",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b77f14f38a3a4dcebae17c64e459d451",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0d2d79fe22a43f9874769a966415f67",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.Empty;",
      "Id": "cf3b7fa4429244deac2952e9e6be6325",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e69c554433de43288a455edadf7b406c",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5a8850eedff94ea5a11b46a1fd1dd848",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "71fb161a1a9d4f538d043c75a4d48829",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "337bab665fa14d94ae033aaf90d71322",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e58b3c36fb7f47f1be5335ac57f65691",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "1be45e0a3627428f928c916b4a517501",
      "Inputs": [
        {
          "Id": "b76394dcdd5949c4b838adc724e40264",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43ea0dd2775148718a92091ec12c431d",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4605ef632f634e6e9c87775e9418d3c5",
      "Inputs": [
        {
          "Id": "87472ad9ce4c400581e50bd0f10ff51c",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12e66101bbbc42d1bd6060f9996e87fb",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5b3ab4c415f441ab63716c76fcd5fe0",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07b9a40a4bd349b1a1cdf49ead0343e5",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bb928a6090440acb19232bc8ebbdcb2",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1137ba03fde64540bdfc1116d1658c79",
          "Name": "item5",
          "Description": "Index de l'élément #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9028930ae0934fe69f78862dd54f28e8",
          "Name": "item6",
          "Description": "Index de l'élément #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e6e8bcb040245abbd12ed4c661280f4",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Selectionnez les paramètres à inclure ou exclure\";",
      "Id": "4f094b437d184a438d0bba4a0ab62e75",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b1e941039e204594b3763c2302c5a286",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Inclure ou exclure des paramètres des gabarits de vue - Ne fonctionne pas pour les gabarits 3D\";",
      "Id": "82580316408a4c54b60d6fef8ac19d40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "01ec929a5d5a47d9bdc5baddf6716912",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Choisir le statut\";",
      "Id": "fc4411e054eb4b69aa149dc1e34973eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "451198240c344d1bae10e0eeb210ddc0",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sélectionnez les gabarits de vue à traiter\";",
      "Id": "e32f09cce363414ba8f87e34ab4545fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69d252b4d26440499f29ffce7373a1c0",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Annuler\";",
      "Id": "b423212810ab4e948e65f0d61c18cb66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cd675767f5174b059151d19bf9584527",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "24aaa3053de048e098de0b0bfeae6ce7",
      "Inputs": [
        {
          "Id": "8cb90c200ffb4c6c86d9b519f8657612",
          "Name": "test",
          "Description": "Tester le bloc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "177b9e016e75463e9e03a01ab843a842",
          "Name": "true",
          "Description": "Bloc True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6114f0e24afe4320a798fa44bf3bc31f",
          "Name": "false",
          "Description": "Bloc faux",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8afa86b71f04b5b8fe7de0c0eb698b5",
          "Name": "result",
          "Description": "résultat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Instruction conditionnelle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];\nx[3];\nx[4];\nx[5];\nx[6];",
      "Id": "289fec778f574a878decbc069e9a550a",
      "Inputs": [
        {
          "Id": "7b4d1bc2f8764fedad891dca6212f631",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "044cb527c4564eeaae7f5f90045db1d8",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db72a32293fd4db6992ce954ff60ef22",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "929aa1adacb8488c85c44d01f3778c62",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac23ed76c3d44b85831ad211b68a2ff9",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46bb5395baa04689aa75ddb9dfbb27ea",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eba9a4317144c0aa6a077e26cdd4dbb",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc2232fb89d242bdb074ac631244fc9e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Jean-Marc Couffin, BIM One Inc. 2018\r\n\r\nimport clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nlang = str(doc.Application.Language)\r\n\r\nif lang ==\"French\":\r\n\tx = True\r\nelse:\r\n\tx = False\r\n\t\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "b6c23225e5ee470fbf63166c6d5d66ae",
      "Inputs": [
        {
          "Id": "0e2e5302390a46b3ab819ed5a34dad30",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a30a56d31a4498da7f1570f18c4851d",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Include or exclude parameters from view template - Does not work with 3D view Templates\";",
      "Id": "fa99983ed3ba4992ac6b8c9cba4cb423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d87b6531d2945c0bcc9e200db429d25",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select view templates to be processed\";",
      "Id": "1385faf45c76417285be64df792f6702",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "baec7ba1026f443d80b3fe4871f96695",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "621c823d6d654759bd4cf9d9d0b95221",
      "Inputs": [
        {
          "Id": "9eb127a24d404782be7630895de43588",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38ba47f901e54268882146a9ea50748b",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adbc53b9f934457fb1f34feb68e47474",
          "Name": "item2",
          "Description": "Index de l'élément #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdb6008a06ff41b5ac95178ad5ab7cd3",
          "Name": "item3",
          "Description": "Index de l'élément #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eccc2076cce64f00b48337d6d0d9caed",
          "Name": "item4",
          "Description": "Index de l'élément #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e74275c856e948bd898c8ee97ba0616c",
          "Name": "item5",
          "Description": "Index de l'élément #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a43fdf3190c49e0a1d99a76b566fd10",
          "Name": "item6",
          "Description": "Index de l'élément #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcb641d8dd1e46d6a0745d3868cf1a91",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select parameters to be included or excluded\";",
      "Id": "f2cb64d352d54e418e2fe8db84a871ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1677972271aa40298249a26eb1261020",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Set status\";",
      "Id": "6925c7b353254d67bf250f499d166c03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ac68e9f88d5f456b9ec94e92b407e6f2",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Cancel\";",
      "Id": "97ad7dbcceb6400794eb8ce68bc5163f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8398b9994be74717bde161eda9711774",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\BIM One\\B1M-Technical\\00_BIM1_STANDARDS\\01_LOGICIELS_OUTILS\\DYNAMO\\01_SCRIPTS\\Logo.png",
      "InputValue": "..\\Logo.png",
      "NodeType": "ExtensionNode",
      "Id": "7f23d699c2d948b5b2d023a0f67d1192",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d49b71e535884d8a9840652e8544ad4b",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Vous permet de sélectionner un fichier sur le système de façon à obtenir son nom de fichier"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Views.ViewTemplates.Include@Revit.Elements.Views.View,int[],bool",
      "Id": "54c14225cc1d4df19fded8bd0bef1418",
      "Inputs": [
        {
          "Id": "e3ffb105e18443ceb5d44f07a0d17068",
          "Name": "viewTemplate",
          "Description": "View to set the parameter for.\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e486ae5241b419b963ddb4aab234197",
          "Name": "parameters",
          "Description": "List of parameters to set.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fbd39f06b8a454e90925f8ad7f75e4d",
          "Name": "include",
          "Description": "True to include given parameters, otherwise false.\n\nbool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4543f81eeb2c4466ae7cd76b60e8078b",
          "Name": "View",
          "Description": "View Template.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sets the View Template parameter's \"include\" property.\n\nViewTemplates.Include (viewTemplate: View, parameters: int[], include: bool = true): View"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "seq[0];\nseq[1];\nseq[2];",
      "Id": "eb63654ab3bf4fd2932c7093c00f8a12",
      "Inputs": [
        {
          "Id": "cfb81f284c364f05ad5b57d289d251b4",
          "Name": "seq",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baf6505a805448c2be7de97faa59f642",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad010c508ba445c4957ea15d89681448",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3378ca3875d54de4aaf0a9ae9c1e6ac4",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ninputdoc = UnwrapElement(IN[1])\r\nif inputdoc == None:\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\nelif inputdoc.GetType().ToString() == \"Autodesk.Revit.DB.RevitLinkInstance\":\r\n\tdoc = inputdoc.GetLinkDocument()\r\nelif inputdoc.GetType().ToString() == \"Autodesk.Revit.DB.Document\":\r\n\tdoc = inputdoc\r\nelse: doc = None\r\n\r\nnames = []\r\ncats = []\r\nvag = []\r\npgs = []\r\npts = []\r\nuts = []\r\nisvis = []\r\nelems = []\r\nguids = []\r\nisinst = []\r\niterator = doc.ParameterBindings.ForwardIterator()\r\nwhile iterator.MoveNext():\r\n\tvag.append(iterator.Key.VariesAcrossGroups)\r\n\tnames.append(iterator.Key.Name)\r\n\tpgs.append(iterator.Key.ParameterGroup)\r\n\tpts.append(iterator.Key.ParameterType)\r\n\tuts.append(iterator.Key.UnitType)\r\n\tisvis.append(iterator.Key.Visible)\r\n\telem = doc.GetElement(iterator.Key.Id)\r\n\telems.append(elem)\r\n\tif elem.GetType().ToString() == 'Autodesk.Revit.DB.SharedParameterElement':\r\n\t\tguids.append(elem.GuidValue)\r\n\telse: guids.append(None)\r\n\tif iterator.Current.GetType().ToString() == 'Autodesk.Revit.DB.InstanceBinding':\r\n\t\tisinst.append(True)\r\n\telse:\r\n\t\tisinst.append(False)\r\n\tthesecats = []\r\n\tfor cat in iterator.Current.Categories:\r\n\t\ttry:\r\n\t\t\tthesecats.append(Revit.Elements.Category.ById(cat.Id.IntegerValue))\r\n\t\texcept:\r\n\t\t\t# Return null if category is not supported by Dynamo\r\n\t\t\t# This way the user knows there are unsupported categories assigned\r\n\t\t\tthesecats.append(None)\r\n\tcats.append(thesecats)\r\nOUT = (names,cats,elems)",
      "VariableInputPorts": true,
      "Id": "bf4eb94adda6422584203b05cb9db90c",
      "Inputs": [
        {
          "Id": "09c0c1a67a4c4411a8ebb293a8be126f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b81dbf3da4e640e9949d0302496ba601",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d49412d1ab0d4f0f87ed833c60a6bfe7",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "0e7f88114b57496ba25a5f2538750dd3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98227ee508c94856a44b52a766ff8a67",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "64a4ffe75eeb4a6699fd59e50f747ba2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e0b83cd465ab42f195a25ad47c2b835e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a1e826d1afc545dbbfbd16432326b725",
      "Inputs": [
        {
          "Id": "7c8de3ad0937409f97ecf9aadb45ad66",
          "Name": "list",
          "Description": "Liste à filtrer.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b39e630478e74bebae0e91914b970bf2",
          "Name": "mask",
          "Description": "Liste de booléens représentant un masque.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ed02d2733264772b83ad73a452571a2",
          "Name": "in",
          "Description": "Eléments dont l'index de masque est True.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9d88c276df840e6aaedea939e46a66a",
          "Name": "out",
          "Description": "Eléments dont l'index de masque est faux.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Filtre une séquence en recherchant les index correspondants dans une liste distincte de booléens.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6bf65ee8deff491c97bb793c96f3f036",
      "Inputs": [
        {
          "Id": "38e5c10105194678b80a76ca93d80a9d",
          "Name": "str",
          "Description": "Chaîne dans laquelle effectuer la recherche.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2453301ef684f4da58dda46fc57e4ce",
          "Name": "searchFor",
          "Description": "Sous-chaîne à rechercher.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a170166c62e54f35a7621891b6a93858",
          "Name": "ignoreCase",
          "Description": "Si la comparaison prend en compte la casse.\n\nbool\nValeur par défaut : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78108871d5354a03b33784d77c9a7545",
          "Name": "bool",
          "Description": "Si la chaîne contient la sous-chaîne.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Détermine si la chaîne indiquée contient la sous-chaîne indiquée.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "629bcc757a074e7589d9c4c44f19e9a8",
      "Inputs": [
        {
          "Id": "ae4975af66b14f728f4304f4c4470269",
          "Name": "obj",
          "Description": "Objet à sérialiser",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b519537bc8145d19130dad3ceccc768",
          "Name": "str",
          "Description": "Résultat du calcul mathématique",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convertir un objet en une représentation sous forme de chaîne."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import*\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nTemplates = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if v.IsTemplate]\nOUT = Templates",
      "VariableInputPorts": true,
      "Id": "ffd0df6757854247b3f73cd4dffc8c8b",
      "Inputs": [
        {
          "Id": "e73f3d690b0d47d68c327a3915baba25",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "307ef0954a6d424b9d455571cbfc1e97",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ee7eacc20fbc4eea8eac5755f61bc042",
      "Inputs": [
        {
          "Id": "846206ce4f2f4bc6a504e07bb53710ba",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bdad1231e3d4a6eb1d93fcc4cccfbb8",
          "Name": "preserveIndices",
          "Description": "Fournit une option permettant de conserver les index de données pour que les valeurs nulles qui ne sont pas des valeurs de fin ne puissent pas être éliminées par filtrage\n\nbool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6d7f6d66d02459ca952a4fb2f013693",
          "Name": "var[]..[]",
          "Description": "Une liste nettoyée des listes vides et valeurs nulles",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Nettoie les données des listes vides et valeurs nulles d'une liste donnée de cotes arbitraires\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "3131b5754dee426dab58d839c1f2ca05",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1670ea79c43d471fa64dae50b19aaaf6",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad K Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\ndef ClearList(_list):\n    out = []\n    for _list1 in _list:\n        if _list1 is None:\n            continue\n        if isinstance(_list1, list):\n             _list1 = ClearList(_list1)\n             if not _list1:\n                 continue\n        out.append(_list1)\n    return out\n\n#Assign your output to the OUT variable\nOUT = ClearList(IN[0])",
      "VariableInputPorts": true,
      "Id": "eb1603364e484eca96f3cf4895f46d8e",
      "Inputs": [
        {
          "Id": "6c96c3b85fa9448aab7ea9dd12854b6d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8491f7b1589748a38a9ddda5d5f4a975",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "18cb1d03c01845de823ef338e9dc199f",
      "Inputs": [
        {
          "Id": "5b78a3ef281d4b8387841b86a93a0dc1",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b0b015e9eae4119a3232845bb8c425e",
          "Name": "preserveIndices",
          "Description": "Fournit une option permettant de conserver les index de données pour que les valeurs nulles qui ne sont pas des valeurs de fin ne puissent pas être éliminées par filtrage\n\nbool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d33b19b070544d928a9a7fe05a575625",
          "Name": "var[]..[]",
          "Description": "Une liste nettoyée des listes vides et valeurs nulles",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Nettoie les données des listes vides et valeurs nulles d'une liste donnée de cotes arbitraires\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "0b69e9b0d793404c9c119f129e2cb03a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abc7de9a1a7242258ff10bf91455529b",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "6166a0cb4a5b4c9f814a1aa10ec9040b",
      "Inputs": [
        {
          "Id": "bc48f9e8b90c48fe8963d8fd2c7150e4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcf49cb2117545c687994ffb9f0818df",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtenir le nom de l'élément\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x==null?true:false;",
      "Id": "8d5f98453d6847e5be9f7048275869e4",
      "Inputs": [
        {
          "Id": "c46b25206322498b881ab42bc94cd774",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93b4080c920042e29a8ce99003fa5b02",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "f8bc33bc35bb4a309803827b2018401c",
      "Inputs": [
        {
          "Id": "ac68216fccf84c6481174889952dc8e3",
          "Name": "list",
          "Description": "Liste à filtrer.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c4d9225dd624773bca3992275e947d9",
          "Name": "mask",
          "Description": "Liste de booléens représentant un masque.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ae885b27028484588924d2b52082453",
          "Name": "in",
          "Description": "Eléments dont l'index de masque est True.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdd5163dc5ef4bfe9c433f8a3404b7c0",
          "Name": "out",
          "Description": "Eléments dont l'index de masque est faux.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filtre une séquence en recherchant les index correspondants dans une liste distincte de booléens.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "b29c7a9aefb64c91b09be50ab09589c5",
      "Inputs": [
        {
          "Id": "5e866a8f16004e49afaa1a575c6bcb08",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcdf178f57ab4a19bd828d8e2e3e994c",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtenir l'ID de cet élément\n\nElement.Id: int"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "cac5321e26184126956903cc36a9bca2",
      "Inputs": [
        {
          "Id": "fe199a29baab4126855e0db3d8e0c45c",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2062e13e20df4cd59eeab3ed7f16b2f7",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5363bb1b996b4d3e811a8731d9f7f3f3",
          "Name": "list",
          "Description": "Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b160a75c7ce340db8b4eed47fa135b07",
      "Inputs": [
        {
          "Id": "56aae8138e924a188821cc5a94a24621",
          "Name": "list",
          "Description": "Liste à aplanir.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e0622d7dcd246b4b833976b9e043505",
          "Name": "amt",
          "Description": "Couches d'imbrication à supprimer.\n\nint\nValeur par défaut : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5143a8effdb8429599aeb1b97b3852ee",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplanit une liste imbriquée de listes en fonction d'une quantité spécifique.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2017\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\n\r\nclass uiradio():\r\n\r\n    def __init__(self,inputname,defaultvalue):\r\n        self.inputname = inputname\r\n        self.defaultvalue = defaultvalue\r\n\r\n    def __setitem__(self, key, item):\r\n        self.__dict__[key] = item\r\n\r\n    def __getitem__(self, key):\r\n        return self.__dict__[key]\r\n\r\n    def __iter__(self):\r\n        return iter(self.__dict__)\r\n\r\n    def values(self):\r\n        return self.__dict__.values()\r\n\r\n    def keys(self):\r\n        return self.__dict__.keys()\r\n\r\n    def __repr__(self):\r\n        return 'UI.Radio input'\r\n        \r\nx = uiradio(IN[0],IN[3])\r\n\r\nif isinstance(IN[1],list):\r\n\tin1 = IN[1]\r\nelse:\r\n\tin1 = [IN[1]]\r\nif isinstance(IN[2],list):\r\n\tin2 = IN[2]\r\nelse:\r\n\tin2 = [IN[2]]\r\n\t\r\n\r\nfor k,v in zip(in1,in2):\r\n\ttry:\r\n\t\tx[str(k)] = v\r\n\texcept:\r\n\t\tx[k.encode('utf-8').decode('utf-8')] = v\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "10fca8d759664e28a9df20186c4344d0",
      "Inputs": [
        {
          "Id": "8b3c71e5d22046d3be86de495fa49cbe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caefaf8d8f544ce5b19ac6065debdd14",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20f75b8b17bb4298b2ba0539ba0db4ea",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30da145fae2c455391a85d52808207c8",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e5308391fde40c796ee8a5fafbf7142",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[true,false];",
      "Id": "b6dc38e9397e4a69a51784796ce45839",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bbb3a8dfcb6c4b9e9b5033890ab4a4df",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "e4034481646842579a9e66f5b0d5dd8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "594fc735a4a744cdb34e974d0b0de582",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8ae93080f59f4807a90a75505569411c",
      "Inputs": [
        {
          "Id": "0fd33ef8c73a4dff914dd6cc9458a4e1",
          "Name": "test",
          "Description": "Tester le bloc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62d31c5f37ff49da9eccc65f17c4844d",
          "Name": "true",
          "Description": "Bloc True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d8bc1e8aed14369b7840286b1367ce7",
          "Name": "false",
          "Description": "Bloc faux",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00fd8ab41e104be0bf9bc7a9c3fc8309",
          "Name": "result",
          "Description": "résultat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Instruction conditionnelle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Include\",\"Exclude\"];",
      "Id": "3e8c8d16b3694dd483cf568cfd5727c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38562854df574067b1508f29559fb776",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Inclure\",\"Exclure\"];",
      "Id": "62821b60cf654a52b12cc8db3b398424",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f4430e14f6345ec94e2c516b69d5310",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "0aebdc5092ae447aa2dbeddbd3a0f0f5",
      "Inputs": [
        {
          "Id": "9b8d1317f4a1406fa9753b68f33e9eb0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5587c403123484c840a8e57eccadafb",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtenir le nom de l'élément\n\nElement.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# BIM One Inc. - Jean-Marc Couffin - 2019\r\n\r\nimport clr\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\n\r\n\r\nTitle = IN[0]\r\nProcessedViews = IN[1]\r\nProcessed = str('\\n'.join(IN[2]))\r\n\r\nTaskDialog.Show( Title, ProcessedViews + \": \" +\"\\n\" + \"\\n\" + Processed)\r\n",
      "VariableInputPorts": true,
      "Id": "173d3940820a4fce8ceb766cfadafb5e",
      "Inputs": [
        {
          "Id": "de4bb121b23d47e488291a11e3192bae",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d11c9843b6d0445f94a535fe0b6e3f9c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4eb490493b274884af97c87d89db9de2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a79f1f8b5c8431880460b2c006f758c",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Liste des gabarits traités\";",
      "Id": "e38dd75440b84223a8a9b52048ea9d8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcee8fa36f0842848585d1a67723cfc2",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"List processed view templates\";",
      "Id": "9ff8d41117f44baaa471f2efb79750f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4022046924ba40138b21a4e5eec37480",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Vues\";",
      "Id": "92880132f16b4801bf92c80deaee44a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e188068fb464738b5de232173e7221a",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Views\";",
      "Id": "b4a9a611ebf0498f8e61b3503081011d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38d3818e3de24a00bf08f4c8a501504e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "11087797d12f47df96ba38095523cff2",
      "Inputs": [
        {
          "Id": "fb8428412a834a94a1b625971dc1ab73",
          "Name": "list",
          "Description": "La liste recherche les valeurs booléennes True.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69a3f79324854978aa5e5a5d60ee7950",
          "Name": "int",
          "Description": "Nombre de valeurs booléennes True dans la liste.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Renvoie le nombre de valeurs booléennes True dans la liste indiquée.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x==1?true:false;",
      "Id": "be8a9444e84f495da83260fad96ace7e",
      "Inputs": [
        {
          "Id": "2556b260be4e4561a5a79245105d53e8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a853ef51195848de98274f1241ff80ad",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    }
  ],
  "Connectors": [
    {
      "Start": "2be512c2b00f499695c62e4467c31c71",
      "End": "0153029bc7ea46788d17463c250a38d4",
      "Id": "dcae014da3fa4534bfb6784734f129ff"
    },
    {
      "Start": "d79ad7ce83784919b3c142aea0d4df6f",
      "End": "f9e3a1e16cdf49d7a4c21336ca5deec1",
      "Id": "64c68b25f507410dbc2537b2d2e1f701"
    },
    {
      "Start": "3dbd806dd09a413b9dd1cd3c44c9434d",
      "End": "e3ffb105e18443ceb5d44f07a0d17068",
      "Id": "89299d4961594842b2ab112928742975"
    },
    {
      "Start": "53fc72328bc94dc89eb1f75c13a85832",
      "End": "8e486ae5241b419b963ddb4aab234197",
      "Id": "c46b0f7169d9479d9308baa77884d434"
    },
    {
      "Start": "5647cef25c7647a1af22dab166b761a6",
      "End": "3fbd39f06b8a454e90925f8ad7f75e4d",
      "Id": "5a901e531dc44d29a51f3dfe34aa1c47"
    },
    {
      "Start": "eb5adcbcfea24797b5ce19108229f451",
      "End": "4187ce46ba424e36be350fa32435ff8e",
      "Id": "ffada4f0af584920aeecb214cd6073ac"
    },
    {
      "Start": "b2cac88f70ef4bdc9e7aa44f30735a23",
      "End": "caeef3684a6c44638e316528e08b529d",
      "Id": "54fc4cfeb1814f45b597b297fbc7a462"
    },
    {
      "Start": "27dd5e82e4374871855bed8e2a724e62",
      "End": "16106bf189fd402fac9530b59b012da7",
      "Id": "e79c7d5b7a514fc9b5ad80c3144f42df"
    },
    {
      "Start": "27dd5e82e4374871855bed8e2a724e62",
      "End": "ac68216fccf84c6481174889952dc8e3",
      "Id": "7f7d2db91f3445d68002ae3a2754c4ab"
    },
    {
      "Start": "000cee802def41ee98a39ce39a83c59d",
      "End": "20de30d2c9b245ea979010671e4dd996",
      "Id": "44cb18240b0b4a9bb66151b02daa1833"
    },
    {
      "Start": "fc6faa24156e46e2ad22d40ca0a4b388",
      "End": "6c96c3b85fa9448aab7ea9dd12854b6d",
      "Id": "7bf53b96d3c24f29bce83af6928338ba"
    },
    {
      "Start": "fc6faa24156e46e2ad22d40ca0a4b388",
      "End": "c46b25206322498b881ab42bc94cd774",
      "Id": "0e76ed5e72fd4f3eac2231c134fc6b4e"
    },
    {
      "Start": "8660d0e9640d4f39969de664071ae96e",
      "End": "2425fa8396064b71aa361323a803a5e2",
      "Id": "35a167d4ecc84af6899bc6f460fb2ac2"
    },
    {
      "Start": "3d29d773f09d446988de2ecb89fd1d9a",
      "End": "774d9a33e9c246a39ae5e424f216922a",
      "Id": "cfe730823d554ae38d19a4439f6e6990"
    },
    {
      "Start": "e2bb3d1238f545f28242a909e5bd015b",
      "End": "40cbcab96b394bfa8b320e3554fda204",
      "Id": "ee0b1cab35b347e6a5cfdad512c2f040"
    },
    {
      "Start": "d85435b20ea34493bbd30b263b2287a9",
      "End": "b76394dcdd5949c4b838adc724e40264",
      "Id": "ac08d04dfac142efb8b907eba654bbcd"
    },
    {
      "Start": "fc3bdb42794c45afb811f867c3e39636",
      "End": "5abca7e704d44dff98b34de877bf641f",
      "Id": "a6b1834dfc214ab4b62996d0f3690fa0"
    },
    {
      "Start": "d40155a9349347a8a62b4a532e26b5a3",
      "End": "78f571278d1c455abf2e924e864fd212",
      "Id": "1e0ee03d6e274fd1b4885d87cbe86695"
    },
    {
      "Start": "b1928fd368c842119f330d7720aadae1",
      "End": "0fed4abd1f7a41c7acedf46fd59e7cfe",
      "Id": "2e46b3e5e5b44ba5923e34f0dceaee95"
    },
    {
      "Start": "93270a627a4d49c799bc6b6ef7bfe466",
      "End": "44745f09530946aa8fa874bf369563f3",
      "Id": "81b8ed0e38114908b12979aa2d71fd15"
    },
    {
      "Start": "f95c8f14428c492c8506801b5e5e4156",
      "End": "b220d29e8edc4480a5a0d44cf997f1be",
      "Id": "a15bd13b14774adc843cca8c3b4319f2"
    },
    {
      "Start": "3ae8785584ae4620b12da76cddd2bf30",
      "End": "3a2af64f25b84ed299fbae2f9f23e01a",
      "Id": "4a2f7a7a6ef0486d810125e30b041d91"
    },
    {
      "Start": "a20915dfa53946f28dfb835853b2d2b0",
      "End": "acd9c4399bb249cfb22464b9f782c7db",
      "Id": "bcf521aee5f440dea686301ccaafe44b"
    },
    {
      "Start": "f3e412ab9c5b4052b2f996818979c02e",
      "End": "69899fc4f43148b6b89437cdf4187def",
      "Id": "3e880843ae8d42e79a441f5b6ad30512"
    },
    {
      "Start": "f93c9356fddc433b86449f684b469de4",
      "End": "b255925ec69542169756c42f15dd719c",
      "Id": "f5469f75279f4b348edd9b097103ec8e"
    },
    {
      "Start": "4539820cc7da4ba9a8938e6dc1fac6f6",
      "End": "3379a03ba2ec46a4877023b93e9c472f",
      "Id": "3009480d09bb45f58278d42f7599b644"
    },
    {
      "Start": "39bdb34fba61488b894893a4ea1d8608",
      "End": "9970b7447ede4724ba2465936484b728",
      "Id": "f84b0c94199d4d92a177cdcf66fc24f4"
    },
    {
      "Start": "c78881dbfe0b41d8b87ab2b14f740305",
      "End": "970050f1b9b94cde8303d2c5fb5dd9ac",
      "Id": "61cb175101214eb8a52f5733d52cc0b7"
    },
    {
      "Start": "571ddf135df54885860900196a3c0e04",
      "End": "4872bb00752d4ec0b30d5f2bf58d1852",
      "Id": "5e59732026ab4e4284823ae5b6bf2f3d"
    },
    {
      "Start": "335bc318a32f417b95386475de3f42cb",
      "End": "e1ca6758d238446f82c1869bbd81fad7",
      "Id": "3848c1e34a3c49d096805ff986948133"
    },
    {
      "Start": "e553a4ee54c543c6afcd9949441bd2be",
      "End": "7113e216a11242f1a5d1fdc763f6b842",
      "Id": "8bbcc67ba90941dda545e498b80eef17"
    },
    {
      "Start": "d0d2d79fe22a43f9874769a966415f67",
      "End": "b3420551387845a7b8300fabbdb17106",
      "Id": "a540956c96f448ce9e93b2fedf12eb7e"
    },
    {
      "Start": "e69c554433de43288a455edadf7b406c",
      "End": "966033d48b134feb8bbfb0162ad6f549",
      "Id": "69c6bc47e6184a2099b57ea9fa22d5e4"
    },
    {
      "Start": "71fb161a1a9d4f538d043c75a4d48829",
      "End": "9561b89e44f14bb6a10cc8ed94025870",
      "Id": "cd34f9d4f7cf47f7aba5c3e11a3d5d2c"
    },
    {
      "Start": "e58b3c36fb7f47f1be5335ac57f65691",
      "End": "c06af089351b473d882f5d3f5c2d3baf",
      "Id": "d5df71f98f494e188a6e4df5a35b86af"
    },
    {
      "Start": "43ea0dd2775148718a92091ec12c431d",
      "End": "794082a92a504cc190b3c844e582015e",
      "Id": "bac8c25857654c71926e832331e61008"
    },
    {
      "Start": "5e6e8bcb040245abbd12ed4c661280f4",
      "End": "177b9e016e75463e9e03a01ab843a842",
      "Id": "17c1d19da5aa4d938dee814947dd1695"
    },
    {
      "Start": "b1e941039e204594b3763c2302c5a286",
      "End": "d5b3ab4c415f441ab63716c76fcd5fe0",
      "Id": "7fbe250d8d6849eaab09fd9274ea5844"
    },
    {
      "Start": "01ec929a5d5a47d9bdc5baddf6716912",
      "End": "12e66101bbbc42d1bd6060f9996e87fb",
      "Id": "51c676b0838645e6ab8f0b95cd786bff"
    },
    {
      "Start": "451198240c344d1bae10e0eeb210ddc0",
      "End": "07b9a40a4bd349b1a1cdf49ead0343e5",
      "Id": "5155719e7e3e4feba86b3bcab946e6d1"
    },
    {
      "Start": "69d252b4d26440499f29ffce7373a1c0",
      "End": "87472ad9ce4c400581e50bd0f10ff51c",
      "Id": "36044f2648cd4b5296fb5573106eb88c"
    },
    {
      "Start": "cd675767f5174b059151d19bf9584527",
      "End": "3bb928a6090440acb19232bc8ebbdcb2",
      "Id": "1f65f92d3e3c4fd09323b485ff00aa92"
    },
    {
      "Start": "c8afa86b71f04b5b8fe7de0c0eb698b5",
      "End": "7b4d1bc2f8764fedad891dca6212f631",
      "Id": "7c4015a0e03542dd9493eacadfb02e1a"
    },
    {
      "Start": "044cb527c4564eeaae7f5f90045db1d8",
      "End": "a27400ac7c734ce1a74491fef699ec05",
      "Id": "3396cf83eaff41fcaea440de26c723a9"
    },
    {
      "Start": "db72a32293fd4db6992ce954ff60ef22",
      "End": "bdcc6a622afb4babb3ae4b549c828e9d",
      "Id": "6c96466b684c4cd2adb3c4eb612f2dde"
    },
    {
      "Start": "929aa1adacb8488c85c44d01f3778c62",
      "End": "26b462f4c41a4c01bc5ca88a88addc8e",
      "Id": "325b2646f71e44d78781d5402a94a033"
    },
    {
      "Start": "ac23ed76c3d44b85831ad211b68a2ff9",
      "End": "8b3c71e5d22046d3be86de495fa49cbe",
      "Id": "725d97a8f44c43e9b997739f88dc7e4e"
    },
    {
      "Start": "46bb5395baa04689aa75ddb9dfbb27ea",
      "End": "101be0b12bd74b818a251a6f6f88cd0b",
      "Id": "a400d6c92288481f8da3c2a2aa333f1a"
    },
    {
      "Start": "2eba9a4317144c0aa6a077e26cdd4dbb",
      "End": "de4bb121b23d47e488291a11e3192bae",
      "Id": "1a8efefe5691459a9bdeaf4707ce96b4"
    },
    {
      "Start": "2eba9a4317144c0aa6a077e26cdd4dbb",
      "End": "d11c9843b6d0445f94a535fe0b6e3f9c",
      "Id": "ef4b698004a94484a3b1edb81eb66c2d"
    },
    {
      "Start": "dc2232fb89d242bdb074ac631244fc9e",
      "End": "c2453301ef684f4da58dda46fc57e4ce",
      "Id": "1b35d1adfe544277afd48ae39e3a5036"
    },
    {
      "Start": "5a30a56d31a4498da7f1570f18c4851d",
      "End": "8cb90c200ffb4c6c86d9b519f8657612",
      "Id": "c52589358de64ed199b39ab82bac5b8a"
    },
    {
      "Start": "5a30a56d31a4498da7f1570f18c4851d",
      "End": "0fd33ef8c73a4dff914dd6cc9458a4e1",
      "Id": "229f1af5734b48c49bd0dfc0bae0a907"
    },
    {
      "Start": "2d87b6531d2945c0bcc9e200db429d25",
      "End": "38ba47f901e54268882146a9ea50748b",
      "Id": "eba3a4788bf34de1aeb3ca5da082b138"
    },
    {
      "Start": "baec7ba1026f443d80b3fe4871f96695",
      "End": "9eb127a24d404782be7630895de43588",
      "Id": "0ed5546434704a29a6f7a11f666f5b38"
    },
    {
      "Start": "fcb641d8dd1e46d6a0745d3868cf1a91",
      "End": "6114f0e24afe4320a798fa44bf3bc31f",
      "Id": "2e42fdbf19154b89a97dfbb481de93ea"
    },
    {
      "Start": "1677972271aa40298249a26eb1261020",
      "End": "adbc53b9f934457fb1f34feb68e47474",
      "Id": "7de117a22c5245f68990950a3625cf57"
    },
    {
      "Start": "ac68e9f88d5f456b9ec94e92b407e6f2",
      "End": "bdb6008a06ff41b5ac95178ad5ab7cd3",
      "Id": "9e81fba5c8ce42ad92d96073a72979ff"
    },
    {
      "Start": "8398b9994be74717bde161eda9711774",
      "End": "eccc2076cce64f00b48337d6d0d9caed",
      "Id": "f12f0234e1a4421089c94098366bfd36"
    },
    {
      "Start": "d49b71e535884d8a9840652e8544ad4b",
      "End": "f1c84e540f764a419998f4b96f3da96c",
      "Id": "af933d4cdd6d475a833e2cf809cc1dc4"
    },
    {
      "Start": "4543f81eeb2c4466ae7cd76b60e8078b",
      "End": "9b8d1317f4a1406fa9753b68f33e9eb0",
      "Id": "5cc46255b243417e835699718e2b255a"
    },
    {
      "Start": "ad010c508ba445c4957ea15d89681448",
      "End": "ae4975af66b14f728f4304f4c4470269",
      "Id": "918d7d608c2b404a86daa256b7d359d3"
    },
    {
      "Start": "3378ca3875d54de4aaf0a9ae9c1e6ac4",
      "End": "7c8de3ad0937409f97ecf9aadb45ad66",
      "Id": "55dfd0168ff1470b81fafb0f81fee973"
    },
    {
      "Start": "d49412d1ab0d4f0f87ed833c60a6bfe7",
      "End": "cfb81f284c364f05ad5b57d289d251b4",
      "Id": "02cf55d8e2c648d89c3032b3f31222c2"
    },
    {
      "Start": "98227ee508c94856a44b52a766ff8a67",
      "End": "b81dbf3da4e640e9949d0302496ba601",
      "Id": "e873e05b02454958a41db756d0b1d726"
    },
    {
      "Start": "e0b83cd465ab42f195a25ad47c2b835e",
      "End": "09c0c1a67a4c4411a8ebb293a8be126f",
      "Id": "82ef2a1d5e2b4338b5b9665d5c302aa0"
    },
    {
      "Start": "5ed02d2733264772b83ad73a452571a2",
      "End": "5b78a3ef281d4b8387841b86a93a0dc1",
      "Id": "2d7c7c1a069e41918c5cb12df265529a"
    },
    {
      "Start": "78108871d5354a03b33784d77c9a7545",
      "End": "fb8428412a834a94a1b625971dc1ab73",
      "Id": "742145eb89b3451b8dda19174d0997da"
    },
    {
      "Start": "8b519537bc8145d19130dad3ceccc768",
      "End": "38e5c10105194678b80a76ca93d80a9d",
      "Id": "7e848680c5984b2c9bd07d87f1f0bf6b"
    },
    {
      "Start": "307ef0954a6d424b9d455571cbfc1e97",
      "End": "846206ce4f2f4bc6a504e07bb53710ba",
      "Id": "da1c62c8811449719510b818070ca679"
    },
    {
      "Start": "c6d7f6d66d02459ca952a4fb2f013693",
      "End": "d82ca93404554344ba784595452e7979",
      "Id": "ebd263f4a9bf4f1b91d7674d5e349904"
    },
    {
      "Start": "c6d7f6d66d02459ca952a4fb2f013693",
      "End": "ae2e1c06fe5047858df76790b6f6e112",
      "Id": "154fc0d18dbf45208076745a43c90a69"
    },
    {
      "Start": "c6d7f6d66d02459ca952a4fb2f013693",
      "End": "abd1cae8d45144c9ad20ef84a4c42122",
      "Id": "7c968224c31a48b4bf6b471fd4e408b2"
    },
    {
      "Start": "1670ea79c43d471fa64dae50b19aaaf6",
      "End": "2bdad1231e3d4a6eb1d93fcc4cccfbb8",
      "Id": "641b3ef7b2cf47ddb3c8c82d5621d653"
    },
    {
      "Start": "8491f7b1589748a38a9ddda5d5f4a975",
      "End": "c8725273da8c4bdbb3484900c63ffe21",
      "Id": "5934b5ab333543f78794a39e988f388e"
    },
    {
      "Start": "d33b19b070544d928a9a7fe05a575625",
      "End": "bc48f9e8b90c48fe8963d8fd2c7150e4",
      "Id": "e61ee0b1a1c24a7cad27c878d102618d"
    },
    {
      "Start": "d33b19b070544d928a9a7fe05a575625",
      "End": "5e866a8f16004e49afaa1a575c6bcb08",
      "Id": "b75d767e0b9645d9b6371cef14a6503b"
    },
    {
      "Start": "abc7de9a1a7242258ff10bf91455529b",
      "End": "6b0b015e9eae4119a3232845bb8c425e",
      "Id": "1825af2e09dd4e1c93acf693da56b11e"
    },
    {
      "Start": "bcf49cb2117545c687994ffb9f0818df",
      "End": "7b47d228359c4e6fbe672c413a827051",
      "Id": "86e7d1b2b0d041eb8690b6624f3f3bf8"
    },
    {
      "Start": "93b4080c920042e29a8ce99003fa5b02",
      "End": "7c4d9225dd624773bca3992275e947d9",
      "Id": "41f8b0770a304277881fa708af20c0d7"
    },
    {
      "Start": "bdd5163dc5ef4bfe9c433f8a3404b7c0",
      "End": "fe199a29baab4126855e0db3d8e0c45c",
      "Id": "6c09ba94959a46a5abf0e94b36952abf"
    },
    {
      "Start": "fcdf178f57ab4a19bd828d8e2e3e994c",
      "End": "2062e13e20df4cd59eeab3ed7f16b2f7",
      "Id": "4416ee0302da4585ad2ca9bd73b6b15c"
    },
    {
      "Start": "5363bb1b996b4d3e811a8731d9f7f3f3",
      "End": "56aae8138e924a188821cc5a94a24621",
      "Id": "714f000efd9d403daec27f30b8528897"
    },
    {
      "Start": "5143a8effdb8429599aeb1b97b3852ee",
      "End": "c56071cccfd8432c9d58c073fa4c0594",
      "Id": "e6b8f1e703434a7e94ca15787540a01f"
    },
    {
      "Start": "1e5308391fde40c796ee8a5fafbf7142",
      "End": "f6c796eb59f549109a152e172300b6e1",
      "Id": "e05ae053a3a84cdd8f5b71ca858494fb"
    },
    {
      "Start": "bbb3a8dfcb6c4b9e9b5033890ab4a4df",
      "End": "20f75b8b17bb4298b2ba0539ba0db4ea",
      "Id": "15ba1962e62f459ebaa00c76fddd4b06"
    },
    {
      "Start": "594fc735a4a744cdb34e974d0b0de582",
      "End": "30da145fae2c455391a85d52808207c8",
      "Id": "5a4ae2a2e7a44138a37d4ebaea5216ce"
    },
    {
      "Start": "00fd8ab41e104be0bf9bc7a9c3fc8309",
      "End": "caefaf8d8f544ce5b19ac6065debdd14",
      "Id": "9878b4c88fe1463ca930886a1ad99fd6"
    },
    {
      "Start": "38562854df574067b1508f29559fb776",
      "End": "2d8bc1e8aed14369b7840286b1367ce7",
      "Id": "c047723c738240f3a8456821b7b91b09"
    },
    {
      "Start": "1f4430e14f6345ec94e2c516b69d5310",
      "End": "62d31c5f37ff49da9eccc65f17c4844d",
      "Id": "7777258e87d74fbf90543536ab762345"
    },
    {
      "Start": "f5587c403123484c840a8e57eccadafb",
      "End": "4eb490493b274884af97c87d89db9de2",
      "Id": "b9ab061c2c1c4eabb01b08b38162ab48"
    },
    {
      "Start": "fcee8fa36f0842848585d1a67723cfc2",
      "End": "1137ba03fde64540bdfc1116d1658c79",
      "Id": "af2aab6ec968449e8a8a37545588a962"
    },
    {
      "Start": "4022046924ba40138b21a4e5eec37480",
      "End": "e74275c856e948bd898c8ee97ba0616c",
      "Id": "04e59821c6e8453994db8fb0ededfd5c"
    },
    {
      "Start": "1e188068fb464738b5de232173e7221a",
      "End": "9028930ae0934fe69f78862dd54f28e8",
      "Id": "470e27646d17465f9ebbfcb68016c565"
    },
    {
      "Start": "38d3818e3de24a00bf08f4c8a501504e",
      "End": "1a43fdf3190c49e0a1d99a76b566fd10",
      "Id": "6cb26ca2a70f415ab01bc7cc75db86db"
    },
    {
      "Start": "69a3f79324854978aa5e5a5d60ee7950",
      "End": "2556b260be4e4561a5a79245105d53e8",
      "Id": "2f40fd902b32477794bfb7a56b1f614e"
    },
    {
      "Start": "a853ef51195848de98274f1241ff80ad",
      "End": "b39e630478e74bebae0e91914b970bf2",
      "Id": "7a094a54adec40fe8370c0f6801999ee"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Default Camera",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "3be6fd98ef0143bea2dab7f9bfc588f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -1074.684821481668
      },
      {
        "Id": "f986b7d2ae434abb87390ab3d8dd0826",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -806.47148814833474
      },
      {
        "Id": "8462587d2d17498c834fde7e238c7176",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2242.5616765507493,
        "Y": -803.47148814833474
      },
      {
        "Id": "add58dda96864e5188334c0fb69038f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1736.0110580016703,
        "Y": -1291.4075260542793
      },
      {
        "Id": "5392f5cca93c46eaa3e5c6cd2029ef95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ViewTemplates.GetTemplateParameterIds",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1373.7416656315283,
        "Y": -1363.3534192156499
      },
      {
        "Id": "9c4f204a572d450588bd061797ce766a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -712.74166563152835,
        "Y": -1363.3534192156499
      },
      {
        "Id": "8d6d63a7854b4720a5e4ab7f928d120c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -998.74166563152835,
        "Y": -1363.3534192156499
      },
      {
        "Id": "1c91ea0db2bf4d519a7682ec2551c5c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ViewTemplates.GetParameterName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -458.96146679983849,
        "Y": -1364.6942155873323
      },
      {
        "Id": "36df69a1ad994b479e92988764cfb736",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 100.03853320016151,
        "Y": -1352.0121697447341
      },
      {
        "Id": "e484b7b9b7ca4e49bbd2d1e38991aaf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 320.03853320016151,
        "Y": -1352.0121697447341
      },
      {
        "Id": "e7d4f01313ee4a2fb1380f16543530b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -914.47148814833474
      },
      {
        "Id": "19c72ff6c9f648d1ba50157f442831e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1828.5616765507493,
        "Y": -807.68482148166811
      },
      {
        "Id": "83de392c0b984e1ab854571b6095f361",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -588.47148814833463
      },
      {
        "Id": "67475a7eae2f446fadd0bea798ac4e53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -478.47148814833486
      },
      {
        "Id": "de9d25119e154fe5832f47e469e5e391",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -370.47148814833486
      },
      {
        "Id": "3520b5e7df79440cba95a39470626fa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1384.5616765507493,
        "Y": -1390.684821481668
      },
      {
        "Id": "4fc1ae80718b4f92b6b9b02d14052030",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1817.4714881483346
      },
      {
        "Id": "d45b9946552b4e9cac566f7a6032b6fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1709.4714881483346
      },
      {
        "Id": "7f5bae4723794487a7762bcc591f8741",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1601.4714881483346
      },
      {
        "Id": "8ee999d6afed4899bc1868584ac862d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1493.4714881483346
      },
      {
        "Id": "247454c5d8064523b1ffc4aa2499f65f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1384.4714881483346
      },
      {
        "Id": "0cedb0ea9e2d45338ae5e7e0557d8283",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1276.4714881483346
      },
      {
        "Id": "28cedba299c648649102eee7bd641bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1168.4714881483346
      },
      {
        "Id": "dc340fb0835f446d81a73af91dedbf73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1384.5616765507493,
        "Y": -1048.684821481668
      },
      {
        "Id": "b1f062b3be6c4d52a7419e6f320539ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -1060.4714881483346
      },
      {
        "Id": "e6be6f0dca3d45bfa95f511cf65246a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -952.47148814833463
      },
      {
        "Id": "d143d0050c624fd2a0158a65d03c4f3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -844.47148814833463
      },
      {
        "Id": "b77f14f38a3a4dcebae17c64e459d451",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -736.47148814833463
      },
      {
        "Id": "cf3b7fa4429244deac2952e9e6be6325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -628.47148814833463
      },
      {
        "Id": "5a8850eedff94ea5a11b46a1fd1dd848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -520.47148814833463
      },
      {
        "Id": "337bab665fa14d94ae033aaf90d71322",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -412.47148814833463
      },
      {
        "Id": "1be45e0a3627428f928c916b4a517501",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2052.5616765507493,
        "Y": -803.47148814833474
      },
      {
        "Id": "4605ef632f634e6e9c87775e9418d3c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3046.7059675162895,
        "Y": -1451.9040039817378
      },
      {
        "Id": "4f094b437d184a438d0bba4a0ab62e75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3844.7059675162895,
        "Y": -1433.6906706484044
      },
      {
        "Id": "82580316408a4c54b60d6fef8ac19d40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3844.7059675162895,
        "Y": -1550.6906706484044
      },
      {
        "Id": "fc4411e054eb4b69aa149dc1e34973eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3844.7059675162895,
        "Y": -1325.6906706484044
      },
      {
        "Id": "e32f09cce363414ba8f87e34ab4545fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3844.7059675162895,
        "Y": -1658.6906706484044
      },
      {
        "Id": "b423212810ab4e948e65f0d61c18cb66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3844.7059675162895,
        "Y": -1217.6906706484044
      },
      {
        "Id": "24aaa3053de048e098de0b0bfeae6ce7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "If",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2794.6337361039846,
        "Y": -682.8408143433785
      },
      {
        "Id": "289fec778f574a878decbc069e9a550a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2569.259697956144,
        "Y": -681.75875194998423
      },
      {
        "Id": "b6c23225e5ee470fbf63166c6d5d66ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Looks up for some french to design the interface",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3855.689650529052,
        "Y": -76.966671559850511
      },
      {
        "Id": "fa99983ed3ba4992ac6b8c9cba4cb423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3846.2915017519658,
        "Y": -794.3167840891017
      },
      {
        "Id": "1385faf45c76417285be64df792f6702",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3846.2915017519658,
        "Y": -902.3167840891017
      },
      {
        "Id": "621c823d6d654759bd4cf9d9d0b95221",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3048.2915017519658,
        "Y": -694.53011742243507
      },
      {
        "Id": "f2cb64d352d54e418e2fe8db84a871ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3846.2915017519658,
        "Y": -676.3167840891017
      },
      {
        "Id": "6925c7b353254d67bf250f499d166c03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3846.2915017519658,
        "Y": -568.3167840891017
      },
      {
        "Id": "97ad7dbcceb6400794eb8ce68bc5163f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3846.2915017519658,
        "Y": -459.3167840891017
      },
      {
        "Id": "7f23d699c2d948b5b2d023a0f67d1192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1608.5616765507493,
        "Y": -697.68482148166822
      },
      {
        "Id": "54c14225cc1d4df19fded8bd0bef1418",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ViewTemplates.Include",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2528.2106622615438,
        "Y": -799.21822451763228
      },
      {
        "Id": "eb63654ab3bf4fd2932c7093c00f8a12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1932.5954949305183,
        "Y": -992.72705141830443
      },
      {
        "Id": "bf4eb94adda6422584203b05cb9db90c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2156.5954949305183,
        "Y": -996.94038475163779
      },
      {
        "Id": "0e7f88114b57496ba25a5f2538750dd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2335.5954949305183,
        "Y": -925.72705141830443
      },
      {
        "Id": "64a4ffe75eeb4a6699fd59e50f747ba2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2335.5954949305183,
        "Y": -1033.7270514183044
      },
      {
        "Id": "a1e826d1afc545dbbfbd16432326b725",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1172.5954949305183,
        "Y": -964.08038475163778
      },
      {
        "Id": "6bf65ee8deff491c97bb793c96f3f036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1570.4312681715387,
        "Y": -925.61831035094553
      },
      {
        "Id": "629bcc757a074e7589d9c4c44f19e9a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1711.5954949305183,
        "Y": -977.08038475163778
      },
      {
        "Id": "ffd0df6757854247b3f73cd4dffc8c8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List ViewTemplates",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2334.4352978323404,
        "Y": -1422.2588346142429
      },
      {
        "Id": "ee7eacc20fbc4eea8eac5755f61bc042",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2103.4352978323404,
        "Y": -1383.2588346142429
      },
      {
        "Id": "3131b5754dee426dab58d839c1f2ca05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2334.4352978323404,
        "Y": -1314.0455012809095
      },
      {
        "Id": "eb1603364e484eca96f3cf4895f46d8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Clean list",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -123.96146679983849,
        "Y": -1352.0121697447341
      },
      {
        "Id": "18cb1d03c01845de823ef338e9dc199f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -901.59549493051827,
        "Y": -912.08038475163778
      },
      {
        "Id": "0b69e9b0d793404c9c119f129e2cb03a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1007.189780157694,
        "Y": -843.46204167360509
      },
      {
        "Id": "6166a0cb4a5b4c9f814a1aa10ec9040b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -562.51105005583963,
        "Y": -923.84862347862543
      },
      {
        "Id": "8d5f98453d6847e5be9f7048275869e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -71.870378775086465,
        "Y": -1072.8303456839892
      },
      {
        "Id": "f8bc33bc35bb4a309803827b2018401c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 234.12962122491354,
        "Y": -1103.0436790173226
      },
      {
        "Id": "b29c7a9aefb64c91b09be50ab09589c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Id",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.651819805089,
        "Y": -828.1172952040954
      },
      {
        "Id": "cac5321e26184126956903cc36a9bca2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 505.12962122491354,
        "Y": -1077.0436790173226
      },
      {
        "Id": "b160a75c7ce340db8b4eed47fa135b07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 725.12962122491354,
        "Y": -1077.0436790173226
      },
      {
        "Id": "10fca8d759664e28a9df20186c4344d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1384.5616765507493,
        "Y": -706.684821481668
      },
      {
        "Id": "b6dc38e9397e4a69a51784796ce45839",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -304.47148814833463
      },
      {
        "Id": "e4034481646842579a9e66f5b0d5dd8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1106.5616765507493,
        "Y": -196.47148814833463
      },
      {
        "Id": "8ae93080f59f4807a90a75505569411c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "If",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2781.2446824773479,
        "Y": -495.05596650811196
      },
      {
        "Id": "3e8c8d16b3694dd483cf568cfd5727c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3463.0739953917273,
        "Y": -358.30980427815723
      },
      {
        "Id": "62821b60cf654a52b12cc8db3b398424",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3430.7191723242067,
        "Y": -1117.2986690145522
      },
      {
        "Id": "0aebdc5092ae447aa2dbeddbd3a0f0f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2842.3012793458115,
        "Y": -805.29534550916037
      },
      {
        "Id": "173d3940820a4fce8ceb766cfadafb5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3149.2637571386254,
        "Y": -836.6857463438696
      },
      {
        "Id": "e38dd75440b84223a8a9b52048ea9d8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3422.8703010417385,
        "Y": -1215.4095600454075
      },
      {
        "Id": "9ff8d41117f44baaa471f2efb79750f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3497.3150510383662,
        "Y": -444.23830367008691
      },
      {
        "Id": "92880132f16b4801bf92c80deaee44a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3734.2974302974771,
        "Y": -1150.9320202370293
      },
      {
        "Id": "b4a9a611ebf0498f8e61b3503081011d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3761.5593685375284,
        "Y": -364.31408927291415
      },
      {
        "Id": "11087797d12f47df96ba38095523cff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1349.2497511805575,
        "Y": -856.59409832048721
      },
      {
        "Id": "be8a9444e84f495da83260fad96ace7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1200.2150292340982,
        "Y": -854.4690416096912
      }
    ],
    "Annotations": [
      {
        "Id": "0d7a2d57323a4074a5fb3b1c804a99bd",
        "Title": "INPUT\r\nFrançais",
        "Nodes": [
          "4f094b437d184a438d0bba4a0ab62e75",
          "82580316408a4c54b60d6fef8ac19d40",
          "e32f09cce363414ba8f87e34ab4545fe",
          "fc4411e054eb4b69aa149dc1e34973eb",
          "b423212810ab4e948e65f0d61c18cb66",
          "4605ef632f634e6e9c87775e9418d3c5",
          "62821b60cf654a52b12cc8db3b398424"
        ],
        "Left": -3854.7059675162895,
        "Top": -1754.6906706484044,
        "Width": 938.0,
        "Height": 730.39200163385226,
        "FontSize": 36.0,
        "InitialTop": -1658.6906706484044,
        "InitialHeight": 686.39200163385226,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "b7143913070c4378bb966b3134e6db9f",
        "Title": "ACTION - DATA\r\nVérifier la langue de Revit",
        "Nodes": [
          "b6c23225e5ee470fbf63166c6d5d66ae"
        ],
        "Left": -3865.689650529052,
        "Top": -216.96667155985051,
        "Width": 334.0,
        "Height": 233.0,
        "FontSize": 36.0,
        "InitialTop": -76.966671559850511,
        "InitialHeight": 145.0,
        "TextblockHeight": 130.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1c20af57b18f4c5a98dd33ef137745d1",
        "Title": "INPUT\r\nEnglish",
        "Nodes": [
          "fa99983ed3ba4992ac6b8c9cba4cb423",
          "1385faf45c76417285be64df792f6702",
          "621c823d6d654759bd4cf9d9d0b95221",
          "f2cb64d352d54e418e2fe8db84a871ef",
          "6925c7b353254d67bf250f499d166c03",
          "97ad7dbcceb6400794eb8ce68bc5163f",
          "3e8c8d16b3694dd483cf568cfd5727c1"
        ],
        "Left": -3856.2915017519658,
        "Top": -998.3167840891017,
        "Width": 938.0,
        "Height": 733.00697981094447,
        "FontSize": 36.0,
        "InitialTop": -902.3167840891017,
        "InitialHeight": 689.00697981094447,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "728f7a1888814ec88f78b51e64b054a7",
        "Title": "ACTION  - DATA\r\nSet paramter inclusion or exclusion",
        "Nodes": [
          "54c14225cc1d4df19fded8bd0bef1418",
          "be322438daa74cb0952dcc91c82d9390"
        ],
        "Left": 2518.2106622615438,
        "Top": -1081.6932438557233,
        "Width": 251.0,
        "Height": 427.475019338091,
        "FontSize": 36.0,
        "InitialTop": -855.69324385572315,
        "InitialHeight": 201.47501933809087,
        "TextblockHeight": 216.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3ed220fa8b684ac680538126d4c3458c",
        "Title": "UI",
        "Nodes": [
          "3be6fd98ef0143bea2dab7f9bfc588f3",
          "f986b7d2ae434abb87390ab3d8dd0826",
          "8462587d2d17498c834fde7e238c7176",
          "e7d4f01313ee4a2fb1380f16543530b5",
          "19c72ff6c9f648d1ba50157f442831e6",
          "83de392c0b984e1ab854571b6095f361",
          "67475a7eae2f446fadd0bea798ac4e53",
          "de9d25119e154fe5832f47e469e5e391",
          "3520b5e7df79440cba95a39470626fa6",
          "4fc1ae80718b4f92b6b9b02d14052030",
          "d45b9946552b4e9cac566f7a6032b6fc",
          "7f5bae4723794487a7762bcc591f8741",
          "8ee999d6afed4899bc1868584ac862d4",
          "247454c5d8064523b1ffc4aa2499f65f",
          "0cedb0ea9e2d45338ae5e7e0557d8283",
          "28cedba299c648649102eee7bd641bbb",
          "dc340fb0835f446d81a73af91dedbf73",
          "b1f062b3be6c4d52a7419e6f320539ef",
          "e6be6f0dca3d45bfa95f511cf65246a6",
          "d143d0050c624fd2a0158a65d03c4f3f",
          "b77f14f38a3a4dcebae17c64e459d451",
          "cf3b7fa4429244deac2952e9e6be6325",
          "5a8850eedff94ea5a11b46a1fd1dd848",
          "337bab665fa14d94ae033aaf90d71322",
          "1be45e0a3627428f928c916b4a517501",
          "7f23d699c2d948b5b2d023a0f67d1192",
          "b6dc38e9397e4a69a51784796ce45839",
          "e4034481646842579a9e66f5b0d5dd8b",
          "10fca8d759664e28a9df20186c4344d0"
        ],
        "Left": 1096.5616765507493,
        "Top": -1870.4714881483346,
        "Width": 1246.0,
        "Height": 1767.0,
        "FontSize": 36.0,
        "InitialTop": -1817.4714881483346,
        "InitialHeight": 1766.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "0f34d2e8186841659e438599b20a217e",
        "Title": "ACTION - DATA\r\nList viewTemplate parameter ids",
        "Nodes": [
          "5392f5cca93c46eaa3e5c6cd2029ef95",
          "9c4f204a572d450588bd061797ce766a",
          "8d6d63a7854b4720a5e4ab7f928d120c",
          "622b5dbbe51d438289477fd5347a30f6"
        ],
        "Left": -1383.7416656315283,
        "Top": -1513.3534192156499,
        "Width": 834.0,
        "Height": 269.0,
        "FontSize": 36.0,
        "InitialTop": -1417.3534192156499,
        "InitialHeight": 199.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f8a39ed41235419db1ff75ea96661ae1",
        "Title": "ACTION - DATA\r\nList ViewTemplate parameter names",
        "Nodes": [
          "1c91ea0db2bf4d519a7682ec2551c5c1",
          "36df69a1ad994b479e92988764cfb736",
          "e484b7b9b7ca4e49bbd2d1e38991aaf1",
          "eb1603364e484eca96f3cf4895f46d8e",
          "7419b9aa03ef419b97aa58ccbf6cfc51"
        ],
        "Left": -468.96146679983849,
        "Top": -1514.6942155873323,
        "Width": 985.0,
        "Height": 281.6820458425982,
        "FontSize": 36.0,
        "InitialTop": -1418.6942155873323,
        "InitialHeight": 211.6820458425982,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "adeec4f27d37405e88b648e8b20ff02a",
        "Title": "ACTION - DATA\r\nList ViewTemplates",
        "Nodes": [
          "ffd0df6757854247b3f73cd4dffc8c8b",
          "ee7eacc20fbc4eea8eac5755f61bc042",
          "3131b5754dee426dab58d839c1f2ca05"
        ],
        "Left": -2344.4352978323404,
        "Top": -1518.2588346142429,
        "Width": 509.0,
        "Height": 297.21333333333337,
        "FontSize": 36.0,
        "InitialTop": -1422.2588346142429,
        "InitialHeight": 253.21333333333337,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d958a4689c1249619b4a4a1a6764fe39",
        "Title": "ACTION - DATA\r\nList ViewTemplates Names",
        "Nodes": [
          "add58dda96864e5188334c0fb69038f0"
        ],
        "Left": -1746.0110580016703,
        "Top": -1517.4075260542793,
        "Width": 245.60666666666668,
        "Height": 319.0,
        "FontSize": 36.0,
        "InitialTop": -1291.4075260542793,
        "InitialHeight": 145.0,
        "TextblockHeight": 216.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e133668d67fb49ecaf8e099e13510469",
        "Title": "ACTION - DATA\r\nList shared and project parameters",
        "Nodes": [
          "eb63654ab3bf4fd2932c7093c00f8a12",
          "bf4eb94adda6422584203b05cb9db90c",
          "0e7f88114b57496ba25a5f2538750dd3",
          "64a4ffe75eeb4a6699fd59e50f747ba2",
          "a1e826d1afc545dbbfbd16432326b725",
          "6bf65ee8deff491c97bb793c96f3f036",
          "629bcc757a074e7589d9c4c44f19e9a8",
          "18cb1d03c01845de823ef338e9dc199f",
          "0b69e9b0d793404c9c119f129e2cb03a"
        ],
        "Left": -2345.5954949305183,
        "Top": -1129.7270514183044,
        "Width": 1712.0,
        "Height": 379.26500974469934,
        "FontSize": 36.0,
        "InitialTop": -1033.7270514183044,
        "InitialHeight": 335.26500974469934,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9632e34de87e4033b0f7f47515c89cde",
        "Title": "ACTION - DATA\r\nProcess null and add shared parameter Id",
        "Nodes": [
          "8d5f98453d6847e5be9f7048275869e4",
          "f8bc33bc35bb4a309803827b2018401c",
          "cac5321e26184126956903cc36a9bca2",
          "b160a75c7ce340db8b4eed47fa135b07"
        ],
        "Left": -81.870378775086465,
        "Top": -1199.0436790173226,
        "Width": 1003.0,
        "Height": 241.0,
        "FontSize": 36.0,
        "InitialTop": -1103.0436790173226,
        "InitialHeight": 175.21333333333337,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a17735556f794cc7a879da28d17c627d",
        "Title": "PACKAGE NAME",
        "Nodes": [
          "6a7f68eab340460f8ba9b0b49ea29d32"
        ],
        "Left": -1939.4322413374839,
        "Top": -2101.9228046764606,
        "Width": 299.0,
        "Height": 184.0,
        "FontSize": 36.0,
        "InitialTop": -2048.9228046764606,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "a11bbeeb180f4384958b37c2b6caab4e",
        "Title": "ACTION - DATA",
        "Nodes": [
          "4c297894af334971bd108d3a488de9f1"
        ],
        "Left": -2656.7891395624451,
        "Top": -2097.5265643645416,
        "Width": 306.0,
        "Height": 141.0,
        "FontSize": 36.0,
        "InitialTop": -2044.5265643645416,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8282f774de364e8bb3fbb00341527009",
        "Title": "MONITORING - description",
        "Nodes": [
          "bd202b3d579943449a528b669f07ba5e"
        ],
        "Left": -1549.6613551921446,
        "Top": -2102.5715217200286,
        "Width": 302.0,
        "Height": 212.0,
        "FontSize": 36.0,
        "InitialTop": -2006.5715217200286,
        "InitialHeight": 140.0,
        "TextblockHeight": 86.0,
        "Background": "#FF848484"
      },
      {
        "Id": "19d722a20cc340a3a8a3b6c9d21ba1e6",
        "Title": "ACTION - GEOMETRY",
        "Nodes": [
          "11b1067942bb4c7ba7728c2772b798e0"
        ],
        "Left": -2306.8870024988219,
        "Top": -2100.1960067124287,
        "Width": 305.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": -2004.1960067124287,
        "InitialHeight": 140.0,
        "TextblockHeight": 86.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "70cbb39d77054c0fa797a17b2580da55",
        "Title": "BIMOne",
        "Nodes": [
          "0b89f565b32b440db23040c78d0e0b78",
          "fee936d1afbb4d668b2b287bac76aaa7",
          "89904aa55d544270bf7f2f616711e987",
          "622fb481e726499e992fb7b9f3c6a027",
          "2e23a13d3bca4f0eb35b90dd1cffea65"
        ],
        "Left": -3873.7036266268469,
        "Top": -2366.9423080780439,
        "Width": 1243.0973865297692,
        "Height": 132.02849019366886,
        "FontSize": 36.0,
        "InitialTop": -2313.9423080780439,
        "InitialHeight": 143.5986706917929,
        "TextblockHeight": 43.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "0e4b9447e218486d96c6b37c4d76512f",
        "Title": "UI",
        "Nodes": [
          "92b686adae624ccab0af8bdde9e0e2b5"
        ],
        "Left": -3112.286828783162,
        "Top": -2096.042612942731,
        "Width": 319.0,
        "Height": 155.0,
        "FontSize": 36.0,
        "InitialTop": -2043.042612942731,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "0c866b6dafda4e188ef176a97e3485d7",
        "Title": "CONSTRAINT",
        "Nodes": [
          "0d1207a9f3534860997879e68f0295c1"
        ],
        "Left": -3516.8963708879528,
        "Top": -2091.481915824289,
        "Width": 318.0,
        "Height": 112.0,
        "FontSize": 36.0,
        "InitialTop": -2038.481915824289,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "8160765adf934acb92e4b5145778b83b",
        "Title": "INPUT",
        "Nodes": [
          "f35683a83cff4dacbf177b6e38c4704a"
        ],
        "Left": -3864.6783526236186,
        "Top": -2088.3215191276781,
        "Width": 292.0,
        "Height": 112.0,
        "FontSize": 36.0,
        "InitialTop": -2035.3215191276781,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3dc7af3bfe1042cc8e42f6481739d201",
        "Title": "MONITORING\r\nCount how many were processed",
        "Nodes": [
          "173d3940820a4fce8ceb766cfadafb5e"
        ],
        "Left": 3139.2637571386254,
        "Top": -1019.6857463438696,
        "Width": 233.04666666666668,
        "Height": 328.0,
        "FontSize": 36.0,
        "InitialTop": -836.6857463438696,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FF848484"
      },
      {
        "Id": "622b5dbbe51d438289477fd5347a30f6",
        "Title": "archi-lab.net \r\n2019.2.23",
        "Nodes": [],
        "Left": -1373.7416656315283,
        "Top": -1417.3534192156499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7419b9aa03ef419b97aa58ccbf6cfc51",
        "Title": "archi-lab.net \r\n2019.2.23",
        "Nodes": [],
        "Left": -458.96146679983849,
        "Top": -1418.6942155873323,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "be322438daa74cb0952dcc91c82d9390",
        "Title": "archi-lab.net \r\n2019.2.23",
        "Nodes": [],
        "Left": 2534.3488956511533,
        "Top": -855.69324385572315,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d805c6b5f33a4ee580bb5febb9fef40f",
        "Title": "MONITORING",
        "Nodes": [],
        "Left": -1549.8659934522029,
        "Top": -2150.4027142124964,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8dfa58bc2c1f46b6a986b0ffb0b95c36",
        "Title": "BACKEND",
        "Nodes": [],
        "Left": -2655.3417605424697,
        "Top": -2150.9278799705353,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6a7f68eab340460f8ba9b0b49ea29d32",
        "Title": "Always name the specific package to facilitate debugging and deployment\r\n\r\nExploding a package helps deployment to clients\r\n\r\nExample:\r\nClockworks 1.5.5",
        "Nodes": [],
        "Left": -1929.4322413374839,
        "Top": -2048.9228046764606,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4c297894af334971bd108d3a488de9f1",
        "Title": "part of the script that affect data: \r\n\r\nExamples: \r\nACTION - DATA - get parameter name from txt file",
        "Nodes": [],
        "Left": -2646.7891395624451,
        "Top": -2044.5265643645416,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2e23a13d3bca4f0eb35b90dd1cffea65",
        "Title": "DEPENDANCIES\r\narchi-lab.net version: 2019.2.23\r\nCODE\r\nUI by data-shapes.io",
        "Nodes": [],
        "Left": -2824.6062400970777,
        "Top": -2312.9300728409935,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "92b686adae624ccab0af8bdde9e0e2b5",
        "Title": "User interface for the script: describe what the UI will do\r\n\r\nExample: \r\nUI - get shared parameter file path",
        "Nodes": [],
        "Left": -3102.286828783162,
        "Top": -2043.042612942731,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "89904aa55d544270bf7f2f616711e987",
        "Title": "EDITOR\r\nJean-Marc Couffin - Mai 2019- v1.1\r\nDynamo 2.0",
        "Nodes": [],
        "Left": -3041.4959074125536,
        "Top": -2312.913817884375,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bd202b3d579943449a528b669f07ba5e",
        "Title": "ckeck the integrity and consistency of data or geometry affected \r\n\r\nExamples: \r\nnumber of rooms matches number of parameters changed",
        "Nodes": [],
        "Left": -1539.6613551921446,
        "Top": -2006.5715217200286,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "11b1067942bb4c7ba7728c2772b798e0",
        "Title": "part of the script that affect  geometry: \r\n\r\nExamples: \r\nACTION - GEOMETRY - translate geometry to new location",
        "Nodes": [],
        "Left": -2296.8870024988219,
        "Top": -2004.1960067124287,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1622cc497d7a4ec8916ecdc4574b9af1",
        "Title": "USER INTERFACE",
        "Nodes": [],
        "Left": -3110.1171973201162,
        "Top": -2149.5601139404093,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "622fb481e726499e992fb7b9f3c6a027",
        "Title": "CREATOR\r\nJean-Marc Couffin - Janvier 2019- v1.0\r\nDynamo 2.0",
        "Nodes": [],
        "Left": -3278.2561414437114,
        "Top": -2313.9423080780439,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0d1207a9f3534860997879e68f0295c1",
        "Title": "Fixed input that should not be set as inputs available through the dynamo player",
        "Nodes": [],
        "Left": -3506.8963708879528,
        "Top": -2038.481915824289,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fee936d1afbb4d668b2b287bac76aaa7",
        "Title": "Copyright:\r\nThis script is provided \"as-is\" under MIT License",
        "Nodes": [],
        "Left": -3563.954490123157,
        "Top": -2312.6087098989892,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f35683a83cff4dacbf177b6e38c4704a",
        "Title": "input by user that should be set as input for the dynamo player",
        "Nodes": [],
        "Left": -3854.6783526236186,
        "Top": -2035.3215191276781,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0b89f565b32b440db23040c78d0e0b78",
        "Title": "Created by BIMOne\r\nInclude or exclude parameters from view templates",
        "Nodes": [],
        "Left": -3863.7036266268469,
        "Top": -2310.343637386251,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b654ba58cae244ada22cb65fb2a9e71d",
        "Title": "INPUT",
        "Nodes": [],
        "Left": -3865.5896358273262,
        "Top": -2136.2954915342884,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -424.1843049009388,
    "Y": 661.77289354728759,
    "Zoom": 0.372150634465931
  }
}